{"version":3,"file":"index.js","sources":["../src/hooks/useKeyPress.ts","../src/config/searchFacets.ts","../src/constants.ts","../src/contexts/AssetSourceDispatchContext.tsx","../src/hooks/useVersionedClient.ts","../src/config/orders.ts","../src/operators/debugThrottle.ts","../src/utils/constructFilter.ts","../src/operators/checkTagName.ts","../src/utils/getTagSelectOptions.ts","../src/modules/assets/actions.ts","../src/modules/dialog/actions.ts","../src/modules/tags/index.ts","../src/modules/search/index.ts","../src/modules/uploads/actions.ts","../src/modules/assets/index.ts","../src/styled/GlobalStyles/index.tsx","../src/hooks/useTypedSelector.ts","../src/modules/dialog/index.ts","../src/components/ButtonViewGroup/index.tsx","../src/components/OrderSelect/index.tsx","../src/components/Progress/index.tsx","../src/components/SearchFacet/index.tsx","../src/components/TextInputNumber/index.tsx","../src/components/SearchFacetNumber/index.tsx","../src/components/SearchFacetSelect/index.tsx","../src/components/SearchFacetString/index.tsx","../src/styled/react-select/single.tsx","../src/components/SearchFacetTags/index.tsx","../src/components/SearchFacets/index.tsx","../src/components/SearchFacetsControl/index.tsx","../src/components/TagIcon/index.tsx","../src/components/TextInputSearch/index.tsx","../src/components/Controls/index.tsx","../src/modules/debug/index.ts","../src/components/DebugControls/index.tsx","../src/utils/imageDprUrl.ts","../src/utils/sanitizeFormData.ts","../src/utils/typeGuards.ts","../src/utils/getAssetResolution.ts","../src/components/ButtonAssetCopy/index.tsx","../src/components/AssetMetadata/index.tsx","../src/components/Dialog/index.tsx","../src/components/DocumentList/index.tsx","../src/components/FileIcon/index.tsx","../src/components/FileAssetPreview/index.tsx","../src/components/FormFieldInputLabel/index.tsx","../src/components/FormFieldInputFilename/index.tsx","../src/styled/react-select/creatable.tsx","../src/components/FormFieldInputTags/index.tsx","../src/components/FormFieldInputText/index.tsx","../src/components/FormFieldInputTextarea/index.tsx","../src/components/FormSubmitButton/index.tsx","../src/components/Image/index.tsx","../src/components/DialogAssetEdit/index.tsx","../src/components/DialogConfirm/index.tsx","../src/components/DialogSearchFacets/index.tsx","../src/components/DialogTagCreate/index.tsx","../src/components/DialogTagEdit/index.tsx","../src/components/Tag/index.tsx","../src/components/TagsVirtualized/index.tsx","../src/components/TagViewHeader/index.tsx","../src/components/TagView/index.tsx","../src/components/DialogTags/index.tsx","../src/components/Dialogs/index.tsx","../src/contexts/DropzoneDispatchContext.tsx","../src/components/Header/index.tsx","../src/modules/selectors.ts","../src/components/CardAsset/index.tsx","../src/utils/generatePreviewBlobUrl.ts","../src/utils/withMaxConcurrency.ts","../src/utils/uploadSanityAsset.ts","../src/modules/uploads/index.ts","../src/components/CardUpload/index.tsx","../src/components/AssetGridVirtualized/index.tsx","../src/components/TableHeaderItem/index.tsx","../src/components/TableHeader/index.tsx","../src/components/TableRowAsset/index.tsx","../src/components/TableRowUpload/index.tsx","../src/components/AssetTableVirtualized/index.tsx","../src/components/Items/index.tsx","../src/hooks/useBreakpointIndex.ts","../src/components/Notifications/index.tsx","../src/components/PickedBar/index.tsx","../src/modules/selected/index.ts","../src/modules/notifications/index.ts","../src/modules/index.ts","../src/utils/getDocumentAssetIds.ts","../src/components/ReduxProvider/index.tsx","../src/components/TagsPanel/index.tsx","../src/components/UploadDropzone/index.tsx","../src/components/Browser/index.tsx","../src/components/FormBuilderTool/index.tsx","../src/schemas/tag.ts","../src/index.ts","../src/components/Tool/index.tsx"],"sourcesContent":["import isHotkey from 'is-hotkey'\nimport {RefObject, useEffect, useRef} from 'react'\n\nconst useKeyPress = (hotkey: string, onPress?: () => void): RefObject<boolean> => {\n  const keyPressed = useRef(false)\n\n  // If pressed key is our target key then set to true\n  function downHandler(e: KeyboardEvent) {\n    if (isHotkey(hotkey, e)) {\n      keyPressed.current = true\n\n      if (onPress) {\n        onPress()\n      }\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = () => {\n    keyPressed.current = false\n  }\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed\n}\n\nexport default useKeyPress\n","import {\n  SearchFacetDivider,\n  SearchFacetInputProps,\n  SearchFacetName,\n  SearchFacetOperators\n} from '@types'\nimport groq from 'groq'\n\nexport const divider: SearchFacetDivider = {type: 'divider'}\n\nexport const inputs: Record<SearchFacetName, SearchFacetInputProps> = {\n  altText: {\n    assetTypes: ['file', 'image'],\n    field: 'altText',\n    name: 'altText',\n    operatorType: 'empty',\n    operatorTypes: ['empty', 'notEmpty', null, 'includes', 'doesNotInclude'],\n    title: 'Alt text',\n    type: 'string',\n    value: ''\n  },\n  description: {\n    assetTypes: ['file', 'image'],\n    field: 'description',\n    name: 'description',\n    operatorType: 'empty',\n    operatorTypes: ['empty', 'notEmpty', null, 'includes', 'doesNotInclude'],\n    title: 'Description',\n    type: 'string',\n    value: ''\n  },\n  fileName: {\n    assetTypes: ['file', 'image'],\n    field: 'originalFilename',\n    name: 'filename',\n    operatorType: 'includes',\n    operatorTypes: ['includes', 'doesNotInclude'],\n    title: 'File name',\n    type: 'string',\n    value: ''\n  },\n  height: {\n    assetTypes: ['image'],\n    field: 'metadata.dimensions.height',\n    name: 'height',\n    operatorType: 'greaterThan',\n    operatorTypes: [\n      'greaterThan',\n      'greaterThanOrEqualTo',\n      'lessThan',\n      'lessThanOrEqualTo',\n      null,\n      'equalTo'\n    ],\n    title: 'Height',\n    type: 'number',\n    value: 400\n  },\n  inCurrentDocument: {\n    assetTypes: ['file', 'image'],\n    name: 'inCurrentDocument',\n    operatorType: 'is',\n    options: [\n      {\n        name: 'true',\n        title: 'True',\n        value: groq`_id in $documentAssetIds`\n      },\n      {\n        name: 'false',\n        title: 'False',\n        value: groq`!(_id in $documentAssetIds)`\n      }\n    ],\n    selectOnly: true,\n    title: 'In use in current document',\n    type: 'select',\n    value: 'true'\n  },\n  inUse: {\n    assetTypes: ['file', 'image'],\n    name: 'inUse',\n    operatorType: 'is',\n    options: [\n      {\n        name: 'true',\n        title: 'True',\n        value: groq`count(*[references(^._id)]) > 0`\n      },\n      {\n        name: 'false',\n        title: 'False',\n        value: groq`count(*[references(^._id)]) == 0`\n      }\n    ],\n    title: 'In use',\n    type: 'select',\n    value: 'true'\n  },\n  isOpaque: {\n    assetTypes: ['image'],\n    field: 'metadata.isOpaque',\n    name: 'isOpaque',\n    operatorType: 'equalTo',\n    options: [\n      {\n        name: 'true',\n        title: 'True',\n        value: `false`\n      },\n      {\n        name: 'false',\n        title: 'False',\n        value: `true`\n      }\n    ],\n    title: 'Has transparency',\n    type: 'select',\n    value: 'true'\n  },\n  orientation: {\n    assetTypes: ['image'],\n    name: 'orientation',\n    operatorType: 'is',\n    operatorTypes: ['is', 'isNot'],\n    options: [\n      {\n        name: 'portrait',\n        title: 'Portrait',\n        value: 'metadata.dimensions.aspectRatio < 1'\n      },\n      {\n        name: 'landscape',\n        title: 'Landscape',\n        value: 'metadata.dimensions.aspectRatio > 1'\n      },\n      {\n        name: 'square',\n        title: 'Square',\n        value: 'metadata.dimensions.aspectRatio == 1'\n      }\n    ],\n    title: 'Orientation',\n    type: 'select',\n    value: 'portrait'\n  },\n  size: {\n    assetTypes: ['file', 'image'],\n    field: 'size',\n    modifier: 'kb',\n    modifiers: [\n      {\n        name: 'kb',\n        title: 'KB',\n        fieldModifier: fieldName => `round(${fieldName} / 1000)`\n      },\n      {\n        name: 'mb',\n        title: 'MB',\n        fieldModifier: fieldName => `round(${fieldName} / 1000000)`\n      }\n    ],\n    name: 'size',\n    operatorType: 'greaterThan',\n    operatorTypes: [\n      'greaterThan',\n      'greaterThanOrEqualTo',\n      'lessThan',\n      'lessThanOrEqualTo',\n      null,\n      'equalTo'\n    ],\n    title: 'File size',\n    type: 'number',\n    value: 0\n  },\n  tag: {\n    assetTypes: ['file', 'image'],\n    field: 'opt.media.tags',\n    name: 'tag',\n    operatorType: 'references',\n    operatorTypes: ['references', 'doesNotReference', null, 'empty', 'notEmpty'],\n    title: 'Tags',\n    type: 'searchable'\n  },\n  title: {\n    assetTypes: ['file', 'image'],\n    field: 'title',\n    name: 'title',\n    operatorType: 'empty',\n    operatorTypes: ['empty', 'notEmpty', null, 'includes', 'doesNotInclude'],\n    title: 'Title',\n    type: 'string',\n    value: ''\n  },\n  type: {\n    assetTypes: ['file', 'image'],\n    name: 'type',\n    operatorType: 'is',\n    operatorTypes: ['is', 'isNot'],\n    options: [\n      {\n        name: 'image',\n        title: 'Image',\n        value: 'mimeType match \"image*\"'\n      },\n      {\n        name: 'video',\n        title: 'Video',\n        value: 'mimeType match \"video*\"'\n      },\n      {\n        name: 'audio',\n        title: 'Audio',\n        value: 'mimeType match \"audio*\"'\n      },\n      {\n        name: 'pdf',\n        title: 'PDF',\n        value: 'mimeType == \"application/pdf\"'\n      }\n    ],\n    title: 'File type',\n    type: 'select',\n    value: 'image'\n  },\n  width: {\n    assetTypes: ['image'],\n    field: 'metadata.dimensions.width',\n    name: 'width',\n    operatorType: 'greaterThan',\n    operatorTypes: [\n      'greaterThan',\n      'greaterThanOrEqualTo',\n      'lessThan',\n      'lessThanOrEqualTo',\n      null,\n      'equalTo'\n    ],\n    title: 'Width',\n    type: 'number',\n    value: 400\n  }\n}\n\nexport const operators: SearchFacetOperators = {\n  doesNotInclude: {\n    fn: (value, field) => (value ? `!(${field} match '*${value}*')` : undefined),\n    label: 'does not include'\n  },\n  doesNotReference: {\n    fn: (value, _field) => (value ? `!references('${value}')` : undefined),\n    label: 'does not include'\n  },\n  empty: {\n    fn: (_value, field) => `!defined(${field})`,\n    hideInput: true,\n    label: 'is empty'\n  },\n  equalTo: {\n    fn: (value, field) => (value ? `${field} == ${value}` : undefined),\n    label: 'is equal to'\n  },\n  greaterThan: {\n    fn: (value, field) => (value ? `${field} > ${value}` : undefined),\n    label: 'is greater than'\n  },\n  greaterThanOrEqualTo: {\n    fn: (value, field) => (value ? `${field} >= ${value}` : undefined),\n    label: 'is greater than or equal to'\n  },\n  includes: {\n    fn: (value, field) => (value ? `${field} match '*${value}*'` : undefined),\n    label: 'includes'\n  },\n  is: {\n    fn: (value, _field) => `${value}`,\n    label: 'is'\n  },\n  isNot: {\n    fn: (value, _field) => `!(${value})`,\n    label: 'is not'\n  },\n  lessThan: {\n    fn: (value, field) => (value ? `${field} < ${value}` : undefined),\n    label: 'is less than'\n  },\n  lessThanOrEqualTo: {\n    fn: (value, field) => (value ? `${field} <= ${value}` : undefined),\n    label: 'is less than or equal to'\n  },\n  notEmpty: {\n    fn: (_value, field) => `defined(${field})`,\n    hideInput: true,\n    label: 'is not empty'\n  },\n  references: {\n    fn: (value, _field) => (value ? `references('${value}')` : undefined),\n    label: 'includes'\n  }\n}\n","import {SearchFacetInputProps, SearchFacetDivider, SearchFacetGroup, OrderDirection} from '@types'\nimport {divider, inputs} from './config/searchFacets'\n\n// Sort order dropdown options\n// null values are represented as menu dividers\nexport const ORDER_OPTIONS: ({direction: OrderDirection; field: string} | null)[] = [\n  {\n    direction: 'desc',\n    field: '_createdAt'\n  },\n  {\n    direction: 'asc',\n    field: '_createdAt'\n  },\n  // Divider\n  null,\n  {\n    direction: 'desc',\n    field: '_updatedAt'\n  },\n  {\n    direction: 'asc' as OrderDirection,\n    field: '_updatedAt'\n  },\n  // Divider\n  null,\n  {\n    direction: 'asc',\n    field: 'originalFilename'\n  },\n  {\n    direction: 'desc',\n    field: 'originalFilename'\n  },\n  // Divider\n  null,\n  {\n    direction: 'desc',\n    field: 'size'\n  },\n  {\n    direction: 'asc',\n    field: 'size'\n  }\n]\n\nexport const FACETS: (SearchFacetDivider | SearchFacetGroup | SearchFacetInputProps)[] = [\n  inputs.tag,\n  divider,\n  inputs.inUse,\n  inputs.inCurrentDocument,\n  divider,\n  inputs.title,\n  inputs.altText,\n  inputs.description,\n  divider,\n  inputs.isOpaque,\n  divider,\n  inputs.fileName,\n  inputs.size,\n  inputs.type,\n  divider,\n  inputs.orientation,\n  inputs.width,\n  inputs.height\n]\n\nexport const GRID_TEMPLATE_COLUMNS = {\n  SMALL: '3rem 100px auto 1.5rem',\n  LARGE: '3rem 100px auto 5.5rem 5.5rem 3.5rem 8.5rem 2rem'\n}\nexport const PANEL_HEIGHT = 32 // px\nexport const TAG_DOCUMENT_NAME = 'media.tag'\nexport const TAGS_PANEL_WIDTH = 250 // px\n","import React, {ReactNode, createContext, useContext} from 'react'\nimport type {AssetSourceComponentProps} from 'sanity'\n\ntype ContextProps = {\n  onSelect?: AssetSourceComponentProps['onSelect']\n}\n\ntype Props = {\n  children: ReactNode\n  onSelect?: AssetSourceComponentProps['onSelect']\n}\n\nconst AssetSourceDispatchContext = createContext<ContextProps | undefined>(undefined)\n\nexport const AssetBrowserDispatchProvider = (props: Props) => {\n  const {children, onSelect} = props\n\n  const contextValue: ContextProps = {\n    onSelect\n  }\n\n  return (\n    <AssetSourceDispatchContext.Provider value={contextValue}>\n      {children}\n    </AssetSourceDispatchContext.Provider>\n  )\n}\n\nexport const useAssetSourceActions = () => {\n  const context = useContext(AssetSourceDispatchContext)\n  if (context === undefined) {\n    throw new Error('useAssetSourceActions must be used within an AssetSourceDispatchProvider')\n  }\n  return context\n}\n\nexport default AssetSourceDispatchContext\n","import type {SanityClient} from '@sanity/client'\nimport {useClient} from 'sanity'\n\nconst useVersionedClient = (): SanityClient => useClient({apiVersion: '2022-10-01'})\n\nexport default useVersionedClient\n","import type {OrderDirection} from '../types'\n\nconst ORDER_DICTIONARY: Record<string, {asc: string; desc: string}> = {\n  _createdAt: {\n    asc: 'Last created: Oldest first',\n    desc: 'Last created: Newest first'\n  },\n  _updatedAt: {\n    asc: 'Last updated: Oldest first',\n    desc: 'Last updated: Newest first'\n  },\n  mimeType: {\n    asc: 'MIME type: A to Z',\n    desc: 'MIME type: Z to A'\n  },\n  originalFilename: {\n    asc: 'File name: A to Z',\n    desc: 'File name: Z to A'\n  },\n  size: {\n    asc: 'File size: Smallest first',\n    desc: 'File size: Largest first'\n  }\n}\n\nexport const getOrderTitle = (field: string, direction: OrderDirection): string => {\n  return ORDER_DICTIONARY[field][direction]\n}\n","import {iif, Observable, of, throwError} from 'rxjs'\nimport {delay, mergeMap} from 'rxjs/operators'\n\nconst debugThrottle = (throttled?: boolean) => {\n  return function <T>(source: Observable<T>): Observable<T> {\n    return iif(\n      () => !!throttled,\n      source.pipe(\n        delay(3000),\n        mergeMap(v => {\n          if (Math.random() > 0.5) {\n            return throwError({\n              message: 'Test error',\n              statusCode: 500\n            })\n          }\n          return of(v)\n        })\n      ),\n      source\n    )\n  }\n}\n\nexport default debugThrottle\n","import {AssetType, SearchFacetInputProps} from '@types'\nimport groq from 'groq'\n\nimport {operators} from '../config/searchFacets'\n\nconst constructFilter = ({\n  assetTypes,\n  searchFacets,\n  searchQuery\n}: {\n  assetTypes: AssetType[]\n  searchFacets: SearchFacetInputProps[]\n  searchQuery?: string\n}): string => {\n  // Fetch asset types depending on current context.\n  // Either limit to a specific type (if being used as a custom asset source) or fetch both files and images (if being used as a tool)\n  // Sanity will crash if you try and insert incompatible asset types into fields!\n  const documentAssetTypes = assetTypes.map(type => `sanity.${type}Asset`)\n\n  const baseFilter = groq`\n    _type in ${JSON.stringify(documentAssetTypes)} && !(_id in path(\"drafts.**\"))\n  `\n\n  const searchFacetFragments = searchFacets.reduce((acc: string[], facet) => {\n    if (facet.type === 'number') {\n      const {field, modifier, modifiers, operatorType, value} = facet\n      const operator = operators[operatorType]\n\n      // Get current modifier\n      const currentModifier = modifiers?.find(m => m.name === modifier)\n\n      // Apply field modifier function (if present)\n      const facetField = currentModifier?.fieldModifier\n        ? currentModifier.fieldModifier(field)\n        : field\n\n      const fragment = operator.fn(value, facetField)\n      if (fragment) {\n        acc.push(fragment)\n      }\n    }\n\n    if (facet.type === 'searchable') {\n      const {field, operatorType, value} = facet\n      const operator = operators[operatorType]\n\n      const fragment = operator.fn(value?.value, field)\n      if (fragment) {\n        acc.push(fragment)\n      }\n    }\n\n    if (facet.type === 'select') {\n      const {field, operatorType, options, value} = facet\n      const operator = operators[operatorType]\n\n      const currentOptionValue = options?.find(l => l.name === value)?.value\n\n      const fragment = operator.fn(currentOptionValue, field)\n      if (fragment) {\n        acc.push(fragment)\n      }\n    }\n\n    if (facet.type === 'string') {\n      const {field, operatorType, value} = facet\n      const operator = operators[operatorType]\n\n      const fragment = operator.fn(value, field)\n      if (fragment) {\n        acc.push(fragment)\n      }\n    }\n\n    return acc\n  }, [])\n\n  // Join separate filter fragments\n  const constructedQuery = [\n    // Base filter\n    baseFilter,\n    // Search query (if present)\n    // NOTE: Currently this only searches direct fields on sanity.fileAsset/sanity.imageAsset and NOT referenced tags\n    // It's possible to add this by adding the following line to the searchQuery, but it's quite slow\n    // references(*[_type == \"media.tag\" && name.current == \"${searchQuery.trim()}\"]._id)\n    ...(searchQuery\n      ? [\n          groq`[_id, altText, assetId, description, originalFilename, title, url] match '*${searchQuery.trim()}*'`\n        ]\n      : []),\n    // Search facets\n    ...searchFacetFragments\n  ].join(' && ')\n\n  return constructedQuery\n}\n\nexport default constructFilter\n","import type {SanityClient} from '@sanity/client'\nimport type {HttpError} from '@types'\nimport groq from 'groq'\nimport {from, Observable, of, throwError} from 'rxjs'\nimport {mergeMap} from 'rxjs/operators'\nimport {TAG_DOCUMENT_NAME} from '../constants'\n\nconst checkTagName = (client: SanityClient, name: string) => {\n  return function <T>(source: Observable<T>): Observable<boolean> {\n    return source.pipe(\n      mergeMap(() => {\n        return from(\n          client.fetch(groq`count(*[_type == \"${TAG_DOCUMENT_NAME}\" && name.current == $name])`, {\n            name\n          })\n        ) as Observable<number>\n      }),\n      mergeMap((existingTagCount: number) => {\n        if (existingTagCount > 0) {\n          return throwError({\n            message: 'Tag already exists',\n            statusCode: 409\n          } as HttpError)\n        }\n\n        return of(true)\n      })\n    )\n  }\n}\n\nexport default checkTagName\n","import {ReactSelectOption, TagItem} from '@types'\n\nconst getTagSelectOptions = (tags: TagItem[]): ReactSelectOption[] => {\n  return tags.reduce((acc: ReactSelectOption[], val) => {\n    const tag = val?.tag\n    if (tag) {\n      acc.push({\n        label: tag?.name?.current,\n        value: tag?._id\n      })\n    }\n    return acc\n  }, [])\n}\n\nexport default getTagSelectOptions\n","import {createAction} from '@reduxjs/toolkit'\nimport {AssetItem, HttpError, Tag} from '../../types'\n\nexport const ASSETS_ACTIONS = {\n  tagsAddComplete: createAction(\n    'actions/tagsAddComplete',\n    function prepare({assets, tag}: {assets: AssetItem[]; tag: Tag}) {\n      return {payload: {assets, tag}}\n    }\n  ),\n  tagsAddError: createAction(\n    'actions/tagsAddError',\n    function prepare({assets, error, tag}: {assets: AssetItem[]; error: HttpError; tag: Tag}) {\n      return {payload: {assets, error, tag}}\n    }\n  ),\n  tagsAddRequest: createAction(\n    'actions/tagsAddRequest',\n    function prepare({assets, tag}: {assets: AssetItem[]; tag: Tag}) {\n      return {payload: {assets, tag}}\n    }\n  ),\n  tagsRemoveComplete: createAction(\n    'actions/tagsRemoveComplete',\n    function prepare({assets, tag}: {assets: AssetItem[]; tag: Tag}) {\n      return {payload: {assets, tag}}\n    }\n  ),\n  tagsRemoveError: createAction(\n    'actions/tagsRemoveError',\n    function prepare({assets, error, tag}: {assets: AssetItem[]; error: HttpError; tag: Tag}) {\n      return {payload: {assets, error, tag}}\n    }\n  ),\n  tagsRemoveRequest: createAction(\n    'actions/tagsRemoveRequest',\n    function prepare({assets, tag}: {assets: AssetItem[]; tag: Tag}) {\n      return {payload: {assets, tag}}\n    }\n  )\n}\n","import {createAction} from '@reduxjs/toolkit'\n\nexport const DIALOG_ACTIONS = {\n  showTagCreate: createAction('dialog/showTagCreate'),\n  showTagEdit: createAction('dialog/showTagEdit', function prepare({tagId}: {tagId: string}) {\n    return {\n      payload: {tagId}\n    }\n  })\n}\n","import {createSelector, createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport type {ClientError, Transaction} from '@sanity/client'\nimport type {Asset, HttpError, MyEpic, ReactSelectOption, Tag, TagItem} from '@types'\nimport groq from 'groq'\nimport {Selector} from 'react-redux'\nimport {ofType} from 'redux-observable'\nimport {from, Observable, of} from 'rxjs'\nimport {bufferTime, catchError, filter, mergeMap, switchMap, withLatestFrom} from 'rxjs/operators'\nimport {TAG_DOCUMENT_NAME} from '../../constants'\nimport checkTagName from '../../operators/checkTagName'\nimport debugThrottle from '../../operators/debugThrottle'\nimport getTagSelectOptions from '../../utils/getTagSelectOptions'\nimport {ASSETS_ACTIONS} from '../assets/actions'\nimport {DIALOG_ACTIONS} from '../dialog/actions'\nimport type {RootReducerState} from '../types'\n\ntype TagsReducerState = {\n  allIds: string[]\n  byIds: Record<string, TagItem>\n  creating: boolean\n  creatingError?: HttpError\n  fetchCount: number\n  fetching: boolean\n  fetchingError?: HttpError\n  // totalCount: number\n  panelVisible: boolean\n}\n\nconst initialState = {\n  allIds: [],\n  byIds: {},\n  creating: false,\n  creatingError: undefined,\n  fetchCount: -1,\n  fetching: false,\n  fetchingError: undefined,\n  panelVisible: true\n} as TagsReducerState\n\nconst tagsSlice = createSlice({\n  name: 'tags',\n  initialState,\n  extraReducers: builder => {\n    builder\n      .addCase(DIALOG_ACTIONS.showTagCreate, state => {\n        delete state.creatingError\n      })\n      .addCase(DIALOG_ACTIONS.showTagEdit, (state, action) => {\n        const {tagId} = action.payload\n        delete state.byIds[tagId].error\n      })\n      .addMatcher(\n        action =>\n          [\n            ASSETS_ACTIONS.tagsAddComplete.type,\n            ASSETS_ACTIONS.tagsAddError.type,\n            ASSETS_ACTIONS.tagsRemoveComplete.type,\n            ASSETS_ACTIONS.tagsRemoveError.type\n          ].includes(action.type),\n        (state, action) => {\n          const {tag} = action.payload\n          state.byIds[tag._id].updating = false\n        }\n      )\n      .addMatcher(\n        action =>\n          [\n            ASSETS_ACTIONS.tagsAddRequest.type, //\n            ASSETS_ACTIONS.tagsRemoveRequest.type\n          ].includes(action.type),\n        (state, action) => {\n          const {tag} = action.payload\n          state.byIds[tag._id].updating = true\n        }\n      )\n  },\n  reducers: {\n    createComplete(state, action: PayloadAction<{assetId?: string; tag: Tag}>) {\n      const {tag} = action.payload\n      state.creating = false\n      if (!state.allIds.includes(tag._id)) {\n        state.allIds.push(tag._id)\n      }\n      state.byIds[tag._id] = {\n        _type: 'tag',\n        picked: false,\n        tag,\n        updating: false\n      }\n    },\n    createError(state, action: PayloadAction<{error: HttpError; name: string}>) {\n      state.creating = false\n      state.creatingError = action.payload.error\n    },\n    createRequest(state, _action: PayloadAction<{assetId?: string; name: string}>) {\n      state.creating = true\n      delete state.creatingError\n    },\n    deleteComplete(state, action: PayloadAction<{tagId: string}>) {\n      const {tagId} = action.payload\n      const deleteIndex = state.allIds.indexOf(tagId)\n      if (deleteIndex >= 0) {\n        state.allIds.splice(deleteIndex, 1)\n      }\n      delete state.byIds[tagId]\n    },\n    deleteError(state, action: PayloadAction<{error: HttpError; tag: Tag}>) {\n      const {error, tag} = action.payload\n\n      const tagId = tag?._id\n      state.byIds[tagId].error = error\n      state.byIds[tagId].updating = false\n    },\n    deleteRequest(state, action: PayloadAction<{tag: Tag}>) {\n      const tagId = action.payload?.tag?._id\n      state.byIds[tagId].picked = false\n      state.byIds[tagId].updating = true\n\n      Object.keys(state.byIds).forEach(key => {\n        delete state.byIds[key].error\n      })\n    },\n    fetchComplete(state, action: PayloadAction<{tags: Tag[]}>) {\n      const {tags} = action.payload\n\n      tags?.forEach(tag => {\n        state.allIds.push(tag._id)\n        state.byIds[tag._id] = {\n          _type: 'tag',\n          picked: false,\n          tag,\n          updating: false\n        }\n      })\n\n      state.fetching = false\n      state.fetchCount = tags.length || 0\n      delete state.fetchingError\n    },\n    fetchError(state, action: PayloadAction<{error: HttpError}>) {\n      const {error} = action.payload\n      state.fetching = false\n      state.fetchingError = error\n    },\n    fetchRequest: {\n      reducer: (state, _action: PayloadAction<{query: string}>) => {\n        state.fetching = true\n        delete state.fetchingError\n      },\n      prepare: () => {\n        // Construct query\n        const query = groq`\n          {\n            \"items\": *[\n              _type == \"${TAG_DOCUMENT_NAME}\"\n              && !(_id in path(\"drafts.**\"))\n            ] {\n              _createdAt,\n              _updatedAt,\n              _id,\n              _rev,\n              _type,\n              name\n            } | order(name.current asc),\n          }\n        `\n        return {payload: {query}}\n      }\n    },\n    // Queue batch tag creation\n    listenerCreateQueue(_state, _action: PayloadAction<{tag: Tag}>) {\n      //\n    },\n    // Apply created tags (via sanity real-time events)\n    listenerCreateQueueComplete(state, action: PayloadAction<{tags: Tag[]}>) {\n      const {tags} = action.payload\n\n      tags?.forEach(tag => {\n        state.byIds[tag._id] = {\n          _type: 'tag',\n          picked: false,\n          tag,\n          updating: false\n        }\n        if (!state.allIds.includes(tag._id)) {\n          state.allIds.push(tag._id)\n        }\n      })\n    },\n    // Queue batch tag deletion\n    listenerDeleteQueue(_state, _action: PayloadAction<{tagId: string}>) {\n      //\n    },\n    // Apply deleted tags (via sanity real-time events)\n    listenerDeleteQueueComplete(state, action: PayloadAction<{tagIds: string[]}>) {\n      const {tagIds} = action.payload\n\n      tagIds?.forEach(tagId => {\n        const deleteIndex = state.allIds.indexOf(tagId)\n        if (deleteIndex >= 0) {\n          state.allIds.splice(deleteIndex, 1)\n        }\n        delete state.byIds[tagId]\n      })\n    },\n    // Queue batch tag updates\n    listenerUpdateQueue(_state, _action: PayloadAction<{tag: Tag}>) {\n      //\n    },\n    // Apply updated tags (via sanity real-time events)\n    listenerUpdateQueueComplete(state, action: PayloadAction<{tags: Tag[]}>) {\n      const {tags} = action.payload\n\n      tags?.forEach(tag => {\n        if (state.byIds[tag._id]) {\n          state.byIds[tag._id].tag = tag\n        }\n      })\n    },\n    // Set tag panel visibility\n    panelVisibleSet(state, action: PayloadAction<{panelVisible: boolean}>) {\n      const {panelVisible} = action.payload\n      state.panelVisible = panelVisible\n    },\n    // Sort all tags by name\n    sort(state) {\n      state.allIds.sort((a, b) => {\n        const tagA = state.byIds[a].tag.name.current\n        const tagB = state.byIds[b].tag.name.current\n\n        if (tagA < tagB) {\n          return -1\n        } else if (tagA > tagB) {\n          return 1\n        }\n        return 0\n      })\n    },\n    updateComplete(state, action: PayloadAction<{closeDialogId?: string; tag: Tag}>) {\n      const {tag} = action.payload\n      state.byIds[tag._id].tag = tag\n      state.byIds[tag._id].updating = false\n    },\n    updateError(state, action: PayloadAction<{tag: Tag; error: HttpError}>) {\n      const {error, tag} = action.payload\n      const tagId = tag?._id\n      state.byIds[tagId].error = error\n      state.byIds[tagId].updating = false\n    },\n    updateRequest(\n      state,\n      action: PayloadAction<{\n        closeDialogId?: string\n        formData: Record<string, any>\n        tag: Tag\n      }>\n    ) {\n      const {tag} = action.payload\n      state.byIds[tag?._id].updating = true\n    }\n  }\n})\n\n// Epics\n\n// On tag create request:\n// - async check to see if tag already exists\n// - throw if tag already exists\n// - otherwise, create new tag\nexport const tagsCreateEpic: MyEpic = (action$, state$, {client}) =>\n  action$.pipe(\n    filter(tagsSlice.actions.createRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {assetId, name} = action.payload\n\n      return of(action).pipe(\n        debugThrottle(state.debug.badConnection),\n        checkTagName(client, name),\n        mergeMap(() =>\n          client.observable.create({\n            _type: TAG_DOCUMENT_NAME,\n            name: {\n              _type: 'slug',\n              current: name\n            }\n          })\n        ),\n        mergeMap(result => of(tagsSlice.actions.createComplete({assetId, tag: result as Tag}))),\n        catchError((error: ClientError) =>\n          of(\n            tagsSlice.actions.createError({\n              error: {\n                message: error?.message || 'Internal error',\n                statusCode: error?.statusCode || 500\n              },\n              name\n            })\n          )\n        )\n      )\n    })\n  )\n\n// On tag delete request\n// - find referenced assets\n// - remove tag from referenced assets in a sanity transaction\nexport const tagsDeleteEpic: MyEpic = (action$, state$, {client}) =>\n  action$.pipe(\n    filter(tagsSlice.actions.deleteRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {tag} = action.payload\n      return of(action).pipe(\n        // Optionally throttle\n        debugThrottle(state.debug.badConnection),\n        // Fetch assets which reference this tag\n        mergeMap(() =>\n          client.observable.fetch<Asset[]>(\n            groq`*[\n              _type in [\"sanity.fileAsset\", \"sanity.imageAsset\"]\n              && references(*[_type == \"media.tag\" && name.current == $tagName]._id)\n            ] {\n              _id,\n              _rev,\n              opt\n            }`,\n            {tagName: tag.name.current}\n          )\n        ),\n        // Create transaction which remove tag references from all matched assets and delete tag\n        mergeMap(assets => {\n          const patches = assets.map(asset => ({\n            id: asset._id,\n            patch: {\n              // this will cause the transaction to fail if the document has been modified since it was fetched.\n              ifRevisionID: asset._rev,\n              unset: [`opt.media.tags[_ref == \"${tag._id}\"]`]\n            }\n          }))\n\n          const transaction: Transaction = patches.reduce(\n            (tx, patch) => tx.patch(patch.id, patch.patch),\n            client.transaction()\n          )\n\n          transaction.delete(tag._id)\n\n          return from(transaction.commit())\n        }),\n        // Dispatch complete action\n        mergeMap(() => of(tagsSlice.actions.deleteComplete({tagId: tag._id}))),\n        catchError((error: ClientError) =>\n          of(\n            tagsSlice.actions.deleteError({\n              error: {\n                message: error?.message || 'Internal error',\n                statusCode: error?.statusCode || 500\n              },\n              tag\n            })\n          )\n        )\n      )\n    })\n  )\n\n// Async fetch tags\nexport const tagsFetchEpic: MyEpic = (action$, state$, {client}) =>\n  action$.pipe(\n    filter(tagsSlice.actions.fetchRequest.match),\n    withLatestFrom(state$),\n    switchMap(([action, state]) => {\n      const {query} = action.payload\n\n      return of(action).pipe(\n        // Optionally throttle\n        debugThrottle(state.debug.badConnection),\n        // Fetch tags\n        mergeMap(() =>\n          client.observable.fetch<{\n            items: Tag[]\n          }>(query)\n        ),\n        // Dispatch complete action\n        mergeMap(result => {\n          const {items} = result\n          return of(tagsSlice.actions.fetchComplete({tags: items}))\n        }),\n        catchError((error: ClientError) =>\n          of(\n            tagsSlice.actions.fetchError({\n              error: {\n                message: error?.message || 'Internal error',\n                statusCode: error?.statusCode || 500\n              }\n            })\n          )\n        )\n      )\n    })\n  )\n\n// TODO: merge all buffer epics\n// Buffer tag creation via sanity subscriber\nexport const tagsListenerCreateQueueEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(tagsSlice.actions.listenerCreateQueue.match),\n    bufferTime(2000),\n    filter(actions => actions.length > 0),\n    mergeMap(actions => {\n      const tags = actions?.map(action => action.payload.tag)\n      return of(tagsSlice.actions.listenerCreateQueueComplete({tags}))\n    })\n  )\n\n// TODO: merge all buffer epics\n// Buffer tag deletion via sanity subscriber\nexport const tagsListenerDeleteQueueEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(tagsSlice.actions.listenerDeleteQueue.match),\n    bufferTime(2000),\n    filter(actions => actions.length > 0),\n    mergeMap(actions => {\n      const tagIds = actions?.map(action => action.payload.tagId)\n      return of(tagsSlice.actions.listenerDeleteQueueComplete({tagIds}))\n    })\n  )\n\n// TODO: merge all buffer epics\n// Buffer tag update via sanity subscriber\nexport const tagsListenerUpdateQueueEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(tagsSlice.actions.listenerUpdateQueue.match),\n    bufferTime(2000),\n    filter(actions => actions.length > 0),\n    mergeMap(actions => {\n      const tags = actions?.map(action => action.payload.tag)\n      return of(tagsSlice.actions.listenerUpdateQueueComplete({tags}))\n    })\n  )\n\n// On successful tag creation or updates:\n// - Re-sort all tags\nexport const tagsSortEpic: MyEpic = action$ =>\n  action$.pipe(\n    ofType(\n      tagsSlice.actions.listenerCreateQueueComplete.type,\n      tagsSlice.actions.listenerUpdateQueueComplete.type\n    ),\n    bufferTime(1000),\n    filter(actions => actions.length > 0),\n    mergeMap(() => of(tagsSlice.actions.sort()))\n  )\n\n// On tag update request\n// - check if tag name already exists\n// - throw if tag already exists\n// - otherwise, patch document\nexport const tagsUpdateEpic: MyEpic = (action$, state$, {client}) =>\n  action$.pipe(\n    filter(tagsSlice.actions.updateRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {closeDialogId, formData, tag} = action.payload\n\n      return of(action).pipe(\n        // Optionally throttle\n        debugThrottle(state.debug.badConnection),\n        // Check if tag name is available, throw early if not\n        checkTagName(client, formData?.name?.current),\n        // Patch document (Update tag)\n        mergeMap(\n          () =>\n            from(\n              client\n                .patch(tag._id)\n                .set({name: {_type: 'slug', current: formData?.name.current}})\n                .commit()\n            ) as Observable<Tag>\n        ),\n        // Dispatch complete action\n        mergeMap((updatedTag: Tag) => {\n          return of(\n            tagsSlice.actions.updateComplete({\n              closeDialogId,\n              tag: updatedTag\n            })\n          )\n        }),\n        catchError((error: ClientError) =>\n          of(\n            tagsSlice.actions.updateError({\n              error: {\n                message: error?.message || 'Internal error',\n                statusCode: error?.statusCode || 500\n              },\n              tag\n            })\n          )\n        )\n      )\n    })\n  )\n\n// Selectors\n\nconst selectTagsByIds = (state: RootReducerState) => state.tags.byIds\n\nconst selectTagsAllIds = (state: RootReducerState) => state.tags.allIds\n\nexport const selectTags: Selector<RootReducerState, TagItem[]> = createSelector(\n  [selectTagsByIds, selectTagsAllIds],\n  (byIds, allIds) => allIds.map(id => byIds[id])\n)\n\nexport const selectTagById = createSelector(\n  [selectTagsByIds, (_state: RootReducerState, tagId: string) => tagId],\n  (byIds, tagId) => byIds[tagId]\n)\n\n// TODO: use createSelector\n// Map tag references to react-select options, skipping over items with no linked tags\nexport const selectTagSelectOptions =\n  (asset?: Asset) =>\n  (state: RootReducerState): ReactSelectOption[] | null => {\n    const tags = asset?.opt?.media?.tags?.reduce((acc: TagItem[], v) => {\n      const tagItem = state.tags.byIds[v._ref]\n      if (tagItem?.tag) {\n        acc.push(tagItem)\n      }\n      return acc\n    }, [])\n\n    if (tags && tags?.length > 0) {\n      return getTagSelectOptions(tags)\n    }\n\n    return null\n  }\n\nexport const tagsActions = tagsSlice.actions\n\nexport default tagsSlice.reducer\n","import {createSelector, createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport type {MyEpic, SearchFacetInputProps, SearchFacetOperatorType} from '@types'\nimport {Selector} from 'react-redux'\nimport {empty, of} from 'rxjs'\nimport {filter, mergeMap, withLatestFrom} from 'rxjs/operators'\nimport {tagsActions} from '../tags'\nimport type {RootReducerState} from '../types'\n\n// TODO: don't store non-serializable data in the search store\n// (The main offender is `fieldModifier` which is currently a function)\n\ntype SearchState = {\n  facets: SearchFacetInputProps[]\n  query: string\n}\n\nconst initialState = {\n  facets: [],\n  query: ''\n} as SearchState\n\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    // Add search facet\n    facetsAdd(state, action: PayloadAction<{facet: SearchFacetInputProps}>) {\n      state.facets.push(action.payload.facet)\n    },\n    // Clear all search facets\n    facetsClear(state) {\n      state.facets = []\n    },\n    // Remove search facet by name\n    facetsRemove(state, action: PayloadAction<{facetName: string}>) {\n      state.facets = state.facets.filter(facet => facet.name !== action.payload.facetName)\n    },\n    // Update an existing search facet\n    facetsUpdate(\n      state,\n      action: PayloadAction<{\n        modifier?: string\n        name: string\n        operatorType?: SearchFacetOperatorType\n        value?: any // TODO: type correctly\n      }>\n    ) {\n      const {modifier, name, operatorType, value} = action.payload\n\n      state.facets.forEach((facet, index) => {\n        if (facet.name === name) {\n          if (facet.type === 'number' && modifier) {\n            facet.modifier = modifier\n          }\n          if (operatorType) {\n            facet.operatorType = operatorType\n          }\n          if (typeof value !== 'undefined') {\n            state.facets[index].value = value\n          }\n        }\n      })\n    },\n    // Update existing search query\n    querySet(state, action: PayloadAction<{searchQuery: string}>) {\n      state.query = action.payload?.searchQuery\n    }\n  }\n})\n\n// Epics\n\n// On tag update success -> update existing tag search facet (if present)\nexport const searchFacetTagUpdateEpic: MyEpic = (action$, state$) =>\n  action$.pipe(\n    filter(tagsActions.updateComplete.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {tag} = action.payload\n\n      const currentSearchFacetTag = state.search.facets?.find(facet => facet.name === 'tag')\n      const tagItem = state.tags.byIds[tag._id]\n\n      if (currentSearchFacetTag?.type === 'searchable') {\n        if (currentSearchFacetTag.value?.value === tag._id) {\n          return of(\n            searchSlice.actions.facetsUpdate({\n              name: 'tag',\n              value: {\n                label: tagItem?.tag?.name?.current,\n                value: tagItem?.tag?._id\n              }\n            })\n          )\n        }\n      }\n\n      return empty()\n    })\n  )\n\n// Selectors\n\nexport const selectHasSearchFacetTag: Selector<RootReducerState, boolean> = createSelector(\n  (state: RootReducerState) => state.search.facets,\n  searchFacets => !!searchFacets?.find(facet => facet.name === 'tag')\n)\n\nexport const selectIsSearchFacetTag = createSelector(\n  [\n    (state: RootReducerState) => state.tags.byIds,\n    (state: RootReducerState) => state.search.facets,\n    (_state: RootReducerState, tagId: string) => tagId\n  ],\n  (tagsByIds, searchFacets, tagId) => {\n    const searchFacet = searchFacets?.find(facet => facet.name === 'tag')\n\n    if (searchFacet?.type === 'searchable') {\n      const searchFacetTagId = searchFacet.value?.value\n      if (searchFacetTagId) {\n        return (\n          tagsByIds[searchFacetTagId]?.tag?._id === tagId &&\n          searchFacet?.operatorType === 'references'\n        )\n      }\n    }\n\n    return false\n  }\n)\n\nexport const searchActions = searchSlice.actions\n\nexport default searchSlice.reducer\n","import {createAction} from '@reduxjs/toolkit'\nimport type {SanityAssetDocument, SanityImageAssetDocument} from '@sanity/client'\n\nexport const UPLOADS_ACTIONS = {\n  uploadComplete: createAction(\n    'uploads/uploadComplete',\n    function prepare({asset}: {asset: SanityAssetDocument | SanityImageAssetDocument}) {\n      return {\n        payload: {asset}\n      }\n    }\n  )\n}\n","import {createSelector, createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport type {ClientError, Patch, Transaction} from '@sanity/client'\nimport {\n  Asset,\n  AssetItem,\n  AssetType,\n  BrowserView,\n  HttpError,\n  MyEpic,\n  Order,\n  OrderDirection,\n  Tag\n} from '@types'\nimport groq from 'groq'\nimport {nanoid} from 'nanoid'\nimport {Selector} from 'react-redux'\nimport {ofType} from 'redux-observable'\nimport {empty, from, of} from 'rxjs'\nimport {\n  bufferTime,\n  catchError,\n  debounceTime,\n  filter,\n  mergeMap,\n  switchMap,\n  withLatestFrom\n} from 'rxjs/operators'\nimport {getOrderTitle} from '../../config/orders'\nimport {ORDER_OPTIONS} from '../../constants'\nimport debugThrottle from '../../operators/debugThrottle'\nimport constructFilter from '../../utils/constructFilter'\nimport {searchActions} from '../search'\nimport type {RootReducerState} from '../types'\nimport {UPLOADS_ACTIONS} from '../uploads/actions'\nimport {ASSETS_ACTIONS} from './actions'\ntype ItemError = {\n  description: string\n  id: string\n  referencingIDs: string[]\n  type: string // 'documentHasExistingReferencesError'\n}\n\nexport type AssetsReducerState = {\n  allIds: string[]\n  assetTypes: AssetType[]\n  byIds: Record<string, AssetItem>\n  fetchCount: number\n  fetching: boolean\n  fetchingError?: HttpError\n  lastPicked?: string\n  order: Order\n  pageIndex: number\n  pageSize: number\n  view: BrowserView\n  // totalCount: number\n}\n\nconst defaultOrder = ORDER_OPTIONS[0] as {\n  direction: OrderDirection\n  field: string\n}\n\n/**\n * NOTE:\n * `fetchCount` returns the number of items retrieved in the most recent fetch.\n * This is a temporary workaround to be able to determine when there are no more items to retrieve.\n * Typically this would be done by deriving the total number of assets upfront, but currently such\n * queries in GROQ aren't fast enough to use on large datasets (1000s of entries).\n *\n * TODO:\n * When the query engine has been improved and above queries are faster, remove all instances of\n * of `fetchCount` and reinstate `totalCount` across the board.\n */\n\nexport const initialState = {\n  allIds: [],\n  assetTypes: [],\n  byIds: {},\n  fetchCount: -1,\n  fetching: false,\n  fetchingError: undefined,\n  lastPicked: undefined,\n  order: {\n    direction: defaultOrder.direction,\n    field: defaultOrder.field,\n    title: getOrderTitle(defaultOrder.field, defaultOrder.direction)\n  },\n  pageIndex: 0,\n  pageSize: 50,\n  // totalCount: -1,\n  view: 'grid'\n} as AssetsReducerState\n\nconst assetsSlice = createSlice({\n  name: 'assets',\n  initialState,\n  extraReducers: builder => {\n    builder //\n      .addCase(UPLOADS_ACTIONS.uploadComplete, (state, action) => {\n        const {asset} = action.payload\n\n        state.byIds[asset._id] = {\n          _type: 'asset',\n          asset: asset as Asset,\n          picked: false,\n          updating: false\n        }\n      })\n      .addCase(ASSETS_ACTIONS.tagsAddComplete, (state, action) => {\n        const {assets} = action.payload\n        assets.forEach(asset => {\n          state.byIds[asset.asset._id].updating = false\n        })\n      })\n      .addCase(ASSETS_ACTIONS.tagsAddError, (state, action) => {\n        const {assets} = action.payload\n        assets.forEach(asset => {\n          state.byIds[asset.asset._id].updating = false\n        })\n      })\n      .addCase(ASSETS_ACTIONS.tagsAddRequest, (state, action) => {\n        const {assets} = action.payload\n        assets.forEach(asset => {\n          state.byIds[asset.asset._id].updating = true\n        })\n      })\n      .addCase(ASSETS_ACTIONS.tagsRemoveComplete, (state, action) => {\n        const {assets} = action.payload\n        assets.forEach(asset => {\n          state.byIds[asset.asset._id].updating = false\n        })\n      })\n      .addCase(ASSETS_ACTIONS.tagsRemoveError, (state, action) => {\n        const {assets} = action.payload\n        assets.forEach(asset => {\n          state.byIds[asset.asset._id].updating = false\n        })\n      })\n      .addCase(ASSETS_ACTIONS.tagsRemoveRequest, (state, action) => {\n        const {assets} = action.payload\n        assets.forEach(asset => {\n          state.byIds[asset.asset._id].updating = true\n        })\n      })\n  },\n  reducers: {\n    // Clear asset order\n    clear(state) {\n      state.allIds = []\n    },\n    // Remove assets and update page index\n    deleteComplete(state, action: PayloadAction<{assetIds: string[]}>) {\n      const {assetIds} = action.payload\n\n      assetIds?.forEach(id => {\n        const deleteIndex = state.allIds.indexOf(id)\n        if (deleteIndex >= 0) {\n          state.allIds.splice(deleteIndex, 1)\n        }\n        delete state.byIds[id]\n      })\n\n      state.pageIndex = Math.floor(state.allIds.length / state.pageSize) - 1\n    },\n    deleteError(state, action: PayloadAction<{assetIds: string[]; error: ClientError}>) {\n      const {assetIds, error} = action.payload\n      const itemErrors: ItemError[] = error?.response?.body?.error?.items?.map(\n        (item: any) => item.error\n      )\n\n      assetIds?.forEach(id => {\n        state.byIds[id].updating = false\n      })\n      itemErrors?.forEach(item => {\n        state.byIds[item.id].error = item.description\n      })\n    },\n    deleteRequest(state, action: PayloadAction<{assets: Asset[]; closeDialogId?: string}>) {\n      const {assets} = action.payload\n      assets.forEach(asset => {\n        state.byIds[asset?._id].updating = true\n      })\n\n      Object.keys(state.byIds).forEach(key => {\n        delete state.byIds[key].error\n      })\n    },\n    fetchComplete(state, action: PayloadAction<{assets: Asset[]}>) {\n      const assets = action.payload?.assets || []\n\n      if (assets) {\n        assets.forEach(asset => {\n          if (!state.allIds.includes(asset._id)) {\n            state.allIds.push(asset._id)\n          }\n          state.byIds[asset._id] = {\n            _type: 'asset',\n            asset: asset,\n            picked: false,\n            updating: false\n          }\n        })\n      }\n\n      state.fetching = false\n      state.fetchCount = assets.length || 0\n      delete state.fetchingError\n    },\n    fetchError(state, action: PayloadAction<HttpError>) {\n      const error = action.payload\n      state.fetching = false\n      state.fetchingError = error\n    },\n    fetchRequest: {\n      reducer: (state, _action: PayloadAction<{params: Record<string, any>; query: string}>) => {\n        state.fetching = true\n        delete state.fetchingError\n      },\n      prepare: ({\n        params = {},\n        queryFilter,\n        selector = ``,\n        sort = groq`order(_updatedAt desc)`\n      }: {\n        params?: Record<string, any>\n        queryFilter: string\n        replace?: boolean\n        selector?: string\n        sort?: string\n      }) => {\n        const pipe = sort || selector ? '|' : ''\n\n        // Construct query\n        const query = groq`\n          {\n            \"items\": *[${queryFilter}] {\n              _id,\n              _type,\n              _createdAt,\n              _updatedAt,\n              altText,\n              description,\n              extension,\n              metadata {\n                dimensions,\n                exif,\n                isOpaque,\n              },\n              mimeType,\n              opt {\n                media\n              },\n              originalFilename,\n              size,\n              title,\n              url\n            } ${pipe} ${sort} ${selector},\n          }\n        `\n\n        return {payload: {params, query}}\n      }\n    },\n    insertUploads(state, action: PayloadAction<{results: Record<string, string | null>}>) {\n      const {results} = action.payload\n\n      Object.entries(results).forEach(([hash, assetId]) => {\n        if (assetId && !state.allIds.includes(hash)) {\n          state.allIds.push(assetId)\n        }\n      })\n    },\n    listenerCreateQueue(_state, _action: PayloadAction<{asset: Asset}>) {\n      //\n    },\n    listenerCreateQueueComplete(state, action: PayloadAction<{assets: Asset[]}>) {\n      const {assets} = action.payload\n      assets?.forEach(asset => {\n        if (state.byIds[asset?._id]?.asset) {\n          state.byIds[asset._id].asset = asset\n        }\n      })\n    },\n    listenerDeleteQueue(_state, _action: PayloadAction<{assetId: string}>) {\n      //\n    },\n    listenerDeleteQueueComplete(state, action: PayloadAction<{assetIds: string[]}>) {\n      const {assetIds} = action.payload\n      assetIds?.forEach(assetId => {\n        const deleteIndex = state.allIds.indexOf(assetId)\n        if (deleteIndex >= 0) {\n          state.allIds.splice(deleteIndex, 1)\n        }\n        delete state.byIds[assetId]\n      })\n    },\n    listenerUpdateQueue(_state, _action: PayloadAction<{asset: Asset}>) {\n      //\n    },\n    listenerUpdateQueueComplete(state, action: PayloadAction<{assets: Asset[]}>) {\n      const {assets} = action.payload\n      assets?.forEach(asset => {\n        if (state.byIds[asset?._id]?.asset) {\n          state.byIds[asset._id].asset = asset\n        }\n      })\n    },\n    loadNextPage() {\n      //\n    },\n    loadPageIndex(state, action: PayloadAction<{pageIndex: number}>) {\n      //\n      state.pageIndex = action.payload.pageIndex\n    },\n    orderSet(state, action: PayloadAction<{order: Order}>) {\n      state.order = action.payload?.order\n      state.pageIndex = 0\n    },\n    pick(state, action: PayloadAction<{assetId: string; picked: boolean}>) {\n      const {assetId, picked} = action.payload\n\n      state.byIds[assetId].picked = picked\n      state.lastPicked = picked ? assetId : undefined\n    },\n    pickAll(state) {\n      state.allIds.forEach(id => {\n        state.byIds[id].picked = true\n      })\n    },\n    pickClear(state) {\n      state.lastPicked = undefined\n      Object.values(state.byIds).forEach(asset => {\n        state.byIds[asset.asset._id].picked = false\n      })\n    },\n    pickRange(state, action: PayloadAction<{endId: string; startId: string}>) {\n      const startIndex = state.allIds.findIndex(id => id === action.payload.startId)\n      const endIndex = state.allIds.findIndex(id => id === action.payload.endId)\n\n      // Sort numerically, ascending order\n      const indices = [startIndex, endIndex].sort((a, b) => a - b)\n\n      state.allIds.slice(indices[0], indices[1] + 1).forEach(key => {\n        state.byIds[key].picked = true\n      })\n      state.lastPicked = state.allIds[endIndex]\n    },\n    sort(state) {\n      state.allIds.sort((a, b) => {\n        const tagA = state.byIds[a].asset[state.order.field]\n        const tagB = state.byIds[b].asset[state.order.field]\n\n        if (tagA < tagB) {\n          return state.order.direction === 'asc' ? -1 : 1\n        } else if (tagA > tagB) {\n          return state.order.direction === 'asc' ? 1 : -1\n        }\n        return 0\n      })\n    },\n    updateComplete(state, action: PayloadAction<{asset: Asset; closeDialogId?: string}>) {\n      const {asset} = action.payload\n      state.byIds[asset._id].updating = false\n      state.byIds[asset._id].asset = asset\n    },\n    updateError(state, action: PayloadAction<{asset: Asset; error: HttpError}>) {\n      const {asset, error} = action.payload\n\n      const assetId = asset?._id\n      state.byIds[assetId].error = error.message\n      state.byIds[assetId].updating = false\n    },\n    updateRequest(\n      state,\n      action: PayloadAction<{asset: Asset; closeDialogId?: string; formData: Record<string, any>}>\n    ) {\n      const assetId = action.payload?.asset?._id\n      state.byIds[assetId].updating = true\n    },\n    viewSet(state, action: PayloadAction<{view: BrowserView}>) {\n      state.view = action.payload?.view\n    }\n  }\n})\n\n// Epics\n\nexport const assetsDeleteEpic: MyEpic = (action$, _state$, {client}) =>\n  action$.pipe(\n    filter(assetsActions.deleteRequest.match),\n    mergeMap(action => {\n      const {assets} = action.payload\n      const assetIds = assets.map(asset => asset._id)\n      return of(assets).pipe(\n        mergeMap(() =>\n          client.observable.delete({\n            query: groq`*[_id in ${JSON.stringify(assetIds)}]`\n          })\n        ),\n        mergeMap(() => of(assetsActions.deleteComplete({assetIds}))),\n        catchError((error: ClientError) => {\n          return of(assetsActions.deleteError({assetIds, error}))\n        })\n      )\n    })\n  )\n\nexport const assetsFetchEpic: MyEpic = (action$, state$, {client}) =>\n  action$.pipe(\n    filter(assetsActions.fetchRequest.match),\n    withLatestFrom(state$),\n    switchMap(([action, state]) => {\n      const params = action.payload?.params\n      const query = action.payload?.query\n\n      return of(action).pipe(\n        debugThrottle(state.debug.badConnection),\n        mergeMap(() =>\n          client.observable.fetch<{\n            items: Asset[]\n          }>(query, params)\n        ),\n        mergeMap(result => {\n          const {\n            items\n            // totalCount\n          } = result\n          return of(assetsActions.fetchComplete({assets: items}))\n        }),\n        catchError((error: ClientError) =>\n          of(\n            assetsActions.fetchError({\n              message: error?.message || 'Internal error',\n              statusCode: error?.statusCode || 500\n            })\n          )\n        )\n      )\n    })\n  )\n\nexport const assetsFetchPageIndexEpic: MyEpic = (action$, state$) =>\n  action$.pipe(\n    filter(assetsActions.loadPageIndex.match),\n    withLatestFrom(state$),\n    switchMap(([action, state]) => {\n      const pageSize = state.assets.pageSize\n      const start = action.payload.pageIndex * pageSize\n      const end = start + pageSize\n\n      // Document ID can be null when operating on pristine / unsaved drafts\n      const documentId = state?.selected.document?._id\n      const documentAssetIds = state?.selected?.documentAssetIds\n\n      const constructedFilter = constructFilter({\n        assetTypes: state.assets.assetTypes,\n        searchFacets: state.search.facets,\n        searchQuery: state.search.query\n      })\n\n      const params = {\n        ...(documentId ? {documentId} : {}),\n        documentAssetIds\n      }\n\n      return of(\n        assetsActions.fetchRequest({\n          params,\n          queryFilter: constructedFilter,\n          selector: groq`[${start}...${end}]`,\n          sort: groq`order(${state.assets?.order?.field} ${state.assets?.order?.direction})`\n        })\n      )\n    })\n  )\n\nexport const assetsFetchNextPageEpic: MyEpic = (action$, state$) =>\n  action$.pipe(\n    filter(assetsActions.loadNextPage.match),\n    withLatestFrom(state$),\n    switchMap(([_action, state]) =>\n      of(assetsActions.loadPageIndex({pageIndex: state.assets.pageIndex + 1}))\n    )\n  )\n\nexport const assetsFetchAfterDeleteAllEpic: MyEpic = (action$, state$) =>\n  action$.pipe(\n    filter(assetsActions.deleteComplete.match),\n    withLatestFrom(state$),\n    switchMap(([_action, state]) => {\n      if (state.assets.allIds.length === 0) {\n        const nextPageIndex = Math.floor(state.assets.allIds.length / state.assets.pageSize)\n        return of(assetsActions.loadPageIndex({pageIndex: nextPageIndex}))\n      }\n\n      return empty()\n    })\n  )\n\nconst filterAssetWithoutTag = (tag: Tag) => (asset: AssetItem) => {\n  const tagIndex = asset?.asset?.opt?.media?.tags?.findIndex(t => t._ref === tag?._id) ?? -1\n  return tagIndex < 0\n}\n\nconst patchOperationTagAppend =\n  ({tag}: {tag: Tag}) =>\n  (patch: Patch) =>\n    patch\n      .setIfMissing({opt: {}})\n      .setIfMissing({'opt.media': {}})\n      .setIfMissing({'opt.media.tags': []})\n      .append('opt.media.tags', [{_key: nanoid(), _ref: tag?._id, _type: 'reference', _weak: true}])\n\nconst patchOperationTagUnset =\n  ({asset, tag}: {asset: AssetItem; tag: Tag}) =>\n  (patch: Patch) =>\n    patch.ifRevisionId(asset?.asset?._rev).unset([`opt.media.tags[_ref == \"${tag._id}\"]`])\n\nexport const assetsRemoveTagsEpic: MyEpic = (action$, state$, {client}) => {\n  return action$.pipe(\n    filter(ASSETS_ACTIONS.tagsAddRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {assets, tag} = action.payload\n\n      return of(action).pipe(\n        // Optionally throttle\n        debugThrottle(state.debug.badConnection),\n        // Add tag references to all picked assets\n        mergeMap(() => {\n          const pickedAssets = selectAssetsPicked(state)\n\n          // Filter out picked assets which already include tag\n          const pickedAssetsFiltered = pickedAssets?.filter(filterAssetWithoutTag(tag))\n\n          const transaction: Transaction = pickedAssetsFiltered.reduce(\n            (tx, pickedAsset) => tx.patch(pickedAsset?.asset?._id, patchOperationTagAppend({tag})),\n            client.transaction()\n          )\n\n          return from(transaction.commit())\n        }),\n        // Dispatch complete action\n        mergeMap(() => of(ASSETS_ACTIONS.tagsAddComplete({assets, tag}))),\n        catchError((error: ClientError) =>\n          of(\n            ASSETS_ACTIONS.tagsAddError({\n              assets,\n              error: {\n                message: error?.message || 'Internal error',\n                statusCode: error?.statusCode || 500\n              },\n              tag\n            })\n          )\n        )\n      )\n    })\n  )\n}\n\nexport const assetsOrderSetEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(assetsActions.orderSet.match),\n    mergeMap(() => {\n      return of(\n        assetsActions.clear(), //\n        assetsActions.loadPageIndex({pageIndex: 0})\n      )\n    })\n  )\n\nexport const assetsSearchEpic: MyEpic = action$ =>\n  action$.pipe(\n    ofType(\n      searchActions.facetsAdd.type,\n      searchActions.facetsClear.type,\n      searchActions.facetsRemove.type,\n      searchActions.facetsUpdate.type,\n      searchActions.querySet.type\n    ),\n    debounceTime(400),\n    mergeMap(() => {\n      return of(\n        assetsActions.clear(), //\n        assetsActions.loadPageIndex({pageIndex: 0})\n      )\n    })\n  )\n\nexport const assetsListenerCreateQueueEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(assetsActions.listenerCreateQueue.match),\n    bufferTime(2000),\n    filter(actions => actions.length > 0),\n    mergeMap(actions => {\n      const assets = actions?.map(action => action.payload.asset)\n      return of(assetsActions.listenerCreateQueueComplete({assets}))\n    })\n  )\n\nexport const assetsListenerDeleteQueueEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(assetsActions.listenerDeleteQueue.match),\n    bufferTime(2000),\n    filter(actions => actions.length > 0),\n    mergeMap(actions => {\n      const assetIds = actions?.map(action => action.payload.assetId)\n      return of(assetsActions.listenerDeleteQueueComplete({assetIds}))\n    })\n  )\n\nexport const assetsListenerUpdateQueueEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(assetsActions.listenerUpdateQueue.match),\n    bufferTime(2000),\n    filter(actions => actions.length > 0),\n    mergeMap(actions => {\n      const assets = actions?.map(action => action.payload.asset)\n      return of(assetsActions.listenerUpdateQueueComplete({assets}))\n    })\n  )\n\n// Re-sort on all updates (immediate and batched listener events)\nexport const assetsSortEpic: MyEpic = action$ =>\n  action$.pipe(\n    ofType(\n      assetsActions.insertUploads.type,\n      assetsActions.listenerUpdateQueueComplete.type,\n      assetsActions.updateComplete.type\n    ),\n    mergeMap(() => of(assetsActions.sort()))\n  )\n\nexport const assetsTagsAddEpic: MyEpic = (action$, state$, {client}) => {\n  return action$.pipe(\n    filter(ASSETS_ACTIONS.tagsAddRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {assets, tag} = action.payload\n\n      return of(action).pipe(\n        // Optionally throttle\n        debugThrottle(state.debug.badConnection),\n        // Add tag references to all picked assets\n        mergeMap(() => {\n          const pickedAssets = selectAssetsPicked(state)\n\n          // Filter out picked assets which already include tag\n          const pickedAssetsFiltered = pickedAssets?.filter(filterAssetWithoutTag(tag))\n\n          const transaction: Transaction = pickedAssetsFiltered.reduce(\n            (tx, pickedAsset) => tx.patch(pickedAsset?.asset?._id, patchOperationTagAppend({tag})),\n            client.transaction()\n          )\n\n          return from(transaction.commit())\n        }),\n        // Dispatch complete action\n        mergeMap(() => of(ASSETS_ACTIONS.tagsAddComplete({assets, tag}))),\n        catchError((error: ClientError) =>\n          of(\n            ASSETS_ACTIONS.tagsAddError({\n              assets,\n              error: {\n                message: error?.message || 'Internal error',\n                statusCode: error?.statusCode || 500\n              },\n              tag\n            })\n          )\n        )\n      )\n    })\n  )\n}\n\nexport const assetsTagsRemoveEpic: MyEpic = (action$, state$, {client}) => {\n  return action$.pipe(\n    filter(ASSETS_ACTIONS.tagsRemoveRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {assets, tag} = action.payload\n\n      return of(action).pipe(\n        // Optionally throttle\n        debugThrottle(state.debug.badConnection),\n        // Remove tag references from all picked assets\n        mergeMap(() => {\n          const pickedAssets = selectAssetsPicked(state)\n\n          const transaction: Transaction = pickedAssets.reduce(\n            (tx, pickedAsset) =>\n              tx.patch(pickedAsset?.asset?._id, patchOperationTagUnset({asset: pickedAsset, tag})),\n            client.transaction()\n          )\n\n          return from(transaction.commit())\n        }),\n        // Dispatch complete action\n        mergeMap(() => of(ASSETS_ACTIONS.tagsRemoveComplete({assets, tag}))),\n        catchError((error: ClientError) =>\n          of(\n            ASSETS_ACTIONS.tagsRemoveError({\n              assets,\n              error: {\n                message: error?.message || 'Internal error',\n                statusCode: error?.statusCode || 500\n              },\n              tag\n            })\n          )\n        )\n      )\n    })\n  )\n}\n\nexport const assetsUnpickEpic: MyEpic = action$ =>\n  action$.pipe(\n    ofType(\n      assetsActions.orderSet.type,\n      assetsActions.viewSet.type,\n      searchActions.facetsAdd.type,\n      searchActions.facetsClear.type,\n      searchActions.facetsRemove.type,\n      searchActions.facetsUpdate.type,\n      searchActions.querySet.type\n    ),\n    mergeMap(() => {\n      return of(assetsActions.pickClear())\n    })\n  )\n\nexport const assetsUpdateEpic: MyEpic = (action$, state$, {client}) =>\n  action$.pipe(\n    filter(assetsActions.updateRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {asset, closeDialogId, formData} = action.payload\n\n      return of(action).pipe(\n        debugThrottle(state.debug.badConnection),\n        mergeMap(() =>\n          from(\n            client\n              .patch(asset._id)\n              .setIfMissing({opt: {}})\n              .setIfMissing({'opt.media': {}})\n              .set(formData)\n              .commit()\n          )\n        ),\n        mergeMap((updatedAsset: any) =>\n          of(\n            assetsActions.updateComplete({\n              asset: updatedAsset,\n              closeDialogId\n            })\n          )\n        ),\n        catchError((error: ClientError) =>\n          of(\n            assetsActions.updateError({\n              asset,\n              error: {\n                message: error?.message || 'Internal error',\n                statusCode: error?.statusCode || 500\n              }\n            })\n          )\n        )\n      )\n    })\n  )\n\n// Selectors\n\nconst selectAssetsByIds = (state: RootReducerState) => state.assets.byIds\n\nconst selectAssetsAllIds = (state: RootReducerState) => state.assets.allIds\n\nexport const selectAssetById = createSelector(\n  [\n    (state: RootReducerState) => state.assets.byIds,\n    (_state: RootReducerState, assetId: string) => assetId\n  ],\n  (byIds, assetId) => byIds[assetId]\n)\n\nexport const selectAssets: Selector<RootReducerState, AssetItem[]> = createSelector(\n  [selectAssetsByIds, selectAssetsAllIds],\n  (byIds, allIds) => allIds.map(id => byIds[id])\n)\n\nexport const selectAssetsLength = createSelector([selectAssets], assets => assets.length)\n\nexport const selectAssetsPicked = createSelector([selectAssets], assets =>\n  assets.filter(item => item?.picked)\n)\n\nexport const selectAssetsPickedLength = createSelector(\n  [selectAssetsPicked],\n  assetsPicked => assetsPicked.length\n)\n\nexport const assetsActions = assetsSlice.actions\n\nexport default assetsSlice.reducer\n","import {hues} from '@sanity/color'\nimport {createGlobalStyle, css} from 'styled-components'\n\nconst customScrollbar = css`\n  ::-webkit-scrollbar {\n    width: 14px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    border: 4px solid rgba(0, 0, 0, 0);\n    background: ${hues.gray?.[800].hex};\n    background-clip: padding-box;\n\n    &:hover {\n      background: ${hues.gray?.[400].hex};\n      background-clip: padding-box;\n    }\n  }\n`\n\nconst GlobalStyle = createGlobalStyle`\n  .media__custom-scrollbar {\n    ${customScrollbar}\n  }\n\n  // @sanity/ui overrides\n\n  // Custom scrollbar on Box (used in Dialogs)\n  div[data-ui=\"Box\"] {\n    ${customScrollbar}\n  }\n\n  // Dialog background color\n  div[data-ui=\"Dialog\"] {\n    background-color: rgba(15, 17, 18, 0.9);\n  }\n\n`\n\nexport default GlobalStyle\n","import {TypedUseSelectorHook, useSelector} from 'react-redux'\n\nimport {RootReducerState} from '../modules/types'\n\nconst useTypedSelector: TypedUseSelectorHook<RootReducerState> = useSelector\n\nexport default useTypedSelector\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport {AssetItem, Dialog, MyEpic, Tag} from '@types'\nimport pluralize from 'pluralize'\nimport {ofType} from 'redux-observable'\nimport {empty, of} from 'rxjs'\nimport {filter, mergeMap} from 'rxjs/operators'\nimport {assetsActions} from '../assets'\nimport {ASSETS_ACTIONS} from '../assets/actions'\nimport {tagsActions} from '../tags'\nimport {DIALOG_ACTIONS} from './actions'\n\ntype DialogReducerState = {\n  items: Dialog[]\n}\n\nconst initialState = {\n  items: []\n} as DialogReducerState\n\nconst dialogSlice = createSlice({\n  name: 'dialog',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(DIALOG_ACTIONS.showTagCreate, state => {\n      state.items.push({\n        id: 'tagCreate',\n        type: 'tagCreate'\n      })\n    })\n    builder.addCase(DIALOG_ACTIONS.showTagEdit, (state, action) => {\n      const {tagId} = action.payload\n      state.items.push({\n        id: tagId,\n        tagId,\n        type: 'tagEdit'\n      })\n    })\n  },\n  reducers: {\n    // Clear all dialogs\n    clear(state) {\n      state.items = []\n    },\n    // Add newly created inline tag to assetEdit dialog\n    inlineTagCreate(state, action: PayloadAction<{assetId: string; tag: Tag}>) {\n      const {assetId, tag} = action.payload\n\n      state.items.forEach(item => {\n        if (item.type === 'assetEdit' && item.assetId === assetId) {\n          item.lastCreatedTag = {\n            label: tag.name.current,\n            value: tag._id\n          }\n        }\n      })\n    },\n    // Remove inline tags from assetEdit dialog\n    inlineTagRemove(state, action: PayloadAction<{tagIds: string[]}>) {\n      const {tagIds} = action.payload\n\n      state.items.forEach(item => {\n        if (item.type === 'assetEdit') {\n          item.lastRemovedTagIds = tagIds\n        }\n      })\n    },\n    // Remove dialog by id\n    remove(state, action: PayloadAction<{id: string}>) {\n      const id = action.payload?.id\n      state.items = state.items.filter(item => item.id !== id)\n    },\n    showConfirmAssetsTagAdd(\n      state,\n      action: PayloadAction<{\n        assetsPicked: AssetItem[]\n        closeDialogId?: string\n        tag: Tag\n      }>\n    ) {\n      const {assetsPicked, closeDialogId, tag} = action.payload\n\n      const suffix = `${assetsPicked.length} ${pluralize('asset', assetsPicked.length)}`\n\n      state.items.push({\n        closeDialogId,\n        confirmCallbackAction: ASSETS_ACTIONS.tagsAddRequest({\n          assets: assetsPicked,\n          tag\n        }),\n        confirmText: `Yes, add tag to ${suffix}`,\n        title: `Add tag ${tag.name.current} to ${suffix}?`,\n        id: 'confirm',\n        headerTitle: 'Confirm tag addition',\n        tone: 'primary',\n        type: 'confirm'\n      })\n    },\n    showConfirmAssetsTagRemove(\n      state,\n      action: PayloadAction<{\n        assetsPicked: AssetItem[]\n        closeDialogId?: string\n        tag: Tag\n      }>\n    ) {\n      const {assetsPicked, closeDialogId, tag} = action.payload\n\n      const suffix = `${assetsPicked.length} ${pluralize('asset', assetsPicked.length)}`\n\n      state.items.push({\n        closeDialogId,\n        confirmCallbackAction: ASSETS_ACTIONS.tagsRemoveRequest({assets: assetsPicked, tag}),\n        confirmText: `Yes, remove tag from ${suffix}`,\n        headerTitle: 'Confirm tag removal',\n        id: 'confirm',\n        title: `Remove tag ${tag.name.current} from ${suffix}?`,\n        tone: 'critical',\n        type: 'confirm'\n      })\n    },\n    showConfirmDeleteAssets(\n      state,\n      action: PayloadAction<{assets: AssetItem[]; closeDialogId?: string}>\n    ) {\n      const {assets, closeDialogId} = action.payload\n\n      const suffix = `${assets.length} ${pluralize('asset', assets.length)}`\n\n      state.items.push({\n        closeDialogId,\n        confirmCallbackAction: assetsActions.deleteRequest({\n          assets: assets.map(assetItem => assetItem.asset)\n        }),\n        confirmText: `Yes, delete ${suffix}`,\n        description: 'This operation cannot be reversed. Are you sure you want to continue?',\n        title: `Permanently delete ${suffix}?`,\n        id: 'confirm',\n        headerTitle: 'Confirm deletion',\n        tone: 'critical',\n        type: 'confirm'\n      })\n    },\n    showConfirmDeleteTag(state, action: PayloadAction<{closeDialogId?: string; tag: Tag}>) {\n      const {closeDialogId, tag} = action.payload\n\n      const suffix = 'tag'\n\n      state.items.push({\n        closeDialogId,\n        confirmCallbackAction: tagsActions.deleteRequest({tag}),\n        confirmText: `Yes, delete ${suffix}`,\n        description: 'This operation cannot be reversed. Are you sure you want to continue?',\n        title: `Permanently delete ${suffix}?`,\n        id: 'confirm',\n        headerTitle: 'Confirm deletion',\n        tone: 'critical',\n        type: 'confirm'\n      })\n    },\n    showAssetEdit(state, action: PayloadAction<{assetId: string}>) {\n      const {assetId} = action.payload\n      state.items.push({\n        assetId,\n        id: assetId,\n        type: 'assetEdit'\n      })\n    },\n    showSearchFacets(state) {\n      state.items.push({\n        id: 'searchFacets',\n        type: 'searchFacets'\n      })\n    },\n    showTags(state) {\n      state.items.push({\n        id: 'tags',\n        type: 'tags'\n      })\n    }\n  }\n})\n\n// Epics\n\nexport const dialogClearOnAssetUpdateEpic: MyEpic = action$ =>\n  action$.pipe(\n    ofType(\n      assetsActions.deleteComplete.type,\n      assetsActions.updateComplete.type,\n      tagsActions.deleteComplete.type,\n      tagsActions.updateComplete.type\n    ),\n    filter(action => !!action?.payload?.closeDialogId),\n    mergeMap(action => {\n      const dialogId = action?.payload?.closeDialogId\n      if (dialogId) {\n        return of(dialogSlice.actions.remove({id: dialogId}))\n      }\n      return empty()\n    })\n  )\n\nexport const dialogTagCreateEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(tagsActions.createComplete.match),\n    mergeMap(action => {\n      const {assetId, tag} = action?.payload\n\n      if (assetId) {\n        return of(dialogSlice.actions.inlineTagCreate({tag, assetId}))\n      }\n\n      if (tag._id) {\n        return of(dialogSlice.actions.remove({id: 'tagCreate'}))\n      }\n\n      return empty()\n    })\n  )\n\nexport const dialogTagDeleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(tagsActions.listenerDeleteQueueComplete.match),\n    mergeMap(action => {\n      const {tagIds} = action?.payload\n\n      return of(dialogSlice.actions.inlineTagRemove({tagIds}))\n    })\n  )\n\nexport const dialogActions = dialogSlice.actions\n\nexport default dialogSlice.reducer\n","import {ThLargeIcon, ThListIcon} from '@sanity/icons'\nimport {Button, Inline} from '@sanity/ui'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {assetsActions} from '../../modules/assets'\n\nconst ButtonViewGroup = () => {\n  // Redux\n  const dispatch = useDispatch()\n  const view = useTypedSelector(state => state.assets.view)\n\n  return (\n    <Inline space={0} style={{whiteSpace: 'nowrap'}}>\n      <Button\n        fontSize={1}\n        icon={ThLargeIcon}\n        mode={view === 'grid' ? 'default' : 'ghost'}\n        onClick={() => dispatch(assetsActions.viewSet({view: 'grid'}))}\n        style={{\n          borderBottomRightRadius: 0,\n          borderTopRightRadius: 0\n        }}\n      />\n      <Button\n        fontSize={1}\n        icon={ThListIcon}\n        mode={view === 'table' ? 'default' : 'ghost'}\n        onClick={() => dispatch(assetsActions.viewSet({view: 'table'}))}\n        style={{\n          borderBottomLeftRadius: 0,\n          borderTopLeftRadius: 0\n        }}\n      />\n    </Inline>\n  )\n}\n\nexport default ButtonViewGroup\n","import {SelectIcon, SortIcon} from '@sanity/icons'\nimport {Button, Menu, MenuButton, MenuDivider, MenuItem} from '@sanity/ui'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport {getOrderTitle} from '../../config/orders'\nimport {ORDER_OPTIONS} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {assetsActions} from '../../modules/assets'\n\nconst OrderSelect = () => {\n  // Redux\n  const dispatch = useDispatch()\n  const order = useTypedSelector(state => state.assets.order)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          fontSize={1}\n          icon={SortIcon}\n          iconRight={SelectIcon}\n          mode=\"ghost\"\n          padding={3}\n          text={getOrderTitle(order.field, order.direction)}\n        />\n      }\n      id=\"order\"\n      menu={\n        <Menu>\n          {ORDER_OPTIONS?.map((item, index) => {\n            if (item) {\n              return (\n                <MenuItem\n                  disabled={order.field === item.field && order.direction === item.direction}\n                  fontSize={1}\n                  key={index}\n                  onClick={() =>\n                    dispatch(\n                      assetsActions.orderSet({\n                        order: {direction: item.direction, field: item.field}\n                      })\n                    )\n                  }\n                  padding={2}\n                  text={getOrderTitle(item.field, item.direction)}\n                />\n              )\n            }\n\n            return <MenuDivider key={index} />\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n\nexport default OrderSelect\n","import {Box} from '@sanity/ui'\nimport {useNProgress} from '@tanem/react-nprogress'\nimport React from 'react'\n\ntype Props = {\n  loading?: boolean\n}\n\nconst Progress = (props: Props) => {\n  const {loading} = props\n\n  const {animationDuration, isFinished, progress} = useNProgress({\n    animationDuration: 300,\n    isAnimating: loading\n  })\n\n  return (\n    <Box\n      style={{\n        opacity: isFinished ? 0 : 1,\n        transition: `opacity ${animationDuration}ms linear`\n      }}\n    >\n      <Box\n        style={{\n          height: '1px',\n          background: 'rgba(255, 255, 255, 0.5)',\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          transition: `width ${animationDuration}ms linear`,\n          width: `${progress * 100}%`\n        }}\n      />\n    </Box>\n  )\n}\n\nexport default Progress\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Flex, Label, Text} from '@sanity/ui'\nimport {SearchFacetInputProps} from '@types'\nimport React, {ReactNode} from 'react'\nimport {useDispatch} from 'react-redux'\nimport styled from 'styled-components'\nimport {searchActions} from '../../modules/search'\n\ntype Props = {\n  children: ReactNode\n  facet: SearchFacetInputProps\n}\n\nconst Container = styled(Box)`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: ${props => props.theme.sanity.radius[2]}px;\n`\n\nconst SearchFacet = (props: Props) => {\n  const {children, facet} = props\n\n  // Redux\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    dispatch(searchActions.facetsRemove({facetName: facet.name}))\n  }\n\n  return (\n    <Container padding={[2, 2, 1]}>\n      <Flex align={['flex-start', 'flex-start', 'center']} direction={['column', 'column', 'row']}>\n        {/* Title */}\n        <Box paddingBottom={[3, 3, 0]} paddingLeft={1} paddingRight={2} paddingTop={[1, 1, 0]}>\n          <Label\n            size={0}\n            style={{\n              whiteSpace: 'nowrap'\n            }}\n          >\n            {facet.title}\n          </Label>\n        </Box>\n\n        <Flex align=\"center\">\n          {children}\n\n          {/* Close button */}\n          <Box marginLeft={1} paddingX={2}>\n            <Text muted size={0}>\n              <CloseIcon onClick={handleClose} />\n            </Text>\n          </Box>\n        </Flex>\n      </Flex>\n    </Container>\n  )\n}\n\nexport default SearchFacet\n","import {TextInput} from '@sanity/ui'\nimport React, {ChangeEvent} from 'react'\n\n// TODO: use correct type\ntype Props = any & {\n  onValueChange: (value: number) => void\n  value?: number\n}\n\nconst TextInputNumber = (props: Props) => {\n  const {onValueChange, value, ...remainingProps} = props\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value\n    const regex = /^[0-9\\b]+$/\n\n    // Test for number and strip leading zeroes\n    if (val === '' || regex.test(val)) {\n      onValueChange(parseInt(val, 10) || '')\n    }\n  }\n\n  return (\n    <TextInput\n      {...remainingProps}\n      onChange={handleChange} //\n      value={value ?? ''}\n    />\n  )\n}\n\nexport default TextInputNumber\n","import {SelectIcon} from '@sanity/icons'\nimport {Box, Button, Menu, MenuButton, MenuDivider, MenuItem} from '@sanity/ui'\nimport {\n  SearchFacetInputNumberModifier,\n  SearchFacetInputNumberProps,\n  SearchFacetOperatorType\n} from '@types'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport {operators} from '../../config/searchFacets'\nimport {searchActions} from '../../modules/search'\nimport SearchFacet from '../SearchFacet'\nimport TextInputNumber from '../TextInputNumber'\n\ntype Props = {\n  facet: SearchFacetInputNumberProps\n}\n\nconst SearchFacetNumber = (props: Props) => {\n  const {facet} = props\n\n  // Redux\n  const dispatch = useDispatch()\n\n  const modifiers = facet?.modifiers\n  const selectedModifier = facet?.modifier\n    ? modifiers?.find(modifier => modifier.name === facet?.modifier)\n    : modifiers?.[0]\n\n  const handleOperatorItemClick = (operatorType: SearchFacetOperatorType) => {\n    dispatch(searchActions.facetsUpdate({name: facet.name, operatorType}))\n  }\n\n  const handleModifierClick = (modifier: SearchFacetInputNumberModifier) => {\n    dispatch(searchActions.facetsUpdate({name: facet.name, modifier: modifier.name}))\n  }\n\n  const handleValueChange = (value: number) => {\n    dispatch(searchActions.facetsUpdate({name: facet.name, value}))\n  }\n\n  const selectedOperatorType: SearchFacetOperatorType = facet.operatorType ?? 'greaterThan'\n\n  return (\n    <SearchFacet facet={facet}>\n      {/* Optional operators */}\n      {facet?.operatorTypes && (\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={SelectIcon}\n              padding={2} //\n              text={operators[selectedOperatorType].label}\n            />\n          }\n          id=\"operators\"\n          menu={\n            <Menu>\n              {facet.operatorTypes.map((operatorType, index) => {\n                if (operatorType) {\n                  return (\n                    <MenuItem\n                      disabled={operatorType === selectedOperatorType}\n                      fontSize={1}\n                      key={operatorType}\n                      onClick={() => handleOperatorItemClick(operatorType)}\n                      padding={2}\n                      text={operators[operatorType].label}\n                    />\n                  )\n                }\n\n                return <MenuDivider key={index} />\n              })}\n            </Menu>\n          }\n        />\n      )}\n\n      {/* Value */}\n      <Box marginX={1} style={{maxWidth: '50px'}}>\n        <TextInputNumber\n          fontSize={1}\n          onValueChange={handleValueChange}\n          padding={2}\n          radius={2}\n          width={2}\n          value={facet?.value}\n        />\n      </Box>\n\n      {/* Modifiers */}\n      {modifiers && (\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={SelectIcon}\n              padding={2} //\n              text={selectedModifier?.title}\n            />\n          }\n          id=\"modifier\"\n          menu={\n            <Menu>\n              {modifiers.map(modifier => (\n                <MenuItem\n                  disabled={modifier.name === facet.modifier}\n                  fontSize={1}\n                  key={modifier.name}\n                  onClick={() => handleModifierClick(modifier)}\n                  padding={2}\n                  text={modifier.title}\n                />\n              ))}\n            </Menu>\n          }\n        />\n      )}\n    </SearchFacet>\n  )\n}\n\nexport default SearchFacetNumber\n","import {SelectIcon} from '@sanity/icons'\nimport {Button, Menu, MenuButton, MenuDivider, MenuItem} from '@sanity/ui'\nimport {\n  SearchFacetInputSelectListItemProps,\n  SearchFacetInputSelectProps,\n  SearchFacetOperatorType\n} from '@types'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\n\nimport {operators} from '../../config/searchFacets'\nimport {searchActions} from '../../modules/search'\nimport SearchFacet from '../SearchFacet'\n\ntype Props = {\n  facet: SearchFacetInputSelectProps\n}\n\nconst SearchFacetSelect = (props: Props) => {\n  const {facet} = props\n\n  // Redux\n  const dispatch = useDispatch()\n\n  const options = facet?.options\n\n  const selectedItem = options?.find(v => v.name === facet?.value)\n\n  const handleListItemClick = (option: SearchFacetInputSelectListItemProps) => {\n    dispatch(searchActions.facetsUpdate({name: facet.name, value: option.name}))\n  }\n\n  const handleOperatorItemClick = (operatorType: SearchFacetOperatorType) => {\n    dispatch(searchActions.facetsUpdate({name: facet.name, operatorType}))\n  }\n\n  const selectedOperatorType: SearchFacetOperatorType = facet?.operatorType ?? 'is'\n\n  return (\n    <SearchFacet facet={facet}>\n      {/* Optional operators */}\n      {facet?.operatorTypes && (\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={SelectIcon}\n              padding={2} //\n              style={{\n                marginRight: '4px'\n              }}\n              text={operators[selectedOperatorType].label}\n            />\n          }\n          id=\"operators\"\n          menu={\n            <Menu>\n              {facet.operatorTypes.map((operatorType, index) => {\n                if (operatorType) {\n                  return (\n                    <MenuItem\n                      disabled={operatorType === selectedOperatorType}\n                      fontSize={1}\n                      key={operatorType}\n                      onClick={() => handleOperatorItemClick(operatorType)}\n                      padding={2}\n                      text={operators[operatorType].label}\n                    />\n                  )\n                }\n\n                return <MenuDivider key={index} />\n              })}\n            </Menu>\n          }\n        />\n      )}\n\n      {/* List */}\n      <MenuButton\n        button={\n          <Button\n            fontSize={1}\n            iconRight={SelectIcon}\n            padding={2} //\n            text={selectedItem?.title}\n          />\n        }\n        id=\"list\"\n        menu={\n          <Menu>\n            {options?.map((item, index) => (\n              <MenuItem\n                disabled={item.name === selectedItem?.name}\n                fontSize={1}\n                key={item.name}\n                onClick={() => handleListItemClick(options[index])}\n                padding={2}\n                text={item.title}\n              />\n            ))}\n          </Menu>\n        }\n      />\n    </SearchFacet>\n  )\n}\n\nexport default SearchFacetSelect\n","import {SelectIcon} from '@sanity/icons'\nimport {Box, Button, Menu, MenuButton, MenuDivider, MenuItem, TextInput} from '@sanity/ui'\nimport {SearchFacetInputStringProps, SearchFacetOperatorType} from '@types'\nimport React, {ChangeEvent} from 'react'\nimport {useDispatch} from 'react-redux'\n\nimport {operators} from '../../config/searchFacets'\nimport {searchActions} from '../../modules/search'\nimport SearchFacet from '../SearchFacet'\n\ntype Props = {\n  facet: SearchFacetInputStringProps\n}\n\nconst SearchFacetString = (props: Props) => {\n  const {facet} = props\n\n  // Redux\n  const dispatch = useDispatch()\n\n  const handleOperatorItemClick = (operatorType: SearchFacetOperatorType) => {\n    dispatch(searchActions.facetsUpdate({name: facet.name, operatorType}))\n  }\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(searchActions.facetsUpdate({name: facet.name, value: e.target.value}))\n  }\n\n  const selectedOperatorType: SearchFacetOperatorType = facet.operatorType\n\n  return (\n    <SearchFacet facet={facet}>\n      {/* Optional operators */}\n      {facet?.operatorTypes && (\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={SelectIcon}\n              padding={2} //\n              text={operators[selectedOperatorType].label}\n            />\n          }\n          id=\"operators\"\n          menu={\n            <Menu>\n              {facet.operatorTypes.map((operatorType, index) => {\n                if (operatorType) {\n                  return (\n                    <MenuItem\n                      disabled={operatorType === selectedOperatorType}\n                      fontSize={1}\n                      key={operatorType}\n                      onClick={() => handleOperatorItemClick(operatorType)}\n                      padding={2}\n                      text={operators[operatorType].label}\n                    />\n                  )\n                }\n\n                return <MenuDivider key={index} />\n              })}\n            </Menu>\n          }\n        />\n      )}\n\n      {/* Value */}\n      {!operators[selectedOperatorType].hideInput && (\n        <Box marginLeft={1} style={{maxWidth: '125px'}}>\n          <TextInput\n            fontSize={1}\n            onChange={handleChange}\n            padding={2}\n            radius={2}\n            width={2}\n            value={facet?.value}\n          />\n        </Box>\n      )}\n    </SearchFacet>\n  )\n}\n\nexport default SearchFacetString\n","import {black, hues, white} from '@sanity/color'\nimport {CloseIcon} from '@sanity/icons'\nimport {Box, Card, studioTheme, Text} from '@sanity/ui'\nimport React from 'react'\nimport {components, StylesConfig} from 'react-select'\nimport {Virtuoso} from 'react-virtuoso'\n\nconst themeDarkPrimaryBlue = studioTheme?.color?.dark?.primary?.spot?.blue\nconst themeDarkDefaultBaseBg = studioTheme?.color?.dark?.default?.base?.bg\nconst themeRadius = studioTheme?.radius\nconst themeSpace = studioTheme?.space\nconst themeTextSizes = studioTheme?.fonts?.text?.sizes\n\nexport const reactSelectStyles: StylesConfig<\n  {\n    label: string\n    value: string\n  },\n  false\n> = {\n  control: (styles, {isDisabled, isFocused}) => {\n    let boxShadow = `inset 0 0 0 1px ${hues.gray[900].hex}`\n    if (isFocused) {\n      boxShadow = `inset 0 0 0 1px ${hues.gray[900].hex}, 0 0 0 1px var(--card-bg-color), 0 0 0 3px var(--card-focus-ring-color) !important`\n    }\n\n    return {\n      ...styles,\n      backgroundColor: themeDarkDefaultBaseBg,\n      color: white.hex,\n      border: 'none',\n      borderRadius: themeRadius[2],\n      boxShadow,\n      fontSize: themeTextSizes[1].fontSize,\n      minHeight: '25px',\n      opacity: isDisabled ? 0.5 : 'inherit',\n      outline: 'none',\n      transition: 'none',\n      '&:hover': {\n        boxShadow: `inset 0 0 0 1px ${studioTheme.color.dark.default.input.default.hovered.border}`\n      }\n    }\n  },\n  input: styles => ({\n    ...styles,\n    color: white.hex,\n    fontFamily: studioTheme.fonts.text.family,\n    marginLeft: themeSpace[2]\n  }),\n  menuList: styles => ({\n    ...styles,\n    padding: 0\n  }),\n  noOptionsMessage: styles => ({\n    ...styles,\n    fontFamily: studioTheme.fonts.text.family,\n    fontSize: themeTextSizes[1].fontSize,\n    lineHeight: '1em'\n  }),\n  option: (styles, {isFocused}) => ({\n    ...styles,\n    backgroundColor: isFocused ? themeDarkPrimaryBlue : 'transparent',\n    borderRadius: themeRadius[2],\n    color: isFocused ? black.hex : 'inherit',\n    fontSize: themeTextSizes[1].fontSize,\n    lineHeight: '1em',\n    padding: '4px 6px', // TODO: use theme value\n    '&:hover': {\n      backgroundColor: themeDarkPrimaryBlue,\n      color: black.hex\n    }\n  }),\n  placeholder: styles => ({\n    ...styles,\n    fontFamily: studioTheme.fonts.text.family,\n    marginLeft: themeSpace[2],\n    paddingBottom: '2px'\n  }),\n  singleValue: styles => ({\n    ...styles,\n    color: white.hex,\n    lineHeight: '1em',\n    paddingBottom: '1px'\n  }),\n  valueContainer: styles => ({\n    ...styles,\n    margin: 0,\n    padding: 0\n  })\n}\n\nconst ClearIndicator = (props: any) => {\n  return (\n    <components.ClearIndicator {...props}>\n      <Box\n        paddingRight={1}\n        style={{\n          transform: 'scale(0.85)'\n        }}\n      >\n        <Text muted size={0}>\n          <CloseIcon />\n        </Text>\n      </Box>\n    </components.ClearIndicator>\n  )\n}\n\nconst Menu = (props: any) => {\n  return (\n    <components.Menu {...props}>\n      <Card radius={1} shadow={2}>\n        {props.children}\n      </Card>\n    </components.Menu>\n  )\n}\n\nconst MenuList = (props: any) => {\n  const {children} = props\n\n  const MAX_ROWS = 5\n  const OPTION_HEIGHT = 33\n\n  if (Array.isArray(children)) {\n    const height =\n      children.length > MAX_ROWS ? OPTION_HEIGHT * MAX_ROWS : children.length * OPTION_HEIGHT\n\n    return (\n      <Virtuoso\n        className=\"media__custom-scrollbar\"\n        itemContent={index => {\n          const item = children[index]\n          return <Option {...item.props} />\n        }}\n        style={{height}}\n        totalCount={children.length}\n      />\n    )\n  }\n  return <components.MenuList {...props}>{children}</components.MenuList>\n}\n\nconst NoOptionsMessage = (props: any) => {\n  return <components.NoOptionsMessage {...props}>{props.children}</components.NoOptionsMessage>\n}\n\nconst Option = (props: any) => {\n  return (\n    <Box padding={1}>\n      <components.Option {...props}>\n        <Box paddingY={1}>\n          <Text size={1} style={{color: 'inherit'}} textOverflow=\"ellipsis\">\n            {props.children}\n          </Text>\n        </Box>\n      </components.Option>\n    </Box>\n  )\n}\n\nconst SingleValue = (props: any) => {\n  return (\n    <components.SingleValue {...props}>\n      <Box paddingLeft={2}>\n        <Text\n          size={1}\n          style={{\n            color: 'inherit',\n            lineHeight: '2em' // HACK: prevent text descenders from cropping\n          }}\n          textOverflow=\"ellipsis\"\n        >\n          {props.children}\n        </Text>\n      </Box>\n    </components.SingleValue>\n  )\n}\n\nexport const reactSelectComponents = {\n  ClearIndicator,\n  DropdownIndicator: null,\n  IndicatorSeparator: null,\n  Menu,\n  MenuList,\n  NoOptionsMessage,\n  Option,\n  SingleValue\n}\n","import {SelectIcon} from '@sanity/icons'\nimport {Box, Button, Menu, MenuButton, MenuDivider, MenuItem} from '@sanity/ui'\nimport {ReactSelectOption, SearchFacetInputSearchableProps, SearchFacetOperatorType} from '@types'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport Select from 'react-select'\nimport {operators} from '../../config/searchFacets'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {searchActions} from '../../modules/search'\nimport {selectTags} from '../../modules/tags'\nimport {reactSelectComponents, reactSelectStyles} from '../../styled/react-select/single'\nimport getTagSelectOptions from '../../utils/getTagSelectOptions'\nimport SearchFacet from '../SearchFacet'\n\ntype Props = {\n  facet: SearchFacetInputSearchableProps\n}\n\nconst SearchFacetTags = (props: Props) => {\n  const {facet} = props\n\n  // Redux\n  const dispatch = useDispatch()\n  const tags = useTypedSelector(state => selectTags(state))\n  const tagsFetching = useTypedSelector(state => state.tags.fetching)\n  const allTagOptions = getTagSelectOptions(tags)\n\n  const handleChange = (option: ReactSelectOption) => {\n    dispatch(\n      searchActions.facetsUpdate({\n        name: facet.name,\n        value: option\n      })\n    )\n  }\n\n  const handleOperatorItemClick = (operatorType: SearchFacetOperatorType) => {\n    dispatch(\n      searchActions.facetsUpdate({\n        name: facet.name,\n        operatorType\n      })\n    )\n  }\n\n  const selectedOperatorType: SearchFacetOperatorType = facet.operatorType\n\n  return (\n    <SearchFacet facet={facet}>\n      {/* Optional operators */}\n      {facet?.operatorTypes && (\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={SelectIcon}\n              padding={2} //\n              text={operators[selectedOperatorType].label}\n            />\n          }\n          id=\"operators\"\n          menu={\n            <Menu>\n              {facet.operatorTypes.map((operatorType, index) => {\n                if (operatorType) {\n                  return (\n                    <MenuItem\n                      disabled={operatorType === selectedOperatorType}\n                      fontSize={1}\n                      key={operatorType}\n                      onClick={() => handleOperatorItemClick(operatorType)}\n                      padding={2}\n                      text={operators[operatorType].label}\n                    />\n                  )\n                }\n\n                return <MenuDivider key={index} />\n              })}\n            </Menu>\n          }\n        />\n      )}\n\n      {/* Value */}\n      {!operators[selectedOperatorType].hideInput && (\n        <Box marginX={1} style={{width: '160px'}}>\n          <Select\n            components={reactSelectComponents}\n            instanceId=\"facet-searchable\"\n            isClearable\n            isDisabled={tagsFetching}\n            isSearchable\n            name=\"tags\"\n            noOptionsMessage={() => 'No tags'}\n            onChange={value => handleChange(value as ReactSelectOption)}\n            options={allTagOptions}\n            placeholder={tagsFetching ? 'Loading...' : 'Select...'}\n            styles={reactSelectStyles}\n            value={facet?.value}\n          />\n        </Box>\n      )}\n    </SearchFacet>\n  )\n}\n\nexport default SearchFacetTags\n","import {Box, Flex, Inline} from '@sanity/ui'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport SearchFacetNumber from '../SearchFacetNumber'\nimport SearchFacetSelect from '../SearchFacetSelect'\nimport SearchFacetString from '../SearchFacetString'\nimport SearchFacetTags from '../SearchFacetTags'\n\ntype Props = {\n  layout?: 'inline' | 'stack'\n}\n\nconst StackContainer = styled(Flex)`\n  > * {\n    margin-bottom: ${props => props.theme.sanity.space[2]}px;\n  }\n`\n\nconst SearchFacets = (props: Props) => {\n  const {layout = 'inline'} = props\n\n  // Redux\n  const searchFacets = useTypedSelector(state => state.search.facets)\n\n  const Items = searchFacets.map(facet => {\n    if (facet.type === 'number') {\n      return <SearchFacetNumber facet={facet} key={facet.name} />\n    }\n\n    if (facet.type === 'searchable') {\n      return <SearchFacetTags facet={facet} key={facet.name} />\n    }\n\n    if (facet.type === 'select') {\n      return <SearchFacetSelect facet={facet} key={facet.name} />\n    }\n\n    if (facet.type === 'string') {\n      return <SearchFacetString facet={facet} key={facet.name} />\n    }\n\n    return null\n  })\n\n  if (layout === 'inline') {\n    if (searchFacets.length === 0) {\n      return null\n    }\n\n    return (\n      <Box marginBottom={2}>\n        <Inline space={2}>{Items}</Inline>\n      </Box>\n    )\n  }\n\n  if (layout === 'stack') {\n    return (\n      <StackContainer align=\"flex-start\" direction=\"column\">\n        {Items}\n      </StackContainer>\n    )\n  }\n\n  throw Error('Invalid layout')\n}\n\nexport default SearchFacets\n","import {AddCircleIcon} from '@sanity/icons'\nimport {Button, Flex, Menu, MenuButton, MenuDivider, MenuGroup, MenuItem} from '@sanity/ui'\nimport {SearchFacetDivider, SearchFacetGroup, SearchFacetInputProps} from '@types'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport {FACETS} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {searchActions} from '../../modules/search'\n\nconst SearchFacetsControl = () => {\n  // Redux\n  const dispatch = useDispatch()\n  const assetTypes = useTypedSelector(state => state.assets.assetTypes)\n  const searchFacets = useTypedSelector(state => state.search.facets)\n  const selectedDocument = useTypedSelector(state => state.selected.document)\n\n  const isTool = !selectedDocument\n\n  const filteredFacets = FACETS\n    // Filter facets based on current context, whether it's invoked as a tool, or via selection through via custom asset source.\n    .filter(facet => {\n      if (facet.type === 'group' || facet.type === 'divider') {\n        return true\n      }\n\n      if (isTool) {\n        return !facet?.selectOnly\n      }\n\n      const matchingAssetTypes = facet.assetTypes.filter(assetType =>\n        assetTypes.includes(assetType)\n      )\n      return matchingAssetTypes.length > 0\n    })\n    // Remove adjacent and leading / trailing dividers\n    .filter((facet, index, facets) => {\n      const previousFacet = facets[index - 1]\n      // Ignore leading + trailing dividers\n      if (facet.type === 'divider' && (index === 0 || index === facets.length - 1)) {\n        return false\n      }\n      // Ignore adjacent dividers\n      if (facet.type === 'divider' && previousFacet?.type === 'divider') {\n        return false\n      }\n      return true\n    })\n\n  // Determine if there are any remaining un-selected facets\n  // (This operates under the assumption that only one of each facet can be active at any given time)\n  const hasRemainingSearchFacets =\n    filteredFacets.filter(facet => facet).length - searchFacets.length > 0\n\n  const renderMenuFacets = (\n    facets: (SearchFacetDivider | SearchFacetGroup | SearchFacetInputProps)[],\n    level: number = 0\n  ) => {\n    return (\n      <>\n        {facets?.map((facet, index) => {\n          if (facet.type === 'divider') {\n            return <MenuDivider key={index} />\n          }\n\n          // Recursively render menu facets\n          if (facet.type === 'group') {\n            return (\n              <MenuGroup key={`group-${level}-${index}`} text={facet.title} title={facet.title}>\n                {renderMenuFacets(facet.facets, level + 1)}\n              </MenuGroup>\n            )\n          }\n\n          if (facet) {\n            const isPresent = !!searchFacets.find(v => v.name === facet.name)\n\n            return (\n              <MenuItem\n                disabled={isPresent}\n                fontSize={1}\n                key={facet.name}\n                onClick={() => dispatch(searchActions.facetsAdd({facet}))}\n                padding={2}\n                text={facet.title}\n              />\n            )\n          }\n\n          return null\n        })}\n      </>\n    )\n  }\n\n  return (\n    <Flex>\n      {/* Add filter button */}\n      <MenuButton\n        button={\n          <Button\n            disabled={!hasRemainingSearchFacets}\n            fontSize={1}\n            icon={AddCircleIcon}\n            mode=\"bleed\"\n            text=\"Add filter\"\n            tone=\"primary\"\n          />\n        }\n        id=\"facets\"\n        menu={<Menu>{renderMenuFacets(filteredFacets)}</Menu>}\n        placement=\"right-start\"\n        portal\n      />\n\n      {/* Clear facets button */}\n      {searchFacets.length > 0 && (\n        <Button\n          fontSize={1}\n          mode=\"bleed\"\n          onClick={() => dispatch(searchActions.facetsClear())}\n          text=\"Clear\"\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default SearchFacetsControl\n","import React from 'react'\n\nconst TagIcon = () => (\n  <svg\n    data-sanity-icon=\"media__tag\" // For icon usage with @sanity/ui <Button />\n    fill=\"currentColor\"\n    height=\"1em\"\n    stroke=\"currentColor\"\n    strokeWidth=\"0\"\n    viewBox=\"0 0 512 512\"\n    width=\"1em\"\n  >\n    <path\n      d=\"M435.25 48h-122.9a14.46 14.46 0 00-10.2 4.2L56.45 297.9a28.85 28.85 0 000 40.7l117 117a28.85 28.85 0 0040.7 0L459.75 210a14.46 14.46 0 004.2-10.2v-123a28.66 28.66 0 00-28.7-28.8z\"\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"32\"\n    />\n    <path d=\"M384 160a32 32 0 1132-32 32 32 0 01-32 32z\" />\n  </svg>\n)\n\nexport default TagIcon\n","import {CloseIcon, SearchIcon} from '@sanity/icons'\nimport {Box, Flex, TextInput} from '@sanity/ui'\nimport React, {ChangeEvent} from 'react'\nimport {useDispatch} from 'react-redux'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {searchActions} from '../../modules/search'\n\nconst TextInputSearch = () => {\n  // Redux\n  const searchQuery = useTypedSelector(state => state.search.query)\n\n  // Redux\n  const dispatch = useDispatch()\n\n  // Callbacks\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(searchActions.querySet({searchQuery: e.currentTarget.value}))\n  }\n\n  const handleClear = () => {\n    dispatch(searchActions.querySet({searchQuery: ''}))\n  }\n\n  return (\n    <Box style={{position: 'relative'}}>\n      <TextInput\n        fontSize={1}\n        icon={SearchIcon}\n        onChange={handleChange}\n        placeholder=\"Search\"\n        radius={2}\n        value={searchQuery}\n      />\n\n      {/* Clear form button */}\n      {searchQuery.length > 0 && (\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          onClick={handleClear}\n          style={{\n            cursor: 'pointer',\n            height: '100%',\n            opacity: 0.75,\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '2em',\n            zIndex: 1 // force stacking context\n          }}\n        >\n          <CloseIcon />\n        </Flex>\n      )}\n    </Box>\n  )\n}\n\nexport default TextInputSearch\n","import {hues} from '@sanity/color'\nimport {Box, Button, Flex, Inline, useMediaIndex} from '@sanity/ui'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {dialogActions} from '../../modules/dialog'\nimport {tagsActions} from '../../modules/tags'\nimport ButtonViewGroup from '../ButtonViewGroup'\nimport OrderSelect from '../OrderSelect'\nimport Progress from '../Progress'\nimport SearchFacets from '../SearchFacets'\nimport SearchFacetsControl from '../SearchFacetsControl'\nimport TagIcon from '../TagIcon'\nimport TextInputSearch from '../TextInputSearch'\n\nconst Controls = () => {\n  // Redux\n  const dispatch = useDispatch()\n  const fetching = useTypedSelector(state => state.assets.fetching)\n  const pageIndex = useTypedSelector(state => state.assets.pageIndex)\n  const searchFacets = useTypedSelector(state => state.search.facets)\n  const tagsPanelVisible = useTypedSelector(state => state.tags.panelVisible)\n\n  const mediaIndex = useMediaIndex()\n\n  // Callbacks\n  const handleShowSearchFacetDialog = () => {\n    dispatch(dialogActions.showSearchFacets())\n  }\n\n  const handleShowTagsDialog = () => {\n    dispatch(dialogActions.showTags())\n  }\n\n  const toggleTagsPanelToggle = () => {\n    dispatch(tagsActions.panelVisibleSet({panelVisible: !tagsPanelVisible}))\n  }\n\n  return (\n    <Box\n      paddingY={2}\n      style={{\n        borderBottom: `1px solid ${hues.gray?.[900].hex}`,\n        zIndex: 2\n      }}\n    >\n      {/* Rows: search / filters / orders  */}\n      <Box marginBottom={2}>\n        <Flex\n          align=\"flex-start\"\n          direction={['column', 'column', 'column', 'column', 'row']}\n          justify=\"space-between\"\n        >\n          {/* Search + Filters */}\n          <Flex\n            flex={1}\n            style={{\n              alignItems: 'flex-start',\n              flex: 1,\n              height: '100%',\n              justifyContent: mediaIndex < 2 ? 'space-between' : 'flex-start',\n              position: 'relative',\n              width: '100%'\n            }}\n          >\n            <Box marginX={2} style={{minWidth: '200px'}}>\n              {/* Search */}\n              <TextInputSearch />\n            </Box>\n\n            <Box display={['none', 'none', 'block']}>\n              <SearchFacets />\n\n              {/* Search Facets Control (add / clear) */}\n              <SearchFacetsControl />\n            </Box>\n\n            <Box display={['block', 'block', 'none']} marginX={2}>\n              <Inline space={2} style={{whiteSpace: 'nowrap'}}>\n                {/* Filters button (small) */}\n                <Button\n                  fontSize={1}\n                  mode=\"ghost\"\n                  onClick={handleShowSearchFacetDialog}\n                  text={`Filters${searchFacets.length > 0 ? ` (${searchFacets.length})` : ''}`}\n                  tone=\"primary\"\n                />\n\n                {/* Tags button (small) */}\n                <Button\n                  fontSize={1}\n                  mode=\"ghost\"\n                  onClick={handleShowTagsDialog}\n                  text={`Tags`}\n                  tone=\"primary\"\n                />\n              </Inline>\n            </Box>\n          </Flex>\n        </Flex>\n      </Box>\n\n      <Box>\n        <Flex align=\"center\" justify={['space-between']}>\n          {/* Views */}\n          <Box marginX={2}>\n            <ButtonViewGroup />\n          </Box>\n\n          <Flex marginX={2}>\n            {/* Orders */}\n            <OrderSelect />\n            {/* Tags panel toggle */}\n            <Box display={['none', 'none', 'block']} marginLeft={2}>\n              <Button\n                fontSize={1}\n                icon={\n                  <Box style={{transform: 'scale(0.75)'}}>\n                    <TagIcon />\n                  </Box>\n                }\n                onClick={toggleTagsPanelToggle}\n                mode={tagsPanelVisible ? 'default' : 'ghost'}\n                text={tagsPanelVisible ? 'Tags' : ''}\n              />\n            </Box>\n          </Flex>\n        </Flex>\n      </Box>\n\n      {/* Progress bar */}\n      <Progress key={pageIndex} loading={fetching} />\n    </Box>\n  )\n}\n\nexport default Controls\n","import {PayloadAction, createSlice} from '@reduxjs/toolkit'\n\ntype DebugReducerState = {\n  badConnection: boolean\n  enabled: boolean\n}\n\nconst initialState = {\n  badConnection: false,\n  enabled: false\n} as DebugReducerState\n\nconst debugSlice = createSlice({\n  name: 'debug',\n  initialState,\n  reducers: {\n    setBadConnection(state, action: PayloadAction<boolean>) {\n      state.badConnection = action.payload\n    },\n    toggleEnabled(state) {\n      state.enabled = !state.enabled\n    }\n  }\n})\n\nexport const debugActions = debugSlice.actions\n\nexport default debugSlice.reducer\n","import {PlugIcon} from '@sanity/icons'\nimport {Box, Flex, Switch, Text, Tooltip} from '@sanity/ui'\nimport React, {ChangeEvent} from 'react'\nimport {useDispatch} from 'react-redux'\nimport useKeyPress from '../../hooks/useKeyPress'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {debugActions} from '../../modules/debug'\n\nconst DebugControls = () => {\n  // Redux\n  const dispatch = useDispatch()\n  const badConnection = useTypedSelector(state => state.debug.badConnection)\n  const debugEnabled = useTypedSelector(state => state.debug.enabled)\n\n  // Callbacks\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const checked = e.target.checked\n\n    dispatch(debugActions.setBadConnection(checked))\n  }\n\n  const handleToggleControls = () => {\n    dispatch(debugActions.toggleEnabled())\n  }\n\n  // Close on escape key press\n  useKeyPress('alt+ctrl+shift+/', handleToggleControls)\n\n  if (!debugEnabled) {\n    return null\n  }\n\n  return (\n    <Box\n      padding={4}\n      style={{\n        bottom: 0,\n        left: 0,\n        pointerEvents: 'none',\n        position: 'fixed',\n        width: '100%'\n      }}\n    >\n      {/* Bad connection toggle */}\n      <Flex align=\"center\">\n        <Box marginRight={3}>\n          <Text muted size={1}>\n            <PlugIcon />\n          </Text>\n        </Box>\n        <Tooltip\n          content={\n            <Box padding={2}>\n              <Text muted size={1}>\n                {badConnection\n                  ? 'Bad connection: +3000ms & 50% chance to fail'\n                  : 'No connection throttling'}\n              </Text>\n            </Box>\n          }\n          fallbackPlacements={['right', 'left']}\n          placement=\"bottom\"\n        >\n          <Switch\n            checked={badConnection}\n            onChange={handleChange}\n            style={{\n              pointerEvents: 'auto'\n            }}\n          />\n        </Tooltip>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default DebugControls\n","import {ImageAsset} from '@types'\n\nconst imageDprUrl = (\n  asset: ImageAsset,\n  options: {\n    width: number\n    height?: number\n  }\n): string => {\n  const dpi =\n    typeof window === 'undefined' || !window.devicePixelRatio\n      ? 1\n      : Math.round(window.devicePixelRatio)\n  const imgH = options?.height ? options?.height * Math.max(1, dpi) : undefined\n  const imgW = options.width * Math.max(1, dpi)\n\n  const urlParams = new URLSearchParams()\n  urlParams.append('fit', 'max')\n  urlParams.append('w', imgW.toString())\n  if (imgH) {\n    urlParams.append('h', imgH.toString())\n  }\n\n  return `${asset.url}?${urlParams.toString()}`\n}\n\nexport default imageDprUrl\n","// Recursively sanitize form data:\n// - convert empty strings, undefined values and empty arrays to null (to correctly unset / delete fields)\n// - trim whitespace on string fleids\n\ntype FormData = Record<string, any>\n\nconst sanitizeFormData = (formData: FormData): FormData => {\n  return Object.keys(formData).reduce((acc: FormData, key) => {\n    const val = formData[key]\n\n    // TODO: refactor\n    if (typeof val === 'object' && val !== null && val.constructor !== Array) {\n      acc[key] = sanitizeFormData(val)\n    } else if (val === '' || typeof val === 'undefined' || val?.length === 0) {\n      acc[key] = null\n    } else if (typeof val === 'string' && val) {\n      acc[key] = formData[key].trim()\n    } else {\n      acc[key] = formData[key]\n    }\n\n    return acc\n  }, {})\n}\n\nexport default sanitizeFormData\n","import {Asset, FileAsset, ImageAsset} from '@types'\n\nexport const isFileAsset = (asset: Asset): asset is FileAsset => {\n  return (asset as FileAsset)._type === 'sanity.fileAsset'\n}\n\nexport const isImageAsset = (asset: Asset): asset is ImageAsset => {\n  return (asset as ImageAsset)._type === 'sanity.imageAsset'\n}\n","import {ImageAsset} from '@types'\n\nconst getAssetResolution = (asset: ImageAsset) => {\n  return `${asset.metadata.dimensions.width}x${asset.metadata.dimensions.height}px`\n}\n\nexport default getAssetResolution\n","import {ClipboardIcon} from '@sanity/icons'\nimport {Button, Popover, Text} from '@sanity/ui'\nimport copy from 'copy-to-clipboard'\nimport React, {useEffect, useRef, useState} from 'react'\n\ntype Props = {\n  disabled?: boolean\n  url: string\n}\n\nconst ButtonAssetCopy = (props: Props) => {\n  const {disabled, url} = props\n\n  // Refs\n  const refPopoverTimeout = useRef<ReturnType<typeof window.setTimeout>>()\n\n  // State\n  const [popoverVisible, setPopoverVisible] = useState(false)\n\n  // Callbacks\n  const handleClick = () => {\n    if (refPopoverTimeout.current) {\n      clearTimeout(refPopoverTimeout.current)\n    }\n\n    setPopoverVisible(true)\n    copy(url)\n\n    refPopoverTimeout.current = setTimeout(() => {\n      setPopoverVisible(false)\n    }, 1250)\n  }\n\n  // Effects\n  useEffect(() => {\n    return () => {\n      if (refPopoverTimeout.current) {\n        clearTimeout(refPopoverTimeout.current)\n      }\n    }\n  }, [])\n\n  return (\n    <Popover\n      content={\n        <Text muted size={1}>\n          Copied!\n        </Text>\n      }\n      open={popoverVisible}\n      padding={2}\n      placement=\"top\"\n      radius={1}\n    >\n      <Button\n        disabled={disabled}\n        fontSize={1}\n        icon={ClipboardIcon}\n        mode=\"ghost\"\n        onClick={handleClick}\n        text=\"Copy URL\"\n      />\n    </Popover>\n  )\n}\n\nexport default ButtonAssetCopy\n","import {DownloadIcon} from '@sanity/icons'\nimport {Box, Button, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {Asset, AssetItem} from '@types'\nimport format from 'date-fns/format'\nimport filesize from 'filesize'\nimport React, {ReactNode} from 'react'\nimport getAssetResolution from '../../utils/getAssetResolution'\nimport {isImageAsset} from '../../utils/typeGuards'\nimport ButtonAssetCopy from '../ButtonAssetCopy'\n\ntype Props = {\n  asset: Asset\n  item?: AssetItem\n}\n\nconst Row = ({label, value}: {label: string; value: ReactNode}) => {\n  return (\n    <Flex justify=\"space-between\">\n      <Text\n        size={1}\n        style={{\n          opacity: 0.8,\n          width: '40%'\n        }}\n        textOverflow=\"ellipsis\"\n      >\n        {label}\n      </Text>\n      <Text\n        size={1}\n        style={{\n          opacity: 0.4,\n          textAlign: 'right',\n          width: '60%'\n        }}\n        textOverflow=\"ellipsis\"\n      >\n        {value}\n      </Text>\n    </Flex>\n  )\n}\n\nconst AssetMetadata = (props: Props) => {\n  const {asset, item} = props\n\n  const exif = asset?.metadata?.exif\n\n  // Callbacks\n  const handleDownload = () => {\n    window.location.href = `${asset.url}?dl=${asset.originalFilename}`\n  }\n\n  return (\n    <Box marginTop={3}>\n      {/* Base */}\n      <Box>\n        <Stack space={3}>\n          <Row label=\"Size\" value={filesize(asset?.size, {base: 10, round: 0})} />\n          <Row label=\"MIME type\" value={asset?.mimeType} />\n          <Row label=\"Extension\" value={(asset?.extension).toUpperCase()} />\n          {isImageAsset(asset) && <Row label=\"Dimensions\" value={getAssetResolution(asset)} />}\n        </Stack>\n      </Box>\n      {/* EXIF */}\n      {exif && (\n        <>\n          {/* Divider */}\n          <Box\n            marginY={4}\n            style={{\n              background: '#222',\n              height: '1px',\n              width: '100%'\n            }}\n          />\n          <Box>\n            <Stack space={3}>\n              {exif.ISO && <Row label=\"ISO\" value={exif.ISO} />}\n              {exif.FNumber && <Row label=\"Aperture\" value={`ƒ/${exif.FNumber}`} />}\n              {exif.FocalLength && <Row label=\"Focal length\" value={`${exif.FocalLength}mm`} />}\n              {exif.ExposureTime && (\n                <Row label=\"Exposure time\" value={`1/${1 / exif.ExposureTime}`} />\n              )}\n              {exif.DateTimeOriginal && (\n                <Row label=\"Original date\" value={format(new Date(exif.DateTimeOriginal), 'PPp')} />\n              )}\n            </Stack>\n          </Box>\n        </>\n      )}\n\n      {/* Asset actions */}\n      <Box marginTop={5}>\n        <Inline space={2}>\n          {/* Download */}\n          <Button\n            disabled={!item || item?.updating}\n            fontSize={1}\n            icon={DownloadIcon}\n            mode=\"ghost\"\n            onClick={handleDownload}\n            text=\"Download\"\n          />\n          {/* Copy to clipboard */}\n          <ButtonAssetCopy disabled={!item || item?.updating} url={asset.url} />\n        </Inline>\n      </Box>\n    </Box>\n  )\n}\n\nexport default AssetMetadata\n","import {Dialog as SanityDialog} from '@sanity/ui'\nimport React, {ComponentProps} from 'react'\n\nconst Dialog = (props: ComponentProps<typeof SanityDialog>) => {\n  // HACK: Temporarily force fixed positioning on all @sanity/ui <Dialog /> components.\n  // The studio is currently setting absolute positioning on all root-level dialogs on the mobile breakpoint,\n  // causing unwanted scroll behaviour.\n  return <SanityDialog {...props} style={{position: 'fixed'}} />\n}\n\nexport default Dialog\n","import type {SanityDocument} from '@sanity/client'\nimport {Box, Button, Card, Stack, Text} from '@sanity/ui'\nimport React from 'react'\nimport {\n  SanityPreview,\n  SchemaType,\n  useDocumentStore,\n  useSchema,\n  WithReferringDocuments\n} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\ntype Props = {\n  assetId: string\n}\n\nconst DocumentList = (props: Props) => {\n  const {assetId} = props\n\n  const documentStore = useDocumentStore()\n\n  return (\n    <WithReferringDocuments documentStore={documentStore} id={assetId}>\n      {({isLoading, referringDocuments}) => (\n        <ReferringDocuments isLoading={isLoading} referringDocuments={referringDocuments} />\n      )}\n    </WithReferringDocuments>\n  )\n}\n\nconst ReferringDocuments = (props: {isLoading: boolean; referringDocuments: SanityDocument[]}) => {\n  const {isLoading, referringDocuments} = props\n\n  const schema = useSchema()\n\n  const draftIds = referringDocuments.reduce(\n    (acc: string[], doc: SanityDocument) =>\n      doc._id.startsWith('drafts.') ? acc.concat(doc._id.slice(7)) : acc,\n    []\n  )\n\n  const filteredDocuments: SanityDocument[] = referringDocuments.filter(\n    (doc: SanityDocument) => !draftIds.includes(doc._id)\n  )\n\n  if (isLoading) {\n    return <Text size={1}>Loading...</Text>\n  }\n\n  if (filteredDocuments.length === 0) {\n    return <Text size={1}>No documents are referencing this asset</Text>\n  }\n\n  return (\n    <Card flex={1} marginBottom={2} padding={2} radius={2} shadow={1}>\n      <Stack space={2}>\n        {filteredDocuments?.map(doc => (\n          <ReferringDocument doc={doc} key={doc._id} schemaType={schema.get(doc._type)} />\n        ))}\n      </Stack>\n    </Card>\n  )\n}\n\nconst ReferringDocument = (props: {doc: SanityDocument; schemaType?: SchemaType}) => {\n  const {doc, schemaType} = props\n\n  const {onClick} = useIntentLink({\n    intent: 'edit',\n    params: {id: doc._id}\n  })\n\n  return schemaType ? (\n    <Button key={doc._id} mode=\"bleed\" onClick={onClick} padding={2} style={{width: '100%'}}>\n      <SanityPreview layout=\"default\" schemaType={schemaType} value={doc} />\n    </Button>\n  ) : (\n    <Box padding={2}>\n      <Text size={1}>\n        A document of the unknown type <em>{doc._type}</em>\n      </Text>\n    </Box>\n  )\n}\n\nexport default DocumentList\n","import {Box, Flex} from '@sanity/ui'\nimport React, {MouseEvent} from 'react'\nimport {defaultStyles, FileIcon as ReactFileIcon} from 'react-file-icon'\nimport type {DefaultExtensionType} from 'react-file-icon'\nimport styled from 'styled-components'\n\ntype Props = {\n  extension?: string\n  onClick?: (e: MouseEvent) => void\n  width: string\n}\n\n// Force react-file-icon styles\nconst Container = styled(Box)`\n  text {\n    font-family: ${props => props.theme.sanity.fonts.text.family} !important;\n    font-size: 8px !important;\n    font-weight: 500 !important;\n  }\n`\n\nconst FileIcon = (props: Props) => {\n  const {extension, onClick, width} = props\n\n  return (\n    <Flex align=\"center\" justify=\"center\" onClick={onClick} style={{height: '100%'}}>\n      <Container style={{width}}>\n        {extension ? (\n          <ReactFileIcon\n            extension={extension}\n            {...defaultStyles[extension as DefaultExtensionType]}\n          />\n        ) : (\n          <ReactFileIcon />\n        )}\n      </Container>\n    </Flex>\n  )\n}\n\nexport default FileIcon\n","import {Flex} from '@sanity/ui'\nimport {Asset} from '@types'\nimport React from 'react'\nimport FileIcon from '../FileIcon'\n\ntype Props = {\n  asset: Asset\n}\n\nconst FileAssetPreview = (props: Props) => {\n  const {asset} = props\n\n  if (asset.mimeType.search('audio') === 0) {\n    return (\n      <Flex align=\"center\" justify=\"center\" style={{height: '100%'}}>\n        <audio controls src={asset.url} style={{width: '100%'}} />\n      </Flex>\n    )\n  }\n\n  if (asset.mimeType.search('video') === 0) {\n    return (\n      <video\n        controls\n        src={asset.url}\n        style={{\n          height: '100%',\n          width: '100%'\n        }}\n      />\n    )\n  }\n\n  return <FileIcon extension={asset.extension} width=\"50%\" />\n}\n\nexport default FileAssetPreview\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Box, Inline, Text, Tooltip} from '@sanity/ui'\nimport React from 'react'\nimport {FieldError} from 'react-hook-form'\nimport styled from 'styled-components'\n\ntype Props = {\n  description?: string\n  error?: FieldError\n  label: string\n  name: string\n}\n\nconst StyledErrorOutlineIcon = styled(ErrorOutlineIcon)(({theme}) => {\n  return {\n    color: theme.sanity.color.spot.red\n  }\n})\n\nconst FormFieldInputLabel = (props: Props) => {\n  const {description, error, label, name} = props\n\n  return (\n    <>\n      {/* Label */}\n      <Box marginY={3}>\n        <Inline space={2}>\n          <Text as=\"label\" htmlFor={name} size={1} weight=\"semibold\">\n            {label}\n          </Text>\n\n          {/* Error icon + tooltip */}\n          {error && (\n            <Text size={1}>\n              <Tooltip\n                content={\n                  <Box padding={2}>\n                    <Text muted size={1}>\n                      <StyledErrorOutlineIcon style={{marginRight: '0.1em'}} />\n                      {error.message}\n                    </Text>\n                  </Box>\n                }\n                fallbackPlacements={['top', 'left']}\n                placement=\"right\"\n                portal\n              >\n                <StyledErrorOutlineIcon />\n              </Tooltip>\n            </Text>\n          )}\n        </Inline>\n      </Box>\n\n      {/* Description */}\n      {description && (\n        <Box marginY={3}>\n          <Text htmlFor={name} muted size={1}>\n            {description}\n          </Text>\n        </Box>\n      )}\n    </>\n  )\n}\n\nexport default FormFieldInputLabel\n","import {Box, Flex, TextInput} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {FieldError} from 'react-hook-form'\n\nimport FormFieldInputLabel from '../FormFieldInputLabel'\n\ntype Props = {\n  description?: string\n  extension: string\n  disabled?: boolean\n  error?: FieldError\n  label: string\n  name: string\n  placeholder?: string\n  value?: string\n}\n\ntype Ref = HTMLInputElement\n\nconst FormFieldInputText = forwardRef<Ref, Props>((props: Props, ref) => {\n  const {description, disabled, error, extension, label, name, placeholder, value} = props\n\n  return (\n    <Box>\n      {/* Label */}\n      <FormFieldInputLabel description={description} error={error} label={label} name={name} />\n\n      {/* Input */}\n      <Flex>\n        <Box style={{flexGrow: 1}}>\n          <TextInput\n            autoComplete=\"off\"\n            autoFocus\n            defaultValue={value}\n            disabled={disabled}\n            id={name}\n            name={name}\n            placeholder={placeholder}\n            ref={ref}\n          />\n        </Box>\n        <Box style={{width: '70px'}}>\n          <TextInput defaultValue={`.${extension}`} disabled />\n        </Box>\n      </Flex>\n    </Box>\n  )\n})\n\nexport default FormFieldInputText\n","import {black, hues, white} from '@sanity/color'\nimport {AddIcon, ChevronDownIcon, CloseIcon} from '@sanity/icons'\nimport {Box, Card, Flex, studioTheme, Text} from '@sanity/ui'\nimport React from 'react'\nimport {components, StylesConfig} from 'react-select'\nimport {Virtuoso} from 'react-virtuoso'\n\nconst themeDarkPrimaryBlue = studioTheme?.color?.dark?.primary?.spot?.blue\nconst themeDarkPrimaryGray = studioTheme?.color?.dark?.primary?.spot?.gray\nconst themeRadius = studioTheme?.radius\nconst themeSpace = studioTheme?.space\n\nexport const reactSelectStyles: StylesConfig<\n  {\n    label: string\n    value: string\n  },\n  true\n> = {\n  control: (styles, {isDisabled, isFocused}) => {\n    let boxShadow = `inset 0 0 0 1px ${hues.gray[900].hex}`\n    if (isFocused) {\n      boxShadow = `inset 0 0 0 1px ${hues.gray[900].hex}, 0 0 0 1px var(--card-bg-color), 0 0 0 3px var(--card-focus-ring-color) !important`\n    }\n\n    return {\n      ...styles,\n      background: isDisabled\n        ? studioTheme.color.dark.default.input.default.disabled.bg\n        : 'transparent',\n      color: white.hex,\n      border: 'none',\n      borderRadius: themeRadius[1],\n      boxShadow,\n      minHeight: '35px',\n      outline: 'none',\n      transition: 'none',\n      '&:hover': {\n        boxShadow: `inset 0 0 0 1px ${studioTheme.color.dark.default.input.default.hovered.border}`\n      }\n    }\n  },\n  indicatorsContainer: (styles, {isDisabled}) => ({\n    ...styles,\n    opacity: isDisabled ? 0.25 : 1\n  }),\n  input: styles => ({\n    ...styles,\n    color: white.hex,\n    fontFamily: studioTheme.fonts.text.family,\n    marginLeft: themeSpace[2]\n  }),\n  menuList: styles => ({\n    ...styles\n  }),\n  multiValue: (styles, {isDisabled}) => ({\n    ...styles,\n    backgroundColor: themeDarkPrimaryGray,\n    borderRadius: themeRadius[2],\n    opacity: isDisabled ? 0.5 : 1\n  }),\n  multiValueRemove: styles => ({\n    ...styles,\n    paddingLeft: 0,\n    '&:hover': {\n      background: 'transparent',\n      color: 'inherit'\n    }\n  }),\n  noOptionsMessage: styles => ({\n    ...styles,\n    fontFamily: studioTheme.fonts.text.family,\n    lineHeight: '1em'\n  }),\n  option: (styles, {isFocused}) => ({\n    ...styles,\n    backgroundColor: isFocused ? themeDarkPrimaryBlue : 'transparent',\n    borderRadius: themeRadius[2],\n    color: isFocused ? black.hex : 'inherit',\n    fontFamily: studioTheme.fonts.text.family,\n    padding: '4px 8px', // TODO: use theme value\n    '&:hover': {\n      backgroundColor: themeDarkPrimaryBlue,\n      color: black.hex\n    }\n  }),\n  placeholder: styles => ({\n    ...styles,\n    fontFamily: studioTheme.fonts.text.family,\n    marginLeft: themeSpace[2]\n  }),\n  valueContainer: styles => ({\n    ...styles,\n    marginBottom: themeSpace[0],\n    marginLeft: themeSpace[1],\n    marginTop: themeSpace[0],\n    padding: 0\n  })\n}\n\nconst DropdownIndicator = (props: any) => {\n  return (\n    <components.DropdownIndicator {...props}>\n      <Box paddingX={2}>\n        <Text size={1}>\n          <ChevronDownIcon />\n        </Text>\n      </Box>\n    </components.DropdownIndicator>\n  )\n}\n\nconst Menu = (props: any) => {\n  return (\n    <components.Menu {...props}>\n      <Card radius={1} shadow={2}>\n        {props.children}\n      </Card>\n    </components.Menu>\n  )\n}\n\nconst MenuList = (props: any) => {\n  const {children} = props\n\n  const MAX_ROWS = 5\n  const OPTION_HEIGHT = 37\n\n  if (Array.isArray(children)) {\n    const height =\n      children.length > MAX_ROWS ? OPTION_HEIGHT * MAX_ROWS : children.length * OPTION_HEIGHT\n\n    return (\n      <Virtuoso\n        className=\"media__custom-scrollbar\"\n        itemContent={index => {\n          const item = children[index]\n          return <Option {...item.props} />\n        }}\n        style={{height}}\n        totalCount={children.length}\n      />\n    )\n  }\n  return <components.MenuList {...props}>{children}</components.MenuList>\n}\n\nconst MultiValueLabel = (props: any) => {\n  return (\n    <Box paddingLeft={1} paddingRight={0} paddingY={1}>\n      <Text size={2} weight=\"medium\">\n        <components.MultiValueLabel {...props} />\n      </Text>\n    </Box>\n  )\n}\n\nconst MultiValueRemove = (props: any) => {\n  return (\n    <components.MultiValueRemove {...props}>\n      <CloseIcon color=\"#1f2123\" />\n    </components.MultiValueRemove>\n  )\n}\n\nconst Option = (props: any) => {\n  return (\n    <Box paddingX={1} paddingY={1}>\n      <components.Option {...props}>\n        <Flex align=\"center\">\n          {props.data.__isNew__ && <AddIcon style={{marginRight: '3px'}} />}\n          {props.children}\n        </Flex>\n      </components.Option>\n    </Box>\n  )\n}\n\nexport const reactSelectComponents = {\n  DropdownIndicator,\n  IndicatorSeparator: null,\n  Menu,\n  MenuList,\n  MultiValueLabel,\n  MultiValueRemove,\n  Option\n}\n","import {Box} from '@sanity/ui'\nimport React from 'react'\nimport {Controller, FieldError} from 'react-hook-form'\nimport CreatableSelect from 'react-select/creatable'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {reactSelectComponents, reactSelectStyles} from '../../styled/react-select/creatable'\nimport type {ReactSelectOption} from '../../types'\nimport FormFieldInputLabel from '../FormFieldInputLabel'\n\ntype Props = {\n  control: any\n  description?: string\n  disabled?: boolean\n  error?: FieldError\n  label: string\n  name: string\n  onCreateTag: (tagName: string) => void\n  options: {\n    label: string\n    value: string\n  }[]\n  placeholder?: string\n  value?: ReactSelectOption[] | null\n}\n\nconst FormFieldInputTags = (props: Props) => {\n  const {\n    control,\n    description,\n    disabled,\n    error,\n    label,\n    name,\n    onCreateTag,\n    options,\n    placeholder,\n    value\n  } = props\n\n  // Redux\n  const creating = useTypedSelector(state => state.tags.creating)\n  const tagsFetching = useTypedSelector(state => state.tags.fetching)\n\n  return (\n    <Box\n      // HACK: force stacking context to ensure react-select dropdown sits above other fields\n      style={{zIndex: 2}}\n    >\n      {/* Label */}\n      <FormFieldInputLabel description={description} error={error} label={label} name={name} />\n\n      {/* Select */}\n      <Controller\n        control={control}\n        defaultValue={value}\n        name={name}\n        render={({onBlur, onChange, value: controllerValue}) => {\n          // TODO: investigate overriding `onChange` and updating form state manually.\n          // `opt.media.tags` is initialised with `null` as a defaultValue in react-hook-form\n          // Ideally, we'd be able to set `opt.media.tags` as null when all items are cleared, rather than\n          // setting it to an empty array (which is currently causing false positives in denoting whether the form is dirty)\n          //\n          // To illustrate this issue:\n          // - Edit an asset with no tags\n          // - Add a new tag (either an existing one, or create one inline)\n          // - Remove the tag you've just created\n          //\n          // At this point, the form will still be marked as dirty when it shouldnt be\n          return (\n            <CreatableSelect\n              components={reactSelectComponents}\n              instanceId=\"tags\"\n              isClearable={false} // TODO: re-enable when we're able to correctly (manually) re-validate on clear\n              isDisabled={creating || disabled || tagsFetching}\n              isLoading={creating}\n              isMulti\n              name={name}\n              noOptionsMessage={() => 'No tags'}\n              onBlur={onBlur}\n              onChange={onChange}\n              onCreateOption={onCreateTag}\n              options={options}\n              placeholder={tagsFetching ? 'Loading...' : placeholder}\n              styles={reactSelectStyles}\n              value={controllerValue}\n            />\n          )\n        }}\n      />\n    </Box>\n  )\n}\n\nexport default FormFieldInputTags\n","import {Box, TextInput} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {FieldError} from 'react-hook-form'\n\nimport FormFieldInputLabel from '../FormFieldInputLabel'\n\ntype Props = {\n  description?: string\n  disabled?: boolean\n  error?: FieldError\n  label: string\n  name: string\n  placeholder?: string\n  value?: string\n}\n\ntype Ref = HTMLInputElement\n\nconst FormFieldInputText = forwardRef<Ref, Props>((props: Props, ref) => {\n  const {description, disabled, error, label, name, placeholder, value} = props\n\n  return (\n    <Box>\n      {/* Label */}\n      <FormFieldInputLabel description={description} error={error} label={label} name={name} />\n      {/* Input */}\n      <TextInput\n        autoComplete=\"off\"\n        autoFocus\n        defaultValue={value}\n        disabled={disabled}\n        id={name}\n        name={name}\n        placeholder={placeholder}\n        ref={ref}\n      />\n    </Box>\n  )\n})\n\nexport default FormFieldInputText\n","import {Box, TextArea} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {FieldError} from 'react-hook-form'\n\nimport FormFieldInputLabel from '../FormFieldInputLabel'\n\ntype Props = {\n  description?: string\n  disabled?: boolean\n  error?: FieldError\n  label: string\n  name: string\n  placeholder?: string\n  rows?: number\n  value?: string\n}\n\ntype Ref = HTMLTextAreaElement\n\nconst FormFieldInputTextarea = forwardRef<Ref, Props>((props: Props, ref) => {\n  const {description, disabled, error, label, name, placeholder, rows, value} = props\n\n  return (\n    <Box>\n      {/* Label */}\n      <FormFieldInputLabel description={description} error={error} label={label} name={name} />\n\n      {/* Input */}\n      <TextArea\n        autoComplete=\"off\"\n        defaultValue={value}\n        disabled={disabled}\n        id={name}\n        name={name}\n        placeholder={placeholder}\n        ref={ref}\n        rows={rows}\n      />\n    </Box>\n  )\n})\n\nexport default FormFieldInputTextarea\n","import {Box, Button, Text, Tooltip} from '@sanity/ui'\nimport format from 'date-fns/format'\nimport React, {ReactNode} from 'react'\n\ntype Props = {\n  disabled: boolean\n  isValid: boolean\n  lastUpdated?: string\n  onClick: () => void\n}\n\nconst FormSubmitButton = (props: Props) => {\n  const {disabled, isValid, lastUpdated, onClick} = props\n\n  let content: ReactNode\n  if (isValid) {\n    if (lastUpdated) {\n      content = (\n        <>\n          Last updated\n          <br /> {format(new Date(lastUpdated), 'PPp')}\n        </>\n      )\n    } else {\n      content = 'No unpublished changes'\n    }\n  } else {\n    content =\n      'There are validation errors that need to be fixed before this document can be published'\n  }\n\n  return (\n    <Tooltip\n      content={\n        <Box padding={3} style={{maxWidth: '185px'}}>\n          <Text muted size={1}>\n            {content}\n          </Text>\n        </Box>\n      }\n      disabled={'ontouchstart' in window}\n      placement=\"top\"\n    >\n      <Box>\n        <Button\n          disabled={disabled}\n          fontSize={1}\n          onClick={onClick}\n          text=\"Save and close\"\n          tone=\"primary\"\n        />\n      </Box>\n    </Tooltip>\n  )\n}\n\nexport default FormSubmitButton\n","import {hues} from '@sanity/color'\nimport {MouseEvent} from 'react'\nimport styled, {css} from 'styled-components'\n\ntype Props = {\n  onClick?: (e: MouseEvent) => void\n  showCheckerboard?: boolean\n  src: string\n  style?: any\n}\n\nconst Image = styled.img<Props>`\n  --checkerboard-color: ${hues.gray[900].hex};\n\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n\n  ${props =>\n    props.showCheckerboard &&\n    css`\n      background-image: linear-gradient(45deg, var(--checkerboard-color) 25%, transparent 25%),\n        linear-gradient(-45deg, var(--checkerboard-color) 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, var(--checkerboard-color) 75%),\n        linear-gradient(-45deg, transparent 75%, var(--checkerboard-color) 75%);\n      background-size: 20px 20px;\n      background-position: 0 0, 0 10px, 10px -10px, -10px 0;\n    `}\n`\n\nexport default Image\n","import {yupResolver} from '@hookform/resolvers/yup'\nimport type {MutationEvent} from '@sanity/client'\nimport {Box, Button, Card, Flex, Stack, Tab, TabList, TabPanel, Text} from '@sanity/ui'\nimport {Asset, DialogAssetEditProps, ReactSelectOption} from '@types'\nimport groq from 'groq'\nimport React, {ReactNode, useEffect, useRef, useState} from 'react'\nimport {useForm} from 'react-hook-form'\nimport {useDispatch} from 'react-redux'\nimport * as yup from 'yup'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport useVersionedClient from '../../hooks/useVersionedClient'\nimport {assetsActions, selectAssetById} from '../../modules/assets'\nimport {dialogActions} from '../../modules/dialog'\nimport {selectTags, selectTagSelectOptions, tagsActions} from '../../modules/tags'\nimport getTagSelectOptions from '../../utils/getTagSelectOptions'\nimport imageDprUrl from '../../utils/imageDprUrl'\nimport sanitizeFormData from '../../utils/sanitizeFormData'\nimport {isFileAsset, isImageAsset} from '../../utils/typeGuards'\nimport AssetMetadata from '../AssetMetadata'\nimport Dialog from '../Dialog'\nimport DocumentList from '../DocumentList'\nimport FileAssetPreview from '../FileAssetPreview'\nimport FormFieldInputFilename from '../FormFieldInputFilename'\nimport FormFieldInputTags from '../FormFieldInputTags'\nimport FormFieldInputText from '../FormFieldInputText'\nimport FormFieldInputTextarea from '../FormFieldInputTextarea'\nimport FormSubmitButton from '../FormSubmitButton'\nimport Image from '../Image'\n\ntype Props = {\n  children: ReactNode\n  dialog: DialogAssetEditProps\n}\n\ntype FormData = yup.InferType<typeof formSchema>\n\nconst formSchema = yup.object().shape({\n  originalFilename: yup.string().required('Filename cannot be empty')\n})\n\nconst getFilenameWithoutExtension = (asset?: Asset): string | undefined => {\n  const extensionIndex = asset?.originalFilename?.toLowerCase().lastIndexOf(`.${asset.extension}`)\n  return asset?.originalFilename?.slice(0, extensionIndex)\n}\n\nconst DialogAssetEdit = (props: Props) => {\n  const {\n    children,\n    dialog: {assetId, id, lastCreatedTag, lastRemovedTagIds}\n  } = props\n\n  const client = useVersionedClient()\n\n  // Redux\n  const dispatch = useDispatch()\n  const assetItem = useTypedSelector(state => selectAssetById(state, String(assetId))) // TODO: check casting\n  const tags = useTypedSelector(selectTags)\n\n  // Refs\n  const isMounted = useRef(false)\n\n  // State\n  // - Generate a snapshot of the current asset\n  const [assetSnapshot, setAssetSnapshot] = useState(assetItem?.asset)\n  const [tabSection, setTabSection] = useState<'details' | 'references'>('details')\n\n  const currentAsset = assetItem ? assetItem?.asset : assetSnapshot\n  const allTagOptions = getTagSelectOptions(tags)\n\n  // Redux\n  const assetTagOptions = useTypedSelector(selectTagSelectOptions(currentAsset))\n\n  const generateDefaultValues = (asset?: Asset) => ({\n    altText: asset?.altText || '',\n    description: asset?.description || '',\n    originalFilename: asset ? getFilenameWithoutExtension(asset) : undefined,\n    opt: {media: {tags: assetTagOptions}},\n    title: asset?.title || ''\n  })\n\n  // Generate a string from all current tag labels\n  // This is used purely to determine tag updates to then update the form in real time\n  const currentTagLabels = assetTagOptions?.map(tag => tag.label).join(',')\n\n  // react-hook-form\n  const {\n    control,\n    // Read the formState before render to subscribe the form state through Proxy\n    formState: {errors, isDirty, isValid},\n    getValues,\n    handleSubmit,\n    register,\n    reset,\n    setValue\n  } = useForm({\n    defaultValues: generateDefaultValues(assetItem?.asset),\n    mode: 'onChange',\n    resolver: yupResolver(formSchema)\n  })\n\n  const formUpdating = !assetItem || assetItem?.updating\n\n  // Callbacks\n  const handleClose = () => {\n    dispatch(dialogActions.remove({id}))\n  }\n\n  const handleDelete = () => {\n    if (!assetItem?.asset) {\n      return\n    }\n\n    dispatch(\n      dialogActions.showConfirmDeleteAssets({\n        assets: [assetItem],\n        closeDialogId: assetItem?.asset._id\n      })\n    )\n  }\n\n  const handleAssetUpdate = (update: MutationEvent) => {\n    const {result, transition} = update\n\n    if (result && transition === 'update') {\n      // Regenerate asset snapshot\n      setAssetSnapshot(result as Asset)\n\n      // Reset react-hook-form\n      reset(generateDefaultValues(result as Asset))\n    }\n  }\n\n  const handleCreateTag = (tagName: string) => {\n    // Dispatch action to create new tag\n    dispatch(\n      tagsActions.createRequest({\n        assetId: currentAsset?._id,\n        name: tagName\n      })\n    )\n  }\n\n  // - submit react-hook-form\n  const onSubmit = async (formData: FormData) => {\n    if (!assetItem?.asset) {\n      return\n    }\n\n    const sanitizedFormData = sanitizeFormData(formData)\n\n    dispatch(\n      assetsActions.updateRequest({\n        asset: assetItem?.asset,\n        closeDialogId: assetItem?.asset._id,\n        formData: {\n          ...sanitizedFormData,\n          // Map tags to sanity references\n          opt: {\n            media: {\n              ...sanitizedFormData.opt.media,\n              tags:\n                sanitizedFormData.opt.media.tags?.map((tag: ReactSelectOption) => ({\n                  _ref: tag.value,\n                  _type: 'reference',\n                  _weak: true\n                })) || null\n            }\n          },\n          // Append extension to filename\n          originalFilename: `${sanitizedFormData.originalFilename}.${assetItem?.asset.extension}`\n        }\n      })\n    )\n  }\n\n  // Effects\n  // - Listen for asset mutations and update snapshot\n  useEffect(() => {\n    if (!assetItem?.asset) {\n      return undefined\n    }\n\n    // Remember that Sanity listeners ignore joins, order clauses and projections\n    const subscriptionAsset = client\n      .listen(groq`*[_id == $id]`, {id: assetItem?.asset._id})\n      .subscribe(handleAssetUpdate)\n\n    return () => {\n      subscriptionAsset?.unsubscribe()\n    }\n  }, [])\n\n  // - Partially reset form when current tags have changed (and after initial mount)\n  useEffect(() => {\n    if (isMounted.current) {\n      reset(\n        {\n          opt: {\n            media: {tags: assetTagOptions}\n          }\n        },\n        {\n          errors: true,\n          dirtyFields: true,\n          isDirty: true\n        }\n      )\n    }\n\n    // Mark as mounted\n    isMounted.current = true\n  }, [currentTagLabels])\n\n  // - Update tags form field (react-select) when a new _inline_ tag has been created\n  useEffect(() => {\n    if (lastCreatedTag) {\n      const existingTags = (getValues('opt.media.tags') as ReactSelectOption[]) || []\n      const updatedTags = existingTags.concat([lastCreatedTag])\n      setValue('opt.media.tags', updatedTags, {shouldDirty: true})\n    }\n  }, [lastCreatedTag])\n\n  // - Update tags form field (react-select) when an _inline_ tag has been removed elsewhere\n  useEffect(() => {\n    if (lastRemovedTagIds) {\n      const existingTags = (getValues('opt.media.tags') as ReactSelectOption[]) || []\n      const updatedTags = existingTags.filter(tag => {\n        return !lastRemovedTagIds.includes(tag.value)\n      })\n\n      setValue('opt.media.tags', updatedTags, {shouldDirty: true})\n    }\n  }, [lastRemovedTagIds])\n\n  const Footer = () => (\n    <Box padding={3}>\n      <Flex justify=\"space-between\">\n        {/* Delete button */}\n        <Button\n          disabled={formUpdating}\n          fontSize={1}\n          mode=\"bleed\"\n          onClick={handleDelete}\n          text=\"Delete\"\n          tone=\"critical\"\n        />\n\n        {/* Submit button */}\n        <FormSubmitButton\n          disabled={formUpdating || !isDirty || !isValid}\n          isValid={isValid}\n          lastUpdated={currentAsset._updatedAt}\n          onClick={handleSubmit(onSubmit)}\n        />\n      </Flex>\n    </Box>\n  )\n\n  if (!currentAsset) {\n    return null\n  }\n\n  return (\n    <Dialog footer={<Footer />} header=\"Asset details\" id={id} onClose={handleClose} width={3}>\n      {/*\n        We reverse direction to ensure the download button doesn't appear (in the DOM) before other tabbable items.\n        This ensures that the dialog doesn't scroll down to the download button (which on smaller screens, can sometimes\n        be below the fold).\n      */}\n      <Flex direction={['column-reverse', 'column-reverse', 'row-reverse']}>\n        <Box flex={1} marginTop={[5, 5, 0]} padding={4}>\n          {/* Tabs */}\n          <TabList space={2}>\n            <Tab\n              aria-controls=\"details-panel\"\n              disabled={formUpdating}\n              id=\"details-tab\"\n              label=\"Details\"\n              onClick={() => setTabSection('details')}\n              selected={tabSection === 'details'}\n              size={2}\n            />\n            <Tab\n              aria-controls=\"references-panel\"\n              disabled={formUpdating}\n              id=\"references-tab\"\n              label=\"References\"\n              onClick={() => setTabSection('references')}\n              selected={tabSection === 'references'}\n              size={2}\n            />\n          </TabList>\n\n          {/* Form fields */}\n          <Box as=\"form\" marginTop={4} onSubmit={handleSubmit(onSubmit)}>\n            {/* Deleted notification */}\n            {!assetItem && (\n              <Card marginBottom={3} padding={3} radius={2} shadow={1} tone=\"critical\">\n                <Text size={1}>This file cannot be found – it may have been deleted.</Text>\n              </Card>\n            )}\n\n            {/* Hidden button to enable enter key submissions */}\n            <button style={{display: 'none'}} tabIndex={-1} type=\"submit\" />\n\n            {/* Panel: details */}\n            <TabPanel\n              aria-labelledby=\"details\"\n              hidden={tabSection !== 'details'}\n              id=\"details-panel\"\n            >\n              <Stack space={3}>\n                {/* Tags */}\n                <FormFieldInputTags\n                  control={control}\n                  disabled={formUpdating}\n                  error={errors?.opt?.media?.tags}\n                  label=\"Tags\"\n                  name=\"opt.media.tags\"\n                  onCreateTag={handleCreateTag}\n                  options={allTagOptions}\n                  placeholder=\"Select or create...\"\n                  value={assetTagOptions}\n                />\n                {/* Filename */}\n                <FormFieldInputFilename\n                  disabled={formUpdating}\n                  error={errors?.originalFilename}\n                  extension={currentAsset?.extension || ''}\n                  label=\"Filename\"\n                  name=\"originalFilename\"\n                  ref={register}\n                  value={getFilenameWithoutExtension(currentAsset)}\n                />\n                {/* Title */}\n                <FormFieldInputText\n                  disabled={formUpdating}\n                  error={errors?.title}\n                  label=\"Title\"\n                  name=\"title\"\n                  ref={register}\n                  value={currentAsset?.title}\n                />\n                {/* Alt text */}\n                <FormFieldInputText\n                  disabled={formUpdating}\n                  error={errors?.altText}\n                  label=\"Alt Text\"\n                  name=\"altText\"\n                  ref={register}\n                  value={currentAsset?.altText}\n                />\n                {/* Description */}\n                <FormFieldInputTextarea\n                  disabled={formUpdating}\n                  error={errors?.description}\n                  label=\"Description\"\n                  name=\"description\"\n                  ref={register}\n                  rows={3}\n                  value={currentAsset?.description}\n                />\n              </Stack>\n            </TabPanel>\n\n            {/* Panel: References */}\n            <TabPanel\n              aria-labelledby=\"references\"\n              hidden={tabSection !== 'references'}\n              id=\"references-panel\"\n            >\n              <Box marginTop={5}>\n                {assetItem?.asset && <DocumentList assetId={assetItem?.asset._id} />}\n              </Box>\n            </TabPanel>\n          </Box>\n        </Box>\n\n        <Box flex={1} padding={4}>\n          <Box style={{aspectRatio: '1'}}>\n            {/* File */}\n            {isFileAsset(currentAsset) && <FileAssetPreview asset={currentAsset} />}\n\n            {/* Image */}\n            {isImageAsset(currentAsset) && (\n              <Image\n                draggable={false}\n                showCheckerboard={!currentAsset?.metadata?.isOpaque}\n                src={imageDprUrl(currentAsset, {height: 600, width: 600})}\n              />\n            )}\n          </Box>\n\n          {/* Metadata */}\n          {currentAsset && (\n            <Box marginTop={4}>\n              <AssetMetadata asset={currentAsset} item={assetItem} />\n            </Box>\n          )}\n        </Box>\n      </Flex>\n\n      {children}\n    </Dialog>\n  )\n}\n\nexport default DialogAssetEdit\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Button, Flex, Stack, Text} from '@sanity/ui'\nimport {DialogConfirmProps} from '@types'\nimport React, {ReactNode} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {dialogActions} from '../../modules/dialog'\nimport Dialog from '../Dialog'\n\ntype Props = {\n  children?: ReactNode\n  dialog: DialogConfirmProps\n}\n\nconst DialogConfirm = (props: Props) => {\n  const {children, dialog} = props\n\n  // Redux\n  const dispatch = useDispatch()\n\n  // Callbacks\n  const handleClose = () => {\n    dispatch(dialogActions.remove({id: dialog?.id}))\n  }\n\n  const handleConfirm = () => {\n    // Close target dialog, if provided\n    if (dialog?.closeDialogId) {\n      dispatch(dialogActions.remove({id: dialog?.closeDialogId}))\n    }\n\n    if (dialog?.confirmCallbackAction) {\n      dispatch(dialog.confirmCallbackAction)\n    }\n\n    // Close self\n    handleClose()\n  }\n\n  const Footer = () => (\n    <Box padding={3}>\n      <Flex justify=\"space-between\">\n        <Button fontSize={1} mode=\"bleed\" onClick={handleClose} text=\"Cancel\" />\n        <Button\n          fontSize={1}\n          onClick={handleConfirm}\n          text={dialog?.confirmText}\n          tone={dialog?.tone}\n        />\n      </Flex>\n    </Box>\n  )\n\n  const Header = () => (\n    <Flex align=\"center\">\n      <Box paddingX={1}>\n        <WarningOutlineIcon />\n      </Box>\n      <Box marginLeft={2}>{dialog?.headerTitle}</Box>\n    </Flex>\n  )\n\n  return (\n    <Dialog footer={<Footer />} header={<Header />} id=\"confirm\" onClose={handleClose} width={1}>\n      <Box paddingX={4} paddingY={4}>\n        <Stack space={3}>\n          {dialog?.title && <Text size={1}>{dialog.title}</Text>}\n          {dialog?.description && (\n            <Text muted size={1}>\n              <em>{dialog.description}</em>\n            </Text>\n          )}\n        </Stack>\n      </Box>\n\n      {children}\n    </Dialog>\n  )\n}\n\nexport default DialogConfirm\n","import {Box} from '@sanity/ui'\nimport {DialogSearchFacetsProps} from '@types'\nimport React, {ReactNode, useCallback} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {dialogActions} from '../../modules/dialog'\nimport Dialog from '../Dialog'\nimport SearchFacets from '../SearchFacets'\nimport SearchFacetsControl from '../SearchFacetsControl'\n\ntype Props = {\n  children: ReactNode\n  dialog: DialogSearchFacetsProps\n}\n\nconst DialogSearchFacets = (props: Props) => {\n  const {\n    children,\n    dialog: {id}\n  } = props\n\n  // Redux\n  const dispatch = useDispatch()\n\n  // Callbacks\n  const handleClose = useCallback(() => {\n    dispatch(dialogActions.clear())\n  }, [])\n\n  return (\n    <Dialog header=\"Filters\" id={id} onClose={handleClose} width={1}>\n      <Box padding={3}>\n        <SearchFacets layout=\"stack\" />\n        <SearchFacetsControl />\n      </Box>\n\n      {children}\n    </Dialog>\n  )\n}\n\nexport default DialogSearchFacets\n","import {yupResolver} from '@hookform/resolvers/yup'\nimport {Box, Flex} from '@sanity/ui'\nimport {DialogTagCreateProps} from '@types'\nimport React, {ReactNode, useEffect} from 'react'\nimport {useForm} from 'react-hook-form'\nimport {useDispatch} from 'react-redux'\nimport * as yup from 'yup'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {dialogActions} from '../../modules/dialog'\nimport {tagsActions} from '../../modules/tags'\nimport sanitizeFormData from '../../utils/sanitizeFormData'\nimport Dialog from '../Dialog'\nimport FormFieldInputText from '../FormFieldInputText'\nimport FormSubmitButton from '../FormSubmitButton'\n\ntype Props = {\n  children: ReactNode\n  dialog: DialogTagCreateProps\n}\n\ntype FormData = yup.InferType<typeof formSchema>\n\nconst formSchema = yup.object().shape({\n  name: yup.string().required('Name cannot be empty')\n})\n\nconst DialogTagCreate = (props: Props) => {\n  const {\n    children,\n    dialog: {id}\n  } = props\n\n  // Redux\n  const dispatch = useDispatch()\n\n  // State\n  const creating = useTypedSelector(state => state.tags.creating)\n  const creatingError = useTypedSelector(state => state.tags.creatingError)\n\n  // react-hook-form\n  const {\n    // Read the formState before render to subscribe the form state through Proxy\n    formState: {errors, isDirty, isValid},\n    handleSubmit,\n    register,\n    setError\n  } = useForm({\n    defaultValues: {\n      name: ''\n    },\n    mode: 'onChange',\n    resolver: yupResolver(formSchema)\n  })\n\n  const formUpdating = creating\n\n  // Callbacks\n  const handleClose = () => {\n    dispatch(dialogActions.clear())\n  }\n\n  // - submit react-hook-form\n  const onSubmit = async (formData: FormData) => {\n    const sanitizedFormData = sanitizeFormData(formData)\n\n    dispatch(tagsActions.createRequest({name: sanitizedFormData.name}))\n  }\n\n  // Effects\n  useEffect(() => {\n    if (creatingError) {\n      setError('name', {\n        message: creatingError?.message\n      })\n    }\n  }, [creatingError])\n\n  const Footer = () => (\n    <Box padding={3}>\n      <Flex justify=\"flex-end\">\n        {/* Submit button */}\n        <FormSubmitButton\n          disabled={formUpdating || !isDirty || !isValid}\n          isValid={isValid}\n          onClick={handleSubmit(onSubmit)}\n        />\n      </Flex>\n    </Box>\n  )\n\n  return (\n    <Dialog footer={<Footer />} header=\"Create Tag\" id={id} onClose={handleClose} width={1}>\n      {/* Form fields */}\n      <Box as=\"form\" padding={4} onSubmit={handleSubmit(onSubmit)}>\n        {/* Hidden button to enable enter key submissions */}\n        <button style={{display: 'none'}} tabIndex={-1} type=\"submit\" />\n\n        {/* Title */}\n        <FormFieldInputText\n          disabled={formUpdating}\n          error={errors?.name}\n          label=\"Name\"\n          name=\"name\"\n          ref={register}\n        />\n      </Box>\n\n      {children}\n    </Dialog>\n  )\n}\n\nexport default DialogTagCreate\n","import {yupResolver} from '@hookform/resolvers/yup'\nimport type {MutationEvent} from '@sanity/client'\nimport {Box, Button, Card, Flex, Text} from '@sanity/ui'\nimport {DialogTagEditProps, Tag} from '@types'\nimport groq from 'groq'\nimport React, {ReactNode, useEffect, useState} from 'react'\nimport {useForm} from 'react-hook-form'\nimport {useDispatch} from 'react-redux'\nimport * as yup from 'yup'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport useVersionedClient from '../../hooks/useVersionedClient'\nimport {dialogActions} from '../../modules/dialog'\nimport {selectTagById, tagsActions} from '../../modules/tags'\nimport sanitizeFormData from '../../utils/sanitizeFormData'\nimport Dialog from '../Dialog'\nimport FormFieldInputText from '../FormFieldInputText'\nimport FormSubmitButton from '../FormSubmitButton'\n\ntype Props = {\n  children: ReactNode\n  dialog: DialogTagEditProps\n}\n\ntype FormData = yup.InferType<typeof formSchema>\n\nconst formSchema = yup.object().shape({\n  name: yup.string().required('Name cannot be empty')\n})\n\nconst DialogTagEdit = (props: Props) => {\n  const {\n    children,\n    dialog: {id, tagId}\n  } = props\n\n  const client = useVersionedClient()\n\n  // Redux\n  const dispatch = useDispatch()\n  const tagItem = useTypedSelector(state => selectTagById(state, String(tagId))) // TODO: double check string cast\n\n  // State\n  // - Generate a snapshot of the current tag\n  const [tagSnapshot, setTagSnapshot] = useState(tagItem?.tag)\n\n  const currentTag = tagItem ? tagItem?.tag : tagSnapshot\n  const generateDefaultValues = (tag?: Tag) => ({\n    name: tag?.name?.current || ''\n  })\n\n  // react-hook-form\n  const {\n    // Read the formState before render to subscribe the form state through Proxy\n    formState: {errors, isDirty, isValid},\n    handleSubmit,\n    register,\n    reset,\n    setError\n  } = useForm({\n    // defaultValues: {\n    //   name: currentTag?.tag?.name?.current\n    // },\n    defaultValues: generateDefaultValues(tagItem?.tag),\n    mode: 'onChange',\n    resolver: yupResolver(formSchema)\n  })\n\n  const formUpdating = !tagItem || tagItem?.updating\n\n  // Callbacks\n  const handleClose = () => {\n    dispatch(dialogActions.remove({id}))\n  }\n\n  // - submit react-hook-form\n  const onSubmit = async (formData: FormData) => {\n    if (!tagItem?.tag) {\n      return\n    }\n\n    const sanitizedFormData = sanitizeFormData(formData)\n\n    dispatch(\n      tagsActions.updateRequest({\n        closeDialogId: tagItem?.tag?._id,\n        formData: {\n          name: {\n            _type: 'slug',\n            current: sanitizedFormData.name\n          }\n        },\n        tag: tagItem?.tag\n      })\n    )\n  }\n\n  const handleDelete = () => {\n    if (!tagItem?.tag) {\n      return\n    }\n\n    dispatch(\n      dialogActions.showConfirmDeleteTag({\n        closeDialogId: tagItem?.tag?._id,\n        tag: tagItem?.tag\n      })\n    )\n  }\n\n  const handleTagUpdate = (update: MutationEvent) => {\n    const {result, transition} = update\n\n    if (result && transition === 'update') {\n      // Regenerate snapshot\n      setTagSnapshot(result as Tag)\n\n      // Reset react-hook-form\n      reset(generateDefaultValues(result as Tag))\n    }\n  }\n\n  // Effects\n  useEffect(() => {\n    if (tagItem?.error) {\n      setError('name', {\n        message: tagItem.error?.message\n      })\n    }\n  }, [tagItem?.error])\n\n  // - Listen for asset mutations and update snapshot\n  useEffect(() => {\n    if (!tagItem?.tag) {\n      return undefined\n    }\n\n    // Remember that Sanity listeners ignore joins, order clauses and projections\n    const subscriptionAsset = client\n      .listen(groq`*[_id == $id]`, {id: tagItem?.tag._id})\n      .subscribe(handleTagUpdate)\n\n    return () => {\n      subscriptionAsset?.unsubscribe()\n    }\n  }, [])\n\n  const Footer = () => (\n    <Box padding={3}>\n      <Flex justify=\"space-between\">\n        {/* Delete button */}\n        <Button\n          disabled={formUpdating}\n          fontSize={1}\n          mode=\"bleed\"\n          onClick={handleDelete}\n          text=\"Delete\"\n          tone=\"critical\"\n        />\n\n        {/* Submit button */}\n        <FormSubmitButton\n          disabled={formUpdating || !isDirty || !isValid}\n          isValid={isValid}\n          lastUpdated={tagItem?.tag?._updatedAt}\n          onClick={handleSubmit(onSubmit)}\n        />\n      </Flex>\n    </Box>\n  )\n\n  if (!currentTag) {\n    return null\n  }\n\n  return (\n    <Dialog footer={<Footer />} header=\"Edit Tag\" id={id} onClose={handleClose} width={1}>\n      {/* Form fields */}\n      <Box as=\"form\" padding={4} onSubmit={handleSubmit(onSubmit)}>\n        {/* Deleted notification */}\n        {!tagItem && (\n          <Card marginBottom={3} padding={3} radius={2} shadow={1} tone=\"critical\">\n            <Text size={1}>This tag cannot be found – it may have been deleted.</Text>\n          </Card>\n        )}\n\n        {/* Hidden button to enable enter key submissions */}\n        <button style={{display: 'none'}} tabIndex={-1} type=\"submit\" />\n\n        {/* Title */}\n        <FormFieldInputText\n          disabled={formUpdating}\n          error={errors?.name}\n          label=\"Name\"\n          name=\"name\"\n          ref={register}\n        />\n      </Box>\n\n      {children}\n    </Dialog>\n  )\n}\n\nexport default DialogTagEdit\n","import {hues} from '@sanity/color'\nimport {ArrowDownIcon, ArrowUpIcon, CloseIcon, EditIcon, SearchIcon, TrashIcon} from '@sanity/icons'\nimport {Box, Button, Container, Flex, Text, Tooltip} from '@sanity/ui'\nimport {SearchFacetInputSearchableProps, TagActions, TagItem} from '@types'\nimport React, {ReactNode} from 'react'\nimport {useDispatch} from 'react-redux'\nimport styled from 'styled-components'\nimport {inputs} from '../../config/searchFacets'\nimport {PANEL_HEIGHT} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {selectAssetsPicked} from '../../modules/assets'\nimport {dialogActions} from '../../modules/dialog'\nimport {DIALOG_ACTIONS} from '../../modules/dialog/actions'\nimport {searchActions, selectHasSearchFacetTag, selectIsSearchFacetTag} from '../../modules/search'\n\ntype Props = {\n  actions?: TagActions[]\n  tag: TagItem\n}\n\nconst TagContainer = styled(Flex)`\n  height: ${PANEL_HEIGHT}px;\n`\n\nconst ButtonContainer = styled(Flex)`\n  @media (pointer: fine) {\n    visibility: hidden;\n  }\n\n  @media (hover: hover) and (pointer: fine) {\n    ${TagContainer}:hover & {\n      visibility: visible;\n    }\n  }\n`\n\ntype TagButtonProps = {\n  disabled?: boolean\n  icon: ReactNode\n  onClick: () => void\n  tone?: 'critical' | 'primary'\n  tooltip: string\n}\n\nconst TagButton = (props: TagButtonProps) => {\n  const {disabled, icon, onClick, tone, tooltip} = props\n  return (\n    <Tooltip\n      content={\n        <Container padding={2} width={0}>\n          <Text muted size={1}>\n            {tooltip}\n          </Text>\n        </Container>\n      }\n      disabled={'ontouchstart' in window}\n      placement=\"top\"\n    >\n      <Button\n        disabled={disabled}\n        fontSize={1}\n        icon={icon}\n        mode=\"bleed\"\n        onClick={onClick}\n        padding={2}\n        tone={tone}\n      />\n    </Tooltip>\n  )\n}\n\nconst Tag = (props: Props) => {\n  const {actions, tag} = props\n\n  // Redux\n  const dispatch = useDispatch()\n  const assetsPicked = useTypedSelector(selectAssetsPicked)\n  const hasSearchFacetTag = useTypedSelector(selectHasSearchFacetTag)\n  const isSearchFacetTag = useTypedSelector(state => selectIsSearchFacetTag(state, tag?.tag?._id))\n\n  // Callbacks\n  const handleSearchFacetTagRemove = () => {\n    dispatch(searchActions.facetsRemove({facetName: 'tag'}))\n  }\n\n  const handleShowAddTagToAssetsDialog = () => {\n    dispatch(dialogActions.showConfirmAssetsTagAdd({assetsPicked, tag: tag.tag}))\n  }\n\n  const handleShowRemoveTagFromAssetsDialog = () => {\n    dispatch(dialogActions.showConfirmAssetsTagRemove({assetsPicked, tag: tag.tag}))\n  }\n\n  const handleShowTagDeleteDialog = () => {\n    dispatch(dialogActions.showConfirmDeleteTag({tag: tag.tag}))\n  }\n\n  const handleShowTagEditDialog = () => {\n    dispatch(DIALOG_ACTIONS.showTagEdit({tagId: tag?.tag?._id}))\n  }\n\n  const handleSearchFacetTagAddOrUpdate = () => {\n    const searchFacet = {\n      ...inputs.tag,\n      value: {\n        label: tag?.tag?.name?.current,\n        value: tag?.tag?._id\n      }\n    } as SearchFacetInputSearchableProps\n\n    if (hasSearchFacetTag) {\n      dispatch(\n        searchActions.facetsUpdate({\n          name: 'tag',\n          operatorType: 'references',\n          value: searchFacet.value\n        })\n      )\n    } else {\n      dispatch(searchActions.facetsAdd({facet: searchFacet}))\n    }\n  }\n\n  return (\n    <TagContainer align=\"center\" flex={1} justify=\"space-between\" paddingLeft={3}>\n      <Box flex={1}>\n        <Text\n          size={1}\n          style={{\n            color: tag?.updating ? hues.gray[800].hex : hues.gray[500].hex,\n            userSelect: 'none'\n          }}\n          textOverflow=\"ellipsis\"\n        >\n          {tag?.tag?.name?.current}\n        </Text>\n      </Box>\n\n      <ButtonContainer align=\"center\" style={{flexShrink: 0}}>\n        {/* Search facet toggle */}\n        {actions?.includes('search') && (\n          <TagButton\n            disabled={tag?.updating}\n            icon={isSearchFacetTag ? <CloseIcon /> : <SearchIcon />}\n            onClick={\n              isSearchFacetTag ? handleSearchFacetTagRemove : handleSearchFacetTagAddOrUpdate\n            }\n            tooltip={isSearchFacetTag ? 'Remove filter' : 'Filter by tag'}\n          />\n        )}\n        {/* Edit icon */}\n        {actions?.includes('edit') && (\n          <TagButton\n            disabled={tag?.updating}\n            icon={<EditIcon />}\n            onClick={handleShowTagEditDialog}\n            tone=\"primary\"\n            tooltip=\"Edit tag\"\n          />\n        )}\n        {/* Apply to all */}\n        {actions?.includes('applyAll') && (\n          <TagButton\n            disabled={tag?.updating}\n            icon={<ArrowUpIcon />}\n            onClick={handleShowAddTagToAssetsDialog}\n            tone=\"primary\"\n            tooltip=\"Add tag to selected assets\"\n          />\n        )}\n        {/* Remove from all */}\n        {actions?.includes('removeAll') && (\n          <TagButton\n            disabled={tag?.updating}\n            icon={<ArrowDownIcon />}\n            onClick={handleShowRemoveTagFromAssetsDialog}\n            tone=\"critical\"\n            tooltip=\"Remove tag from selected assets\"\n          />\n        )}\n\n        {/* Delete icon */}\n        {actions?.includes('delete') && (\n          <TagButton\n            disabled={tag?.updating}\n            icon={<TrashIcon />}\n            onClick={handleShowTagDeleteDialog}\n            tone=\"critical\"\n            tooltip=\"Delete tag\"\n          />\n        )}\n      </ButtonContainer>\n    </TagContainer>\n  )\n}\n\nexport default Tag\n","import {Flex, Label} from '@sanity/ui'\nimport {TagActions, TagItem} from '@types'\nimport React, {memo, useState} from 'react'\nimport {Virtuoso} from 'react-virtuoso'\nimport {PANEL_HEIGHT} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {selectAssetsPicked} from '../../modules/assets'\nimport {selectTags} from '../../modules/tags'\nimport Tag from '../Tag'\n\nconst VirtualRow = memo(\n  ({\n    isScrolling,\n    item\n  }: {\n    isScrolling?: boolean\n    item:\n      | string\n      | (TagItem & {\n          actions: TagActions[]\n        })\n  }) => {\n    // Render label\n    if (typeof item === 'string') {\n      return (\n        <Flex\n          align=\"center\"\n          justify=\"space-between\"\n          key={item}\n          paddingX={3}\n          style={{height: `${PANEL_HEIGHT}px`}}\n        >\n          <Label size={0}>{item}</Label>\n        </Flex>\n      )\n    }\n\n    // Render tag - only display actions if we're not in the process of scrolling\n    return <Tag actions={isScrolling ? undefined : item.actions} key={item.tag?._id} tag={item} />\n  }\n)\n\nconst TagsVirtualized = () => {\n  const assetsPicked = useTypedSelector(selectAssetsPicked)\n  const tags = useTypedSelector(selectTags)\n\n  // State\n  const [isScrolling, setIsScrolling] = useState(false)\n\n  // TODO: refactor, there's most certainly a more performant way to do this\n\n  // Filter out all tag IDS used (across all) and dedupe\n  const pickedTagIds = assetsPicked?.reduce((acc: string[], val) => {\n    const assetTagIds = val?.asset?.opt?.media?.tags?.map(tag => tag._ref) || []\n    acc = acc.concat(assetTagIds)\n    return acc\n  }, [])\n  const pickedTagIdsUnique = [...new Set(pickedTagIds)]\n\n  // Segment tags into two buckets:\n  // 1. those which exist in all picked assets ('applied to all')\n  // 2. those which exist in some picked assets ('applied to some')\n  const tagIdsSegmented = pickedTagIdsUnique.reduce(\n    (acc: {appliedToAll: string[]; appliedToSome: string[]}, tagId) => {\n      const tagIsInEveryAsset = assetsPicked.every(assetItem => {\n        const tagIndex =\n          assetItem.asset.opt?.media?.tags?.findIndex(tag => tag._ref === tagId) ?? -1\n        return tagIndex >= 0\n      })\n\n      if (tagIsInEveryAsset) {\n        acc.appliedToAll.push(tagId)\n      } else {\n        acc.appliedToSome.push(tagId)\n      }\n\n      return acc\n    },\n    {\n      appliedToAll: [],\n      appliedToSome: []\n    }\n  )\n\n  const tagsAppliedToAll = tags\n    .filter(tag => tagIdsSegmented.appliedToAll.includes(tag.tag._id))\n    .map(tagItem => ({\n      ...tagItem,\n      actions: ['delete', 'edit', 'removeAll', 'search'] as TagActions[]\n    }))\n  const tagsAppliedToSome = tags\n    .filter(tag => tagIdsSegmented.appliedToSome.includes(tag.tag._id))\n    .map(tagItem => ({\n      ...tagItem,\n      actions: ['applyAll', 'delete', 'edit', 'removeAll', 'search'] as TagActions[]\n    }))\n  const tagsUnused = tags\n    .filter(tag => !pickedTagIdsUnique.includes(tag.tag._id))\n    .map(tagItem => ({\n      ...tagItem,\n      actions: ['applyAll', 'delete', 'edit', 'search'] as TagActions[]\n    }))\n\n  let items: (\n    | string\n    | (TagItem & {\n        actions: TagActions[]\n      })\n  )[] = []\n  if (assetsPicked.length === 0) {\n    items = tags.map(tagItem => ({\n      ...tagItem,\n      actions: ['delete', 'edit', 'search'] as TagActions[]\n    }))\n  } else {\n    if (tagsAppliedToAll?.length > 0) {\n      items = [\n        ...items, //\n        assetsPicked.length === 1 ? 'Used' : 'Used by all',\n        ...tagsAppliedToAll\n      ]\n    }\n    if (tagsAppliedToSome?.length > 0) {\n      items = [\n        ...items, //\n        'Used by some',\n        ...tagsAppliedToSome\n      ]\n    }\n    if (tagsUnused?.length > 0) {\n      items = [\n        ...items, //\n        'Unused',\n        ...tagsUnused\n      ]\n    }\n  }\n\n  return (\n    <Virtuoso\n      className=\"media__custom-scrollbar\"\n      computeItemKey={index => {\n        const item = items[index]\n        if (typeof item === 'string') {\n          return item\n        }\n        return item.tag._id\n      }}\n      isScrolling={setIsScrolling}\n      itemContent={index => {\n        return <VirtualRow isScrolling={isScrolling} item={items[index]} />\n      }}\n      style={{flex: 1, overflowX: 'hidden'}}\n      totalCount={items.length}\n    />\n  )\n}\n\nexport default TagsVirtualized\n","import {black, hues} from '@sanity/color'\nimport {ComposeIcon} from '@sanity/icons'\nimport {Box, Button, Flex, Inline, Label} from '@sanity/ui'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport {PANEL_HEIGHT} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {DIALOG_ACTIONS} from '../../modules/dialog/actions'\n\ntype Props = {\n  allowCreate?: boolean\n  light?: boolean\n  title: string\n}\n\nconst TagViewHeader = (props: Props) => {\n  const {allowCreate, light, title} = props\n\n  // Redux\n  const dispatch = useDispatch()\n  const tagsCreating = useTypedSelector(state => state.tags.creating)\n  const tagsFetching = useTypedSelector(state => state.tags.fetching)\n\n  // Callbacks\n  const handleTagCreate = () => {\n    dispatch(DIALOG_ACTIONS.showTagCreate())\n  }\n\n  return (\n    <>\n      <Flex\n        align=\"center\"\n        justify=\"space-between\"\n        paddingLeft={3}\n        style={{\n          background: light ? hues.gray?.[900].hex : black.hex,\n          borderBottom: `1px solid ${hues.gray?.[900].hex}`,\n          height: `${PANEL_HEIGHT}px`\n        }}\n      >\n        <Inline space={2}>\n          <Label size={0}>{title}</Label>\n\n          {tagsFetching && (\n            <Label size={0} style={{opacity: 0.3}}>\n              Loading...\n            </Label>\n          )}\n        </Inline>\n        {/* Create new tag button */}\n        {allowCreate && (\n          <Box marginRight={1}>\n            <Button\n              disabled={tagsCreating}\n              fontSize={1} //\n              icon={ComposeIcon}\n              mode=\"bleed\"\n              onClick={handleTagCreate}\n              style={{\n                background: 'transparent',\n                boxShadow: 'none'\n              }}\n            />\n          </Box>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default TagViewHeader\n","import {black, hues} from '@sanity/color'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport React from 'react'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {selectAssetsPickedLength} from '../../modules/assets'\nimport {selectTags} from '../../modules/tags'\nimport TagsVirtualized from '../TagsVirtualized'\nimport TagViewHeader from '../TagViewHeader'\n\nconst TagView = () => {\n  const numPickedAssets = useTypedSelector(selectAssetsPickedLength)\n  const tags = useTypedSelector(selectTags)\n  const fetching = useTypedSelector(state => state.tags.fetching)\n  const fetchCount = useTypedSelector(state => state.tags.fetchCount)\n  const fetchComplete = fetchCount !== -1\n  const hasTags = !fetching && tags?.length > 0\n  const hasPicked = !!(numPickedAssets > 0)\n\n  return (\n    <Flex\n      direction=\"column\"\n      flex={1}\n      style={{\n        // background: hues.gray[950].hex,\n        background: black.hex,\n        height: '100%'\n      }}\n    >\n      <TagViewHeader\n        allowCreate //\n        light={hasPicked}\n        title={hasPicked ? 'Tags (in selection)' : 'Tags'}\n      />\n\n      {fetchComplete && !hasTags && (\n        <Box padding={3}>\n          <Text size={1} style={{color: hues.gray[700].hex}}>\n            <em>No tags</em>\n          </Text>\n        </Box>\n      )}\n\n      {hasTags && <TagsVirtualized />}\n    </Flex>\n  )\n}\n\nexport default TagView\n","import {Box} from '@sanity/ui'\nimport {DialogTagsProps} from '@types'\nimport React, {ReactNode, useCallback} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {dialogActions} from '../../modules/dialog'\nimport Dialog from '../Dialog'\nimport TagView from '../TagView'\n\ntype Props = {\n  children: ReactNode\n  dialog: DialogTagsProps\n}\n\nconst DialogTags = (props: Props) => {\n  const {\n    children,\n    dialog: {id}\n  } = props\n\n  // Redux\n  const dispatch = useDispatch()\n\n  // Callbacks\n  const handleClose = useCallback(() => {\n    dispatch(dialogActions.clear())\n  }, [])\n\n  return (\n    <Dialog header=\"All Tags\" id={id} onClose={handleClose} width={1}>\n      <Box\n        style={{\n          height: '100%',\n          minHeight: '420px' // explicit height required as <TagView> is virtualized\n        }}\n      >\n        <TagView />\n      </Box>\n\n      {children}\n    </Dialog>\n  )\n}\n\nexport default DialogTags\n","import {Dialog} from '@types'\nimport React from 'react'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport DialogAssetEdit from '../DialogAssetEdit'\nimport DialogConfirm from '../DialogConfirm'\nimport DialogSearchFacets from '../DialogSearchFacets'\nimport DialogTagCreate from '../DialogTagCreate'\nimport DialogTagEdit from '../DialogTagEdit'\nimport DialogTags from '../DialogTags'\n\nconst Dialogs = () => {\n  // Redux\n  const currentDialogs = useTypedSelector(state => state.dialog.items)\n\n  const renderDialogs = (dialogs: Dialog[], index: number) => {\n    if (dialogs.length === 0 || index >= dialogs.length) {\n      return null\n    }\n\n    const dialog = dialogs[index]\n    const childDialogs = renderDialogs(dialogs, index + 1)\n\n    if (dialog.type === 'assetEdit') {\n      return (\n        <DialogAssetEdit dialog={dialog} key={index}>\n          {childDialogs}\n        </DialogAssetEdit>\n      )\n    }\n\n    if (dialog.type === 'confirm') {\n      return (\n        <DialogConfirm dialog={dialog} key={index}>\n          {childDialogs}\n        </DialogConfirm>\n      )\n    }\n\n    if (dialog.type === 'searchFacets') {\n      return (\n        <DialogSearchFacets dialog={dialog} key={index}>\n          {childDialogs}\n        </DialogSearchFacets>\n      )\n    }\n\n    if (dialog.type === 'tagCreate') {\n      return (\n        <DialogTagCreate dialog={dialog} key={index}>\n          {childDialogs}\n        </DialogTagCreate>\n      )\n    }\n\n    if (dialog.type === 'tagEdit') {\n      return (\n        <DialogTagEdit dialog={dialog} key={index}>\n          {childDialogs}\n        </DialogTagEdit>\n      )\n    }\n\n    if (dialog.type === 'tags') {\n      return (\n        <DialogTags dialog={dialog} key={index}>\n          {childDialogs}\n        </DialogTags>\n      )\n    }\n\n    return null\n  }\n\n  return renderDialogs(currentDialogs, 0)\n}\n\nexport default Dialogs\n","import React, {ReactNode, createContext, useContext} from 'react'\n\ntype ContextProps = {\n  open: () => void\n}\n\ntype Props = {\n  children: ReactNode\n  open: () => void\n}\n\nconst DropzoneDispatchContext = createContext<ContextProps | undefined>(undefined)\n\nexport const DropzoneDispatchProvider = (props: Props) => {\n  const {children, open} = props\n\n  const contextValue: ContextProps = {open}\n\n  return (\n    <DropzoneDispatchContext.Provider value={contextValue}>\n      {children}\n    </DropzoneDispatchContext.Provider>\n  )\n}\n\nexport const useDropzoneActions = () => {\n  const context = useContext(DropzoneDispatchContext)\n  if (context === undefined) {\n    throw new Error('useDropzoneActions must be used within an DropzoneDispatchProvider')\n  }\n  return context\n}\n\nexport default DropzoneDispatchContext\n","import {CloseIcon, Icon, UploadIcon} from '@sanity/icons'\nimport {Box, Button, Flex, Inline, Text} from '@sanity/ui'\nimport pluralize from 'pluralize'\nimport React from 'react'\nimport {useAssetSourceActions} from '../../contexts/AssetSourceDispatchContext'\nimport {useDropzoneActions} from '../../contexts/DropzoneDispatchContext'\nimport useTypedSelector from '../../hooks/useTypedSelector'\n\ntype Props = {\n  onClose?: () => void\n}\n\nconst Header = (props: Props) => {\n  const {onClose} = props\n\n  const {open} = useDropzoneActions()\n  const {onSelect} = useAssetSourceActions()\n\n  // Redux\n  const assetTypes = useTypedSelector(state => state.assets.assetTypes)\n  const selectedDocument = useTypedSelector(state => state.selected.document)\n\n  // Row: Current document / close button\n  return (\n    <Box paddingY={2}>\n      <Flex align=\"center\" justify=\"space-between\">\n        {/* Label */}\n        <Box flex={1} marginX={3}>\n          <Inline style={{whiteSpace: 'nowrap'}}>\n            <Text textOverflow=\"ellipsis\" weight=\"semibold\">\n              <span>{onSelect ? `Insert ${assetTypes.join(' or ')}` : 'Browse Assets'}</span>\n            </Text>\n\n            {selectedDocument && (\n              <Box display={['none', 'none', 'block']}>\n                <Text>\n                  <span style={{margin: '0 0.5em'}}>\n                    <Icon symbol=\"arrow-right\" />\n                  </span>\n                  <span style={{textTransform: 'capitalize'}}>{selectedDocument._type}</span>\n                </Text>\n              </Box>\n            )}\n          </Inline>\n        </Box>\n\n        <Flex marginX={2}>\n          {/* Upload */}\n          <Button\n            fontSize={1}\n            icon={UploadIcon}\n            mode=\"bleed\"\n            onClick={open}\n            text={`Upload ${assetTypes.length === 1 ? pluralize(assetTypes[0]) : 'assets'}`}\n            tone=\"primary\"\n          />\n\n          {/* Close */}\n          {onClose && (\n            <Box style={{flexShrink: 0}}>\n              <Button\n                disabled={!onClose}\n                icon={CloseIcon}\n                mode=\"bleed\"\n                onClick={onClose}\n                radius={2}\n              />\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Header\n","import {createSelector} from '@reduxjs/toolkit'\nimport {CardAssetData, CardUploadData} from '@types'\n\nimport {RootReducerState} from './types'\n\nexport const selectCombinedItems = createSelector(\n  [\n    (state: RootReducerState) => state.assets.allIds,\n    (state: RootReducerState) => state.uploads.allIds\n  ],\n  (assetIds, uploadIds) => {\n    const assetItems = assetIds.map(id => ({id, type: 'asset'} as CardAssetData))\n    const uploadItems = uploadIds.map(id => ({id, type: 'upload'} as CardUploadData))\n    const combinedItems: (CardAssetData | CardUploadData)[] = [...uploadItems, ...assetItems]\n    return combinedItems\n  }\n)\n","import {hues} from '@sanity/color'\nimport {CheckmarkCircleIcon, EditIcon, WarningFilledIcon} from '@sanity/icons'\nimport {Box, Checkbox, Container, Flex, Spinner, Text, Tooltip} from '@sanity/ui'\nimport React, {memo, MouseEvent, RefObject} from 'react'\nimport {useDispatch} from 'react-redux'\nimport styled, {css} from 'styled-components'\nimport {PANEL_HEIGHT} from '../../constants'\nimport {useAssetSourceActions} from '../../contexts/AssetSourceDispatchContext'\nimport useKeyPress from '../../hooks/useKeyPress'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {assetsActions, selectAssetById} from '../../modules/assets'\nimport {dialogActions} from '../../modules/dialog'\nimport imageDprUrl from '../../utils/imageDprUrl'\nimport {isFileAsset, isImageAsset} from '../../utils/typeGuards'\nimport FileIcon from '../FileIcon'\nimport Image from '../Image'\n\ntype Props = {\n  id: string\n  selected: boolean\n}\n\nconst CardWrapper = styled(Flex)`\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  padding: 2px;\n  position: relative;\n  width: 100%;\n`\n\nconst CardContainer = styled(Flex)<{picked?: boolean; updating?: boolean}>`\n  border: 1px solid transparent;\n  height: 100%;\n  pointer-events: ${props => (props.updating ? 'none' : 'auto')};\n  position: relative;\n  transition: all 300ms;\n  user-select: none;\n  width: 100%;\n\n  border: ${props =>\n    props.picked\n      ? `1px solid ${props.theme.sanity.color.spot.orange} !important`\n      : '1px solid inherit'};\n\n  ${props =>\n    !props.updating &&\n    css`\n      @media (hover: hover) and (pointer: fine) {\n        &:hover {\n          border: 1px solid ${hues.gray[500].hex};\n        }\n      }\n    `}\n`\n\nconst ContextActionContainer = styled(Flex)`\n  cursor: ${props => (props.selected ? 'default' : 'pointer')};\n  height: ${PANEL_HEIGHT}px;\n  transition: all 300ms;\n\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      background: ${hues.gray[950].hex};\n    }\n  }\n`\n\nconst StyledWarningOutlineIcon = styled(WarningFilledIcon)(({theme}) => {\n  return {\n    color: theme.sanity.color.spot.red\n  }\n})\n\nconst CardAsset = (props: Props) => {\n  const {id, selected} = props\n\n  // Refs\n  const shiftPressed: RefObject<boolean> = useKeyPress('shift')\n\n  // Redux\n  const dispatch = useDispatch()\n  const lastPicked = useTypedSelector(state => state.assets.lastPicked)\n  const item = useTypedSelector(state => selectAssetById(state, id))\n\n  const asset = item?.asset\n  const error = item?.error\n  const isOpaque = item?.asset?.metadata?.isOpaque\n  const picked = item?.picked\n  const updating = item?.updating\n\n  const {onSelect} = useAssetSourceActions()\n\n  // Short circuit if no asset is available\n  if (!asset) {\n    return null\n  }\n\n  // Callbacks\n  const handleAssetClick = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation()\n\n    if (onSelect) {\n      onSelect([\n        {\n          kind: 'assetDocumentId',\n          value: asset._id\n        }\n      ])\n    } else if (shiftPressed.current) {\n      if (picked) {\n        dispatch(assetsActions.pick({assetId: asset._id, picked: !picked}))\n      } else {\n        dispatch(assetsActions.pickRange({startId: lastPicked || asset._id, endId: asset._id}))\n      }\n    } else {\n      dispatch(dialogActions.showAssetEdit({assetId: asset._id}))\n    }\n  }\n\n  const handleContextActionClick = (e: MouseEvent) => {\n    e.stopPropagation()\n\n    if (onSelect) {\n      dispatch(dialogActions.showAssetEdit({assetId: asset._id}))\n    } else if (shiftPressed.current && !picked) {\n      dispatch(assetsActions.pickRange({startId: lastPicked || asset._id, endId: asset._id}))\n    } else {\n      dispatch(assetsActions.pick({assetId: asset._id, picked: !picked}))\n    }\n  }\n\n  const opacityContainer = updating ? 0.5 : 1\n  const opacityPreview = selected || updating ? 0.25 : 1\n\n  return (\n    <CardWrapper>\n      <CardContainer direction=\"column\" picked={picked} updating={item.updating}>\n        {/* Image */}\n        <Box\n          flex={1}\n          style={{\n            cursor: selected ? 'default' : 'pointer',\n            position: 'relative'\n          }}\n        >\n          <div onClick={handleAssetClick} style={{height: '100%', opacity: opacityPreview}}>\n            {/* File icon */}\n            {isFileAsset(asset) && <FileIcon extension={asset.extension} width=\"80px\" />}\n\n            {/* Image */}\n            {isImageAsset(asset) && (\n              <Image\n                draggable={false}\n                showCheckerboard={!isOpaque}\n                src={imageDprUrl(asset, {height: 250, width: 250})}\n                style={{\n                  draggable: false,\n                  transition: 'opacity 1000ms'\n                }}\n              />\n            )}\n          </div>\n\n          {/* Selected check icon */}\n          {selected && !updating && (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              style={{\n                height: '100%',\n                left: 0,\n                opacity: opacityContainer,\n                position: 'absolute',\n                top: 0,\n                width: '100%'\n              }}\n            >\n              <Text size={2}>\n                <CheckmarkCircleIcon />\n              </Text>\n            </Flex>\n          )}\n\n          {/* Spinner */}\n          {updating && (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              style={{\n                height: '100%',\n                left: 0,\n                position: 'absolute',\n                top: 0,\n                width: '100%'\n              }}\n            >\n              <Spinner />\n            </Flex>\n          )}\n        </Box>\n\n        {/* Footer */}\n        <ContextActionContainer\n          align=\"center\"\n          onClick={handleContextActionClick}\n          paddingX={1}\n          style={{opacity: opacityContainer}}\n        >\n          {onSelect ? (\n            <EditIcon\n              style={{\n                flexShrink: 0,\n                opacity: 0.5\n              }}\n            />\n          ) : (\n            <Checkbox\n              checked={picked}\n              readOnly\n              style={{\n                flexShrink: 0,\n                pointerEvents: 'none',\n                transform: 'scale(0.8)'\n              }}\n            />\n          )}\n\n          <Box marginLeft={2}>\n            <Text muted size={0} textOverflow=\"ellipsis\">\n              {asset.originalFilename}\n            </Text>\n          </Box>\n        </ContextActionContainer>\n\n        {/* TODO: DRY */}\n        {/* Error button */}\n        {error && (\n          <Box\n            padding={3}\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0\n            }}\n          >\n            <Tooltip\n              content={\n                <Container padding={2} width={0}>\n                  <Text size={1}>{error}</Text>\n                </Container>\n              }\n              placement=\"left\"\n              portal\n            >\n              <Text size={1}>\n                <StyledWarningOutlineIcon color=\"critical\" />\n              </Text>\n            </Tooltip>\n          </Box>\n        )}\n      </CardContainer>\n    </CardWrapper>\n  )\n}\n\nexport default memo(CardAsset)\n","import {Observable, from, of} from 'rxjs'\nimport {mergeMap} from 'rxjs/operators'\n\nconst PREVIEW_WIDTH = 180 // px\n\nconst createBlob = (img: HTMLImageElement): Promise<Blob | null> => {\n  return new Promise(resolve => {\n    const imageAspect = img.width / img.height\n\n    // Create a canvas element which we'll use to generate a low resolution preview.\n    // Ensure that the canvas is at least 1 pixel high as blob generation will fail otherwise.\n    const canvas: HTMLCanvasElement = document.createElement('canvas')\n    canvas.width = PREVIEW_WIDTH\n    canvas.height = Math.max(PREVIEW_WIDTH / imageAspect, 1)\n\n    // Fail silently if we're unable to generate a preview image.\n    // This can often be the case when trying to render SVGs containing `<foreignObject>` elements.\n    try {\n      const ctx = canvas.getContext('2d')\n      ctx?.drawImage(img, 0, 0, PREVIEW_WIDTH, PREVIEW_WIDTH / imageAspect)\n      canvas.toBlob(resolve, 'image/jpeg')\n    } catch (err) {\n      console.warn(`Unable to generate preview image:`, err)\n    }\n  })\n}\n\nconst createImageEl = (file: File): Promise<HTMLImageElement> => {\n  return new Promise(resolve => {\n    const blobUrlLarge = window.URL.createObjectURL(file)\n    const img = new Image()\n    img.onload = () => {\n      window.URL.revokeObjectURL(blobUrlLarge)\n      resolve(img)\n    }\n    img.src = blobUrlLarge\n  })\n}\n\nconst generatePreviewBlobUrl = async (file: File): Promise<string> => {\n  const imageEl = await createImageEl(file)\n  const blob = await createBlob(imageEl)\n\n  if (!blob) {\n    throw Error('Unable to generate file Blob')\n  }\n\n  return window.URL.createObjectURL(blob)\n}\n\nexport const generatePreviewBlobUrl$ = (file: File): Observable<string> => {\n  return of(null).pipe(mergeMap(() => from(generatePreviewBlobUrl(file))))\n}\n","// Takes a observable-returning function and returns a new function that limits on the number of\n// concurrent observables.\nimport {first, mergeMap} from 'rxjs/operators'\nimport {Subject, Subscription, Observable, from} from 'rxjs'\n\nconst DEFAULT_CONCURRENCY = 4\n\nfunction remove<T>(array: Array<T>, item: T): Array<T> {\n  const index = array.indexOf(item)\n  if (index > -1) {\n    array.splice(index, 1)\n  }\n  return array\n}\n\nexport const createThrottler = (concurrency: number = DEFAULT_CONCURRENCY) => {\n  const currentSubscriptions: Array<Subscription> = []\n  const pendingObservables: Array<Observable<any>> = []\n  const ready$ = new Subject()\n\n  function request(observable: Observable<any>): Observable<any> {\n    return new Observable(observer => {\n      if (currentSubscriptions.length >= concurrency) {\n        return scheduleAndWait$(observable)\n          .pipe(mergeMap(request)) //\n          .subscribe(observer)\n      }\n      const subscription = observable.subscribe(observer)\n      currentSubscriptions.push(subscription)\n      return () => {\n        remove(currentSubscriptions, subscription)\n        remove(pendingObservables, observable)\n        subscription.unsubscribe()\n        while (pendingObservables.length > 0 && currentSubscriptions.length < concurrency) {\n          ready$.next(pendingObservables.shift())\n        }\n      }\n    })\n  }\n\n  function scheduleAndWait$(observable: Observable<any>): Observable<any> {\n    pendingObservables.push(observable)\n    return ready$.asObservable().pipe(first(obs => obs === observable))\n  }\n\n  return request\n}\n\nexport const withMaxConcurrency = (\n  func: (...args: any[]) => Observable<any>,\n  concurrency: number = DEFAULT_CONCURRENCY\n) => {\n  const throttler = createThrottler(concurrency)\n  return (...args: Array<any>) => from(throttler(func(...args)))\n}\n","// Sourced from:\n// https://github.com/sanity-io/sanity/blob/ccb777e115a8cdf20d81a9a2bc9d8c228568faff/packages/%40sanity/form-builder/src/sanity/inputs/client-adapters/assets.ts\n\nimport type {SanityAssetDocument, SanityClient, SanityImageAssetDocument} from '@sanity/client'\nimport {HttpError} from '@types'\nimport {Observable, of, throwError} from 'rxjs'\nimport {map, mergeMap} from 'rxjs/operators'\nimport {withMaxConcurrency} from './withMaxConcurrency'\n\nconst fetchExisting$ = (client: SanityClient, type: string, hash: string) => {\n  return client.observable.fetch('*[_type == $documentType && sha1hash == $hash][0]', {\n    documentType: type,\n    hash\n  })\n}\n\nconst readFile$ = (file: File): Observable<ArrayBuffer> => {\n  return new Observable(subscriber => {\n    const reader = new FileReader()\n    reader.onload = () => {\n      subscriber.next(reader.result as ArrayBuffer)\n      subscriber.complete()\n    }\n    reader.onerror = err => {\n      subscriber.error(err)\n    }\n    reader.readAsArrayBuffer(file)\n    return () => {\n      reader.abort()\n    }\n  })\n}\n\nconst hexFromBuffer = (buffer: ArrayBuffer): string => {\n  return Array.prototype.map\n    .call(new Uint8Array(buffer), x => `00${x.toString(16)}`.slice(-2))\n    .join('')\n}\n\nexport const hashFile$ = (file: File): Observable<string> => {\n  if (!window.crypto || !window.crypto.subtle || !window.FileReader) {\n    return throwError({\n      message: 'Unable to generate hash: uploads are only allowed in secure contexts',\n      statusCode: 500\n    })\n  }\n  return readFile$(file).pipe(\n    mergeMap(arrayBuffer => window.crypto.subtle.digest('SHA-1', arrayBuffer)),\n    map(hexFromBuffer)\n  )\n}\n\nconst uploadSanityAsset$ = (\n  client: SanityClient,\n  assetType: 'file' | 'image',\n  file: File,\n  hash: string\n) => {\n  return of(null).pipe(\n    // NOTE: the sanity api will still dedupe unique files, but this saves us from uploading the asset file entirely\n    mergeMap(() => fetchExisting$(client, `sanity.${assetType}Asset`, hash)),\n    // Cancel if the asset already exists\n    mergeMap((existingAsset: SanityAssetDocument | SanityImageAssetDocument | null) => {\n      if (existingAsset) {\n        return throwError({\n          message: 'Asset already exists',\n          statusCode: 409\n        } as HttpError)\n      }\n\n      return of(null)\n    }),\n    mergeMap(() => {\n      // Begin upload if no existing asset found\n      return client.observable.assets\n        .upload(assetType, file, {\n          extract: ['blurhash', 'exif', 'location', 'lqip', 'palette'],\n          preserveFilename: true\n        })\n        .pipe(\n          map(event =>\n            event.type === 'response'\n              ? {\n                  // rewrite to a 'complete' event\n                  asset: event.body.document,\n                  id: event.body.document._id,\n                  type: 'complete'\n                }\n              : event\n          )\n        )\n    })\n  )\n}\n\nexport const uploadAsset$ = withMaxConcurrency(uploadSanityAsset$)\n","import {createSelector, createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport type {ClientError, SanityAssetDocument, SanityImageAssetDocument} from '@sanity/client'\nimport type {HttpError, MyEpic, SanityUploadProgressEvent, UploadItem} from '@types'\nimport groq from 'groq'\nimport {Selector} from 'react-redux'\nimport {empty, merge, of} from 'rxjs'\nimport {catchError, delay, filter, mergeMap, takeUntil, withLatestFrom} from 'rxjs/operators'\nimport constructFilter from '../../utils/constructFilter'\nimport {generatePreviewBlobUrl$} from '../../utils/generatePreviewBlobUrl'\nimport {hashFile$, uploadAsset$} from '../../utils/uploadSanityAsset'\nimport {assetsActions} from '../assets'\nimport type {RootReducerState} from '../types'\nimport {UPLOADS_ACTIONS} from './actions'\n\nexport type UploadsReducerState = {\n  allIds: string[]\n  byIds: Record<string, UploadItem>\n}\n\nconst initialState = {\n  allIds: [],\n  byIds: {}\n} as UploadsReducerState\n\nconst uploadsSlice = createSlice({\n  name: 'uploads',\n  initialState,\n  extraReducers: builder => {\n    builder //\n      .addCase(UPLOADS_ACTIONS.uploadComplete, (state, action) => {\n        const {asset} = action.payload\n        if (state.byIds[asset.sha1hash]) {\n          state.byIds[asset.sha1hash].status = 'complete'\n        }\n      })\n  },\n  reducers: {\n    checkRequest(\n      _state,\n      _action: PayloadAction<{assets: (SanityAssetDocument | SanityImageAssetDocument)[]}>\n    ) {\n      //\n    },\n    checkComplete(state, action: PayloadAction<{results: Record<string, string | null>}>) {\n      const {results} = action.payload\n\n      const assetHashes = Object.keys(results)\n\n      assetHashes.forEach(hash => {\n        const deleteIndex = state.allIds.indexOf(hash)\n        if (deleteIndex >= 0) {\n          state.allIds.splice(deleteIndex, 1)\n        }\n\n        if (state.byIds[hash]) {\n          const blobUrl = state.byIds[hash].objectUrl\n          if (blobUrl) {\n            window.URL.revokeObjectURL(blobUrl)\n          }\n\n          delete state.byIds[hash]\n        }\n      })\n    },\n    previewReady(state, action: PayloadAction<{hash: string; blobUrl: string}>) {\n      const {blobUrl, hash} = action.payload\n      if (state.byIds[hash]) {\n        state.byIds[hash].objectUrl = blobUrl\n      }\n    },\n    uploadCancel(state, action: PayloadAction<{hash: string}>) {\n      const {hash} = action.payload\n      const deleteIndex = state.allIds.indexOf(hash)\n      if (deleteIndex >= 0) {\n        state.allIds.splice(deleteIndex, 1)\n      }\n      if (state.byIds[hash]) {\n        delete state.byIds[hash]\n      }\n    },\n    uploadError(state, action: PayloadAction<{error: HttpError; hash: string}>) {\n      const {hash} = action.payload\n      const deleteIndex = state.allIds.indexOf(hash)\n      if (deleteIndex >= 0) {\n        state.allIds.splice(deleteIndex, 1)\n      }\n      delete state.byIds[hash]\n    },\n    uploadRequest(\n      _state,\n      _action: PayloadAction<{file: File; forceAsAssetType?: 'file' | 'image'}>\n    ) {\n      //\n    },\n    uploadProgress(\n      state,\n      action: PayloadAction<{event: SanityUploadProgressEvent; uploadHash: string}>\n    ) {\n      const {event, uploadHash} = action.payload\n      state.byIds[uploadHash].percent = event.percent\n      state.byIds[uploadHash].status = 'uploading'\n    },\n    uploadStart(state, action: PayloadAction<{file: File; uploadItem: UploadItem}>) {\n      const {uploadItem} = action.payload\n      if (!state.allIds.includes(uploadItem.hash)) {\n        state.allIds.push(uploadItem.hash)\n      }\n      state.byIds[uploadItem.hash] = uploadItem\n    }\n  }\n})\n\n// Epics\n\nexport const uploadsAssetStartEpic: MyEpic = (action$, _state$, {client}) =>\n  action$.pipe(\n    filter(uploadsActions.uploadStart.match),\n    mergeMap(action => {\n      const {file, uploadItem} = action.payload\n\n      return merge(\n        // Generate low res preview\n        of(null).pipe(\n          mergeMap(() => generatePreviewBlobUrl$(file)),\n          mergeMap(url => {\n            return of(\n              uploadsActions.previewReady({\n                blobUrl: url,\n                hash: uploadItem.hash\n              })\n            )\n          })\n        ),\n        // Upload asset and receive progress / complete events\n        of(null).pipe(\n          // delay(500000), // debug uploads\n          mergeMap(() => uploadAsset$(client, uploadItem.assetType, file, uploadItem.hash)),\n          takeUntil(\n            action$.pipe(\n              filter(uploadsActions.uploadCancel.match),\n              filter(v => v.payload.hash === uploadItem.hash)\n            )\n          ),\n          mergeMap(event => {\n            if (event?.type === 'complete') {\n              return of(\n                UPLOADS_ACTIONS.uploadComplete({\n                  asset: event.asset\n                })\n              )\n            }\n            if (event?.type === 'progress' && event?.stage === 'upload') {\n              return of(\n                uploadsActions.uploadProgress({\n                  event,\n                  uploadHash: uploadItem.hash\n                })\n              )\n            }\n            return empty()\n          }),\n          catchError((error: ClientError) =>\n            of(\n              uploadsActions.uploadError({\n                error: {\n                  message: error?.message || 'Internal error',\n                  statusCode: error?.statusCode || 500\n                },\n                hash: uploadItem.hash\n              })\n            )\n          )\n        )\n      )\n    })\n  )\n\nexport const uploadsAssetUploadEpic: MyEpic = (action$, state$) =>\n  action$.pipe(\n    filter(uploadsActions.uploadRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {file, forceAsAssetType} = action.payload\n\n      return of(action).pipe(\n        // Generate SHA1 hash from local file\n        // This will throw in insecure contexts (non-localhost / https)\n        mergeMap(() => hashFile$(file)),\n        // Ignore if the file exists and is currently being uploaded\n        filter(hash => {\n          const exists = !!state.uploads.byIds[hash]\n          return !exists\n        }),\n        // Dispatch start action and begin upload process\n        mergeMap(hash => {\n          const assetType = forceAsAssetType || (file.type.indexOf('image') >= 0 ? 'image' : 'file')\n          const uploadItem = {\n            _type: 'upload',\n            assetType,\n            hash,\n            name: file.name,\n            size: file.size,\n            status: 'queued'\n          } as UploadItem\n          return of(uploadsActions.uploadStart({file, uploadItem}))\n        })\n      )\n    })\n  )\n\nexport const uploadsCompleteQueueEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(UPLOADS_ACTIONS.uploadComplete.match),\n    mergeMap(action => {\n      return of(\n        uploadsActions.checkRequest({\n          assets: [action.payload.asset]\n        })\n      )\n    })\n  )\n\nexport const uploadsCheckRequestEpic: MyEpic = (action$, state$, {client}) =>\n  action$.pipe(\n    filter(uploadsActions.checkRequest.match),\n    withLatestFrom(state$),\n    mergeMap(([action, state]) => {\n      const {assets} = action.payload\n\n      const documentIds = assets.map(asset => asset._id)\n\n      const constructedFilter = constructFilter({\n        assetTypes: state.assets.assetTypes,\n        searchFacets: state.search.facets,\n        searchQuery: state.search.query\n      })\n\n      const query = groq`\n        *[${constructedFilter} && _id in $documentIds].sha1hash\n      `\n\n      return of(action).pipe(\n        delay(1000), // give Sanity some time to register the recently uploaded asset\n        mergeMap(() => client.observable.fetch<string[]>(query, {documentIds})),\n        mergeMap(resultHashes => {\n          const checkedResults = assets.reduce((acc: Record<string, string | null>, asset) => {\n            acc[asset.sha1hash] = resultHashes.includes(asset.sha1hash) ? asset._id : null\n            return acc\n          }, {})\n\n          return of(\n            uploadsActions.checkComplete({results: checkedResults}), //\n            assetsActions.insertUploads({results: checkedResults})\n          )\n        })\n      )\n    })\n  )\n\n// Selectors\n\nconst selectUploadsByIds = (state: RootReducerState) => state.uploads.byIds\n\nconst selectUploadsAllIds = (state: RootReducerState) => state.uploads.allIds\n\nexport const selectUploadById = createSelector(\n  [\n    (state: RootReducerState) => state.uploads.byIds,\n    (_state: RootReducerState, uploadId: string) => uploadId\n  ],\n  (byIds, uploadId) => byIds[uploadId]\n)\n\nexport const selectUploads: Selector<RootReducerState, UploadItem[]> = createSelector(\n  [selectUploadsByIds, selectUploadsAllIds],\n  (byIds, allIds) => allIds.map(id => byIds[id])\n)\n\nexport const uploadsActions = uploadsSlice.actions\n\nexport default uploadsSlice.reducer\n","import {hues} from '@sanity/color'\nimport {CloseIcon} from '@sanity/icons'\nimport {Box, Button, Flex, Text, Tooltip} from '@sanity/ui'\nimport filesize from 'filesize'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport styled from 'styled-components'\nimport {PANEL_HEIGHT} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {selectUploadById, uploadsActions} from '../../modules/uploads'\nimport FileIcon from '../FileIcon'\nimport Image from '../Image'\n\ntype Props = {\n  id: string\n}\n\nconst CardWrapper = styled(Flex)`\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  padding: 2px;\n  position: relative;\n  width: 100%;\n`\n\nconst CardUpload = (props: Props) => {\n  const {id} = props\n\n  // Redux\n  const dispatch = useDispatch()\n  const item = useTypedSelector(state => selectUploadById(state, id))\n\n  if (!item) {\n    return null\n  }\n\n  const fileSize = filesize(item.size, {base: 10, round: 0})\n  const percentLoaded = Math.round(item.percent || 0) // (0 - 100)\n\n  const isComplete = item.status === 'complete'\n  const isUploading = item.status === 'uploading'\n  const isQueued = item.status === 'queued'\n\n  let status\n  if (isComplete) {\n    status = 'Verifying'\n  }\n  if (isUploading) {\n    status = `${percentLoaded}%`\n  }\n  if (isQueued) {\n    status = 'Queued'\n  }\n\n  // Callbacks\n  const handleCancelUpload = () => {\n    dispatch(uploadsActions.uploadCancel({hash: item.hash}))\n  }\n\n  return (\n    <CardWrapper>\n      <Flex\n        direction=\"column\"\n        flex={1}\n        style={{\n          background: hues.gray[950].hex,\n          border: '1px solid transparent',\n          height: '100%',\n          position: 'relative'\n        }}\n      >\n        {/* Progress bar */}\n        <div\n          style={{\n            background: hues.gray[600].hex,\n            bottom: 0,\n            height: '1px',\n            left: 0,\n            position: 'absolute',\n            width: '100%',\n            transform: `scaleX(${percentLoaded * 0.01})`,\n            transformOrigin: 'bottom left',\n            transition: 'all 1000ms ease-out'\n          }}\n        />\n\n        <Box flex={1} style={{position: 'relative'}}>\n          {item.assetType === 'image' && item?.objectUrl && (\n            <Image\n              draggable={false}\n              src={item.objectUrl}\n              style={{\n                opacity: 0.4\n              }}\n            />\n          )}\n\n          {item.assetType === 'file' && (\n            <div style={{height: '100%', opacity: 0.1}}>\n              <FileIcon width=\"80px\" />\n            </div>\n          )}\n\n          {/* \n          Cancel upload button.\n          Assets will only have a `complete` status _after_ it has been created on your dataset.\n          As such, we also hide the cancel button when `percentLoaded === 100`, as cancelling when the asset \n          has been fully uploaded (even with a status of `progress`) won't stop the asset from being created.\n        */}\n          {!isComplete && percentLoaded !== 100 && (\n            <Flex\n              align=\"center\"\n              direction=\"column\"\n              justify=\"center\"\n              style={{\n                height: '100%',\n                left: 0,\n                position: 'absolute',\n                top: 0,\n                width: '100%'\n              }}\n            >\n              <Tooltip\n                content={\n                  <Box padding={2}>\n                    <Text muted size={1}>\n                      Cancel\n                    </Text>\n                  </Box>\n                }\n                disabled={'ontouchstart' in window}\n                placement=\"top\"\n              >\n                <Button\n                  fontSize={4}\n                  icon={CloseIcon}\n                  mode=\"bleed\"\n                  onClick={handleCancelUpload}\n                  padding={2}\n                  style={{background: 'none', boxShadow: 'none'}}\n                  tone=\"critical\"\n                />\n              </Tooltip>\n            </Flex>\n          )}\n        </Box>\n\n        {/* Footer */}\n        <Flex\n          align=\"center\"\n          justify=\"space-between\"\n          paddingX={2}\n          style={{height: `${PANEL_HEIGHT}px`}}\n        >\n          <Box flex={1} marginRight={1}>\n            <Text size={0} textOverflow=\"ellipsis\">\n              {item.name} ({fileSize})\n            </Text>\n          </Box>\n          <Text size={0} style={{flexShrink: 0}} weight=\"semibold\">\n            {status}\n          </Text>\n        </Flex>\n      </Flex>\n    </CardWrapper>\n  )\n}\n\nexport default CardUpload\n","import {CardAssetData, CardUploadData} from '@types'\nimport React, {memo} from 'react'\nimport {VirtuosoGrid} from 'react-virtuoso'\nimport styled from 'styled-components'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport CardAsset from '../CardAsset'\nimport CardUpload from '../CardUpload'\n\ntype Props = {\n  items: (CardAssetData | CardUploadData)[]\n  onLoadMore?: () => void\n}\n\nconst CARD_HEIGHT = 220\nconst CARD_WIDTH = 240\n\nconst VirtualCell = memo(\n  ({item, selected}: {item: CardAssetData | CardUploadData; selected: boolean}) => {\n    if (item?.type === 'asset') {\n      return <CardAsset id={item.id} selected={selected} />\n    }\n\n    if (item?.type === 'upload') {\n      return <CardUpload id={item.id} />\n    }\n\n    return null\n  }\n)\n\nconst ItemContainer = styled.div`\n  height: ${CARD_HEIGHT}px;\n  width: ${CARD_WIDTH}px;\n`\n\nconst ListContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, ${CARD_WIDTH}px);\n  justify-content: center;\n  margin: 0 auto;\n`\n\nconst AssetGridVirtualized = (props: Props) => {\n  const {items, onLoadMore} = props\n\n  // Redux\n  const selectedAssets = useTypedSelector(state => state.selected.assets)\n\n  const selectedIds = (selectedAssets && selectedAssets.map(asset => asset._id)) || []\n  const totalCount = items?.length\n\n  if (totalCount === 0) {\n    return null\n  }\n\n  return (\n    <VirtuosoGrid\n      className=\"media__custom-scrollbar\"\n      computeItemKey={index => {\n        const item = items[index]\n        return item?.id\n      }}\n      components={{\n        Item: ItemContainer,\n        List: ListContainer\n      }}\n      endReached={onLoadMore}\n      itemContent={index => {\n        const item = items[index]\n        const selected = selectedIds.includes(item?.id)\n        return <VirtualCell item={item} selected={selected} />\n      }}\n      overscan={48}\n      style={{overflowX: 'hidden'}}\n      totalCount={totalCount}\n    />\n  )\n}\n\nexport default AssetGridVirtualized\n","import {ChevronDownIcon, ChevronUpIcon} from '@sanity/icons'\nimport {Box, Label} from '@sanity/ui'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {assetsActions} from '../../modules/assets'\n\ntype Props = {\n  field?: string\n  title?: string\n}\n\nconst TableHeaderItem = (props: Props) => {\n  const {field, title} = props\n\n  // Redux\n  const dispatch = useDispatch()\n  const order = useTypedSelector(state => state.assets.order)\n\n  const isActive = order.field === field\n\n  // Callbacks\n  const handleClick = () => {\n    if (!field || !title) {\n      return\n    }\n\n    if (isActive) {\n      const direction = order.direction === 'asc' ? 'desc' : 'asc'\n      dispatch(assetsActions.orderSet({order: {field, direction}}))\n    } else {\n      dispatch(assetsActions.orderSet({order: {field, direction: 'asc'}}))\n    }\n  }\n\n  return (\n    <Label muted={!field} size={0}>\n      <Box\n        onClick={field ? handleClick : undefined}\n        style={{\n          cursor: field ? 'pointer' : 'default',\n          display: 'inline',\n          whiteSpace: 'nowrap'\n        }}\n      >\n        <span\n          style={{\n            marginRight: '0.4em'\n          }}\n        >\n          {title}\n        </span>\n\n        {isActive && order?.direction === 'asc' && <ChevronUpIcon />}\n        {isActive && order?.direction === 'desc' && <ChevronDownIcon />}\n      </Box>\n    </Label>\n  )\n}\n\nexport default TableHeaderItem\n","import {black, hues} from '@sanity/color'\nimport {Checkbox, Flex, Grid, useMediaIndex} from '@sanity/ui'\nimport React, {MouseEvent} from 'react'\nimport {useDispatch} from 'react-redux'\nimport styled from 'styled-components'\nimport {GRID_TEMPLATE_COLUMNS, PANEL_HEIGHT} from '../../constants'\nimport {useAssetSourceActions} from '../../contexts/AssetSourceDispatchContext'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {assetsActions, selectAssetsLength, selectAssetsPickedLength} from '../../modules/assets'\nimport TableHeaderItem from '../TableHeaderItem'\n\n// TODO: DRY\nconst ContextActionContainer = styled(Flex)`\n  cursor: pointer;\n\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      background: ${hues.gray?.[900].hex};\n    }\n  }\n`\n\nconst TableHeader = () => {\n  // Redux\n  const dispatch = useDispatch()\n  const fetching = useTypedSelector(state => state.assets.fetching)\n  const itemsLength = useTypedSelector(selectAssetsLength)\n  const numPickedAssets = useTypedSelector(selectAssetsPickedLength)\n\n  const mediaIndex = useMediaIndex()\n  const {onSelect} = useAssetSourceActions()\n\n  const allSelected = numPickedAssets === itemsLength\n\n  // Callbacks\n  const handleContextActionClick = (e: MouseEvent) => {\n    e.stopPropagation()\n\n    if (allSelected) {\n      dispatch(assetsActions.pickClear())\n    } else {\n      dispatch(assetsActions.pickAll())\n    }\n  }\n\n  // Note that even though we hide the table header on smaller breakpoints, we never set it to\n  // `display: none`, as doing so causes issues with react-virtuoso.\n  // Instead, we give it 0 height and hide it with `visibility: hidden`.\n  return (\n    <Grid\n      style={{\n        alignItems: 'center',\n        background: black.hex,\n        borderBottom: `1px solid ${hues.gray?.[900].hex}`,\n        gridColumnGap: mediaIndex < 3 ? 0 : '16px',\n        gridTemplateColumns: GRID_TEMPLATE_COLUMNS.LARGE,\n        height: mediaIndex < 3 ? 0 : `${PANEL_HEIGHT}px`,\n        letterSpacing: '0.025em',\n        position: 'sticky',\n        textTransform: 'uppercase',\n        top: 0,\n        visibility: mediaIndex < 3 ? 'hidden' : 'visible',\n        width: '100%',\n        zIndex: 1 // force stacking context\n      }}\n    >\n      {onSelect ? (\n        <TableHeaderItem />\n      ) : (\n        <ContextActionContainer\n          align=\"center\"\n          justify=\"center\"\n          onClick={handleContextActionClick}\n          style={{\n            height: '100%',\n            position: 'relative'\n          }}\n        >\n          <Checkbox\n            checked={!fetching && allSelected}\n            readOnly\n            style={{\n              pointerEvents: 'none', // TODO: consider alternative for usability\n              transform: 'scale(0.8)'\n            }}\n          />\n        </ContextActionContainer>\n      )}\n\n      <TableHeaderItem />\n      <TableHeaderItem field=\"originalFilename\" title=\"Filename\" />\n      <TableHeaderItem title=\"Resolution\" />\n      <TableHeaderItem field=\"mimeType\" title=\"MIME type\" />\n      <TableHeaderItem field=\"size\" title=\"Size\" />\n      <TableHeaderItem field=\"_updatedAt\" title=\"Last updated\" />\n      <TableHeaderItem />\n    </Grid>\n  )\n}\n\nexport default TableHeader\n","import {hues} from '@sanity/color'\nimport {CheckmarkCircleIcon, EditIcon, WarningFilledIcon} from '@sanity/icons'\nimport {\n  Box,\n  Checkbox,\n  Container,\n  Flex,\n  Grid,\n  Spinner,\n  Text,\n  Tooltip,\n  useMediaIndex\n} from '@sanity/ui'\nimport formatRelative from 'date-fns/formatRelative'\nimport filesize from 'filesize'\nimport React, {memo, MouseEvent, RefObject} from 'react'\nimport {useDispatch} from 'react-redux'\nimport styled, {css} from 'styled-components'\nimport {GRID_TEMPLATE_COLUMNS} from '../../constants'\nimport {useAssetSourceActions} from '../../contexts/AssetSourceDispatchContext'\nimport useKeyPress from '../../hooks/useKeyPress'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {assetsActions, selectAssetById} from '../../modules/assets'\nimport {dialogActions} from '../../modules/dialog'\nimport getAssetResolution from '../../utils/getAssetResolution'\nimport imageDprUrl from '../../utils/imageDprUrl'\nimport {isFileAsset, isImageAsset} from '../../utils/typeGuards'\nimport FileIcon from '../FileIcon'\nimport Image from '../Image'\n\ntype Props = {\n  id: string\n  selected: boolean\n}\n\nconst ContainerGrid = styled(Grid)<{selected?: boolean; updating?: boolean}>`\n  align-items: center;\n  cursor: ${props => (props.selected ? 'default' : 'pointer')};\n  height: 100%;\n  pointer-events: ${props => (props.updating ? 'none' : 'auto')};\n  user-select: none;\n  white-space: nowrap;\n\n  ${props =>\n    !props.updating &&\n    css`\n      @media (hover: hover) and (pointer: fine) {\n        &:hover {\n          background: ${hues.gray?.[950].hex};\n        }\n      }\n    `}\n`\n\nconst ContextActionContainer = styled(Flex)`\n  cursor: pointer;\n\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      background: ${hues.gray?.[900].hex};\n    }\n  }\n`\n\nconst StyledWarningIcon = styled(WarningFilledIcon)(({theme}) => {\n  return {\n    color: theme.sanity.color.spot.red\n  }\n})\n\nconst TableRowAsset = (props: Props) => {\n  const {id, selected} = props\n\n  // Refs\n  const shiftPressed: RefObject<boolean> = useKeyPress('shift')\n\n  // Redux\n  const dispatch = useDispatch()\n  const lastPicked = useTypedSelector(state => state.assets.lastPicked)\n  const item = useTypedSelector(state => selectAssetById(state, id))\n\n  const mediaIndex = useMediaIndex()\n\n  const asset = item?.asset\n  const error = item?.error\n  const isOpaque = item?.asset?.metadata?.isOpaque\n  const picked = item?.picked\n  const updating = item?.updating\n\n  const {onSelect} = useAssetSourceActions()\n\n  // Short circuit if no asset is available\n  if (!asset) {\n    return null\n  }\n\n  // Callbacks\n  const handleContextActionClick = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation()\n\n    if (onSelect) {\n      dispatch(dialogActions.showAssetEdit({assetId: asset._id}))\n    } else if (shiftPressed.current && !picked) {\n      dispatch(assetsActions.pickRange({startId: lastPicked || asset._id, endId: asset._id}))\n    } else {\n      dispatch(assetsActions.pick({assetId: asset._id, picked: !picked}))\n    }\n  }\n\n  const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation()\n\n    if (onSelect) {\n      onSelect([\n        {\n          kind: 'assetDocumentId',\n          value: asset._id\n        }\n      ])\n    } else if (shiftPressed.current) {\n      if (picked) {\n        dispatch(assetsActions.pick({assetId: asset._id, picked: !picked}))\n      } else {\n        dispatch(assetsActions.pickRange({startId: lastPicked || asset._id, endId: asset._id}))\n      }\n    } else {\n      dispatch(dialogActions.showAssetEdit({assetId: asset._id}))\n    }\n  }\n\n  const opacityCell = updating ? 0.5 : 1\n  const opacityPreview = selected || updating ? 0.1 : 1\n\n  return (\n    <ContainerGrid\n      onClick={selected ? undefined : handleClick}\n      selected={selected}\n      style={{\n        gridColumnGap: mediaIndex < 3 ? 0 : '16px',\n        gridRowGap: 0,\n        gridTemplateColumns:\n          mediaIndex < 3 ? GRID_TEMPLATE_COLUMNS.SMALL : GRID_TEMPLATE_COLUMNS.LARGE,\n        gridTemplateRows: mediaIndex < 3 ? 'auto' : '1fr'\n      }}\n      updating={item.updating}\n    >\n      {/* Picked checkbox */}\n      <ContextActionContainer\n        onClick={handleContextActionClick}\n        style={{\n          alignItems: 'center',\n          gridColumn: 1,\n          gridRowStart: 1,\n          gridRowEnd: 'span 5',\n          height: '100%',\n          justifyContent: 'center',\n          opacity: opacityCell,\n          position: 'relative'\n        }}\n      >\n        {onSelect ? (\n          <EditIcon\n            style={{\n              flexShrink: 0,\n              opacity: 0.5\n            }}\n          />\n        ) : (\n          <Checkbox\n            checked={picked}\n            readOnly\n            style={{\n              pointerEvents: 'none', // TODO: consider alternative for usability\n              transform: 'scale(0.8)'\n            }}\n          />\n        )}\n      </ContextActionContainer>\n\n      {/* Preview image + spinner */}\n      <Box\n        style={{\n          gridColumn: 2,\n          gridRowStart: 1,\n          gridRowEnd: 'span 5',\n          height: '90px',\n          width: '100px'\n        }}\n      >\n        <Flex align=\"center\" justify=\"center\" style={{height: '100%', position: 'relative'}}>\n          <Box style={{height: '100%', opacity: opacityPreview, position: 'relative'}}>\n            {/* File icon */}\n            {isFileAsset(asset) && <FileIcon extension={asset.extension} width=\"40px\" />}\n\n            {/* Image */}\n            {isImageAsset(asset) && (\n              <Image\n                draggable={false}\n                showCheckerboard={!isOpaque}\n                src={imageDprUrl(asset, {height: 100, width: 100})}\n              />\n            )}\n          </Box>\n\n          {/* Spinner */}\n          {updating && (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              style={{\n                height: '100%',\n                left: 0,\n                position: 'absolute',\n                top: 0,\n                width: '100%'\n              }}\n            >\n              <Spinner />\n            </Flex>\n          )}\n\n          {/* Selected check icon */}\n          {selected && !updating && (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              style={{\n                height: '100%',\n                left: 0,\n                position: 'absolute',\n                top: 0,\n                width: '100%'\n              }}\n            >\n              <Text size={2}>\n                <CheckmarkCircleIcon />\n              </Text>\n            </Flex>\n          )}\n        </Flex>\n      </Box>\n\n      {/* Filename */}\n      <Box\n        marginLeft={mediaIndex < 3 ? 3 : 0}\n        style={{\n          gridColumn: 3,\n          gridRow: mediaIndex < 3 ? 2 : 'auto',\n          opacity: opacityCell\n        }}\n      >\n        <Text muted size={1} style={{lineHeight: '2em'}} textOverflow=\"ellipsis\">\n          {asset.originalFilename}\n        </Text>\n      </Box>\n\n      {/* Resolution */}\n      <Box\n        marginLeft={mediaIndex < 3 ? 3 : 0}\n        style={{\n          gridColumn: mediaIndex < 3 ? 3 : 4,\n          gridRow: mediaIndex < 3 ? 3 : 'auto',\n          opacity: opacityCell\n        }}\n      >\n        <Text muted size={1} style={{lineHeight: '2em'}} textOverflow=\"ellipsis\">\n          {isImageAsset(asset) && getAssetResolution(asset)}\n        </Text>\n      </Box>\n\n      {/* MIME type */}\n      <Box\n        style={{\n          display: mediaIndex < 3 ? 'none' : 'block',\n          gridColumn: 5,\n          gridRow: 'auto',\n          opacity: opacityCell\n        }}\n      >\n        <Text muted size={1} style={{lineHeight: '2em'}} textOverflow=\"ellipsis\">\n          {asset.mimeType}\n        </Text>\n      </Box>\n\n      {/* Size */}\n      <Box\n        style={{\n          display: mediaIndex < 3 ? 'none' : 'block',\n          gridColumn: 6,\n          gridRow: 'auto',\n          opacity: opacityCell\n        }}\n      >\n        <Text muted size={1} style={{lineHeight: '2em'}} textOverflow=\"ellipsis\">\n          {filesize(asset.size, {base: 10, round: 0})}\n        </Text>\n      </Box>\n\n      {/* Last updated */}\n      <Box\n        marginLeft={mediaIndex < 3 ? 3 : 0}\n        style={{\n          gridColumn: mediaIndex < 3 ? 3 : 7,\n          gridRow: mediaIndex < 3 ? 4 : 'auto',\n          opacity: opacityCell\n        }}\n      >\n        <Text muted size={1} style={{lineHeight: '2em'}} textOverflow=\"ellipsis\">\n          {formatRelative(new Date(asset._updatedAt), new Date())}\n        </Text>\n      </Box>\n\n      {/* Error */}\n      <Flex\n        align=\"center\"\n        justify=\"center\"\n        style={{\n          gridColumn: mediaIndex < 3 ? 4 : 8,\n          gridRowStart: '1',\n          gridRowEnd: mediaIndex < 3 ? 'span 5' : 'auto',\n          opacity: opacityCell\n        }}\n      >\n        {/* TODO: DRY */}\n        {/* Error button */}\n        {error && (\n          <Box padding={2}>\n            <Tooltip\n              content={\n                <Container padding={2} width={0}>\n                  <Text size={1}>{error}</Text>\n                </Container>\n              }\n              placement=\"left\"\n              portal\n            >\n              <Text size={1}>\n                <StyledWarningIcon color=\"critical\" />\n              </Text>\n            </Tooltip>\n          </Box>\n        )}\n      </Flex>\n    </ContainerGrid>\n  )\n}\n\nexport default memo(TableRowAsset)\n","import {hues} from '@sanity/color'\nimport {CloseIcon} from '@sanity/icons'\nimport {Box, Button, Flex, Grid, Stack, Text, Tooltip, useMediaIndex} from '@sanity/ui'\nimport filesize from 'filesize'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport {GRID_TEMPLATE_COLUMNS} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {selectUploadById, uploadsActions} from '../../modules/uploads'\nimport FileIcon from '../FileIcon'\nimport Image from '../Image'\n\ntype Props = {\n  id: string\n}\n\nconst TableRowUpload = (props: Props) => {\n  const {id} = props\n\n  // Redux\n  const dispatch = useDispatch()\n  const item = useTypedSelector(state => selectUploadById(state, id))\n\n  const mediaIndex = useMediaIndex()\n\n  if (!item) {\n    return null\n  }\n\n  const fileSize = filesize(item.size, {base: 10, round: 0})\n  const percentLoaded = Math.round(item.percent || 0) // (0 - 100)\n\n  const isComplete = item.status === 'complete'\n  const isUploading = item.status === 'uploading'\n  const isQueued = item.status === 'queued'\n\n  let status\n  if (isComplete) {\n    status = 'Verifying'\n  }\n  if (isUploading) {\n    status = `${percentLoaded}%`\n  }\n  if (isQueued) {\n    status = 'Queued'\n  }\n\n  // Callbacks\n  const handleCancelUpload = () => {\n    dispatch(uploadsActions.uploadCancel({hash: item.hash}))\n  }\n\n  return (\n    <Grid\n      style={{\n        alignItems: 'center',\n        background: hues.gray[950].hex,\n        gridColumnGap: mediaIndex < 3 ? 0 : '16px',\n        gridRowGap: 0,\n        gridTemplateColumns:\n          mediaIndex < 3 ? GRID_TEMPLATE_COLUMNS.SMALL : GRID_TEMPLATE_COLUMNS.LARGE,\n        gridTemplateRows: mediaIndex < 3 ? 'auto' : '1fr',\n        height: '100%',\n        position: 'relative'\n      }}\n    >\n      {/* Progress bar */}\n      <div\n        style={{\n          background: hues.gray[600].hex,\n          bottom: 0,\n          height: '1px',\n          left: 0,\n          position: 'absolute',\n          width: '100%',\n          transform: `scaleX(${percentLoaded * 0.01})`,\n          transformOrigin: 'bottom left',\n          transition: 'all 1000ms ease-out'\n        }}\n      />\n\n      {/* Image */}\n      <Box\n        style={{\n          gridColumn: 2,\n          gridRowStart: mediaIndex < 3 ? 1 : 'auto',\n          gridRowEnd: mediaIndex < 3 ? 'span 4' : 'auto',\n          height: '90px',\n          width: '100px'\n        }}\n      >\n        <Box style={{height: '100%', position: 'relative'}}>\n          {item.assetType === 'image' && item?.objectUrl && (\n            <Image draggable={false} src={item.objectUrl} style={{opacity: 0.25}} />\n          )}\n\n          {item.assetType === 'file' && (\n            <div style={{height: '100%', opacity: 0.1}}>\n              <FileIcon width=\"40px\" />\n            </div>\n          )}\n\n          {/* \n            Cancel upload button.\n            Assets will only have a `complete` status _after_ it has been created on your dataset.\n            As such, we also hide the cancel button when `percentLoaded === 100`, as cancelling when the asset \n            has been fully uploaded (even with a status of `progress`) won't stop the asset from being created.\n          */}\n          {!isComplete && percentLoaded !== 100 && (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              style={{\n                position: 'absolute',\n                height: '100%',\n                left: 0,\n                top: 0,\n                width: '100%'\n              }}\n            >\n              <Tooltip\n                content={\n                  <Box padding={2}>\n                    <Text muted size={1}>\n                      Cancel\n                    </Text>\n                  </Box>\n                }\n                disabled={'ontouchstart' in window}\n                placement=\"top\"\n              >\n                <Button\n                  fontSize={3}\n                  icon={CloseIcon}\n                  mode=\"bleed\"\n                  onClick={handleCancelUpload}\n                  padding={2}\n                  style={{background: 'none', boxShadow: 'none'}}\n                  tone=\"critical\"\n                />\n              </Tooltip>\n            </Flex>\n          )}\n        </Box>\n      </Box>\n\n      {/* Filename */}\n      <Box\n        style={{\n          gridColumn: mediaIndex < 3 ? 3 : '3/8',\n          gridRow: mediaIndex < 3 ? '2/4' : 'auto',\n          marginLeft: mediaIndex < 3 ? 3 : 0\n        }}\n      >\n        <Stack space={3}>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {item.name} ({fileSize})\n          </Text>\n          <Text size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n            {status}\n          </Text>\n        </Stack>\n      </Box>\n    </Grid>\n  )\n}\n\nexport default TableRowUpload\n","import {CardAssetData, CardUploadData} from '@types'\nimport {Box} from '@sanity/ui'\nimport React, {memo} from 'react'\nimport {GroupedVirtuoso} from 'react-virtuoso'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport TableHeader from '../TableHeader'\nimport TableRowAsset from '../TableRowAsset'\nimport TableRowUpload from '../TableRowUpload'\n\ntype Props = {\n  items: (CardAssetData | CardUploadData)[]\n  onLoadMore?: () => void\n}\n\nconst VirtualRow = memo(\n  ({item, selected}: {item: CardAssetData | CardUploadData; selected: boolean}) => {\n    if (item?.type === 'asset') {\n      return (\n        <Box style={{height: '100px'}}>\n          <TableRowAsset id={item.id} selected={selected} />\n        </Box>\n      )\n    }\n\n    if (item?.type === 'upload') {\n      return (\n        <Box style={{height: '100px'}}>\n          <TableRowUpload id={item.id} />\n        </Box>\n      )\n    }\n\n    return null\n  }\n)\n\nconst AssetTableVirtualized = (props: Props) => {\n  const {items, onLoadMore} = props\n\n  // Redux\n  const selectedAssets = useTypedSelector(state => state.selected.assets)\n\n  const selectedIds = (selectedAssets && selectedAssets.map(asset => asset._id)) || []\n  const totalCount = items?.length\n\n  if (totalCount === 0) {\n    return null\n  }\n\n  return (\n    <GroupedVirtuoso\n      className=\"media__custom-scrollbar\"\n      computeItemKey={index => {\n        const item = items[index]\n        return item?.id || index\n      }}\n      endReached={onLoadMore}\n      groupCounts={Array(1).fill(totalCount)}\n      groupContent={() => {\n        return <TableHeader />\n      }}\n      itemContent={index => {\n        const item = items[index]\n        const selected = selectedIds.includes(item?.id)\n        return <VirtualRow item={item} selected={selected} />\n      }}\n      style={{overflowX: 'hidden'}}\n    />\n  )\n}\n\nexport default AssetTableVirtualized\n","import {Box, Text} from '@sanity/ui'\nimport React, {useEffect} from 'react'\nimport {useDispatch} from 'react-redux'\nimport useBreakpointIndex from '../../hooks/useBreakpointIndex'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {assetsActions} from '../../modules/assets'\nimport {selectCombinedItems} from '../../modules/selectors'\nimport {tagsActions} from '../../modules/tags'\nimport AssetGridVirtualized from '../AssetGridVirtualized'\nimport AssetTableVirtualized from '../AssetTableVirtualized'\n\nconst Items = () => {\n  // Redux\n  const dispatch = useDispatch()\n  const fetchCount = useTypedSelector(state => state.assets.fetchCount)\n  const fetching = useTypedSelector(state => state.assets.fetching)\n  const tagsPanelVisible = useTypedSelector(state => state.tags.panelVisible)\n  const view = useTypedSelector(state => state.assets.view)\n  const combinedItems = useTypedSelector(selectCombinedItems)\n\n  const breakpointIndex = useBreakpointIndex()\n\n  const hasFetchedOnce = fetchCount >= 0\n  const hasItems = combinedItems.length > 0\n\n  // Only load 1 page of items at a time.\n  const handleLoadMoreItems = () => {\n    if (!fetching) {\n      dispatch(assetsActions.loadNextPage())\n    }\n  }\n\n  // Effects\n\n  // - Hide tag panel on smaller breakpoints\n  useEffect(() => {\n    if (breakpointIndex <= 1 && tagsPanelVisible) {\n      dispatch(tagsActions.panelVisibleSet({panelVisible: false}))\n    }\n  }, [breakpointIndex])\n\n  const isEmpty = !hasItems && hasFetchedOnce && !fetching\n\n  return (\n    <Box flex={1} style={{width: '100%'}}>\n      {isEmpty ? (\n        <Box padding={4}>\n          <Text size={1} weight=\"semibold\">\n            No results for the current query\n          </Text>\n        </Box>\n      ) : (\n        <>\n          {view === 'grid' && (\n            <AssetGridVirtualized items={combinedItems} onLoadMore={handleLoadMoreItems} />\n          )}\n\n          {view === 'table' && (\n            <AssetTableVirtualized items={combinedItems} onLoadMore={handleLoadMoreItems} />\n          )}\n        </>\n      )}\n    </Box>\n  )\n}\n\nexport default Items\n","import {studioTheme} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\n// Determine the current breakpoint index\n// - create MediaQueryLists from every breakpoint defined in our sanity studio theme\n// - for each MQL, listen to change events and return the selected breakpoint index\nconst useBreakpointIndex = (): number => {\n  const mediaQueryLists = studioTheme?.container?.map(width =>\n    window.matchMedia(`(max-width: ${width}px)`)\n  )\n\n  const getBreakpointIndex = () => mediaQueryLists.findIndex(mql => mql.matches)\n\n  const [value, setValue] = useState(getBreakpointIndex())\n\n  useEffect(() => {\n    const handleBreakpoint = () => {\n      setValue(getBreakpointIndex)\n    }\n\n    // NOTE: older versions of Safari use the older `addListener` and `removeListener` methods\n    mediaQueryLists.forEach(mql => {\n      try {\n        mql.addEventListener('change', handleBreakpoint)\n      } catch (err) {\n        try {\n          mql.addListener(handleBreakpoint)\n        } catch (_err) {\n          // Do nothing\n        }\n      }\n    })\n    return () => {\n      try {\n        mediaQueryLists.forEach(mql => mql.removeEventListener('change', handleBreakpoint))\n      } catch (err) {\n        try {\n          mediaQueryLists.forEach(mql => mql.removeListener(handleBreakpoint))\n        } catch (_err) {\n          // Do nothing\n        }\n      }\n    }\n  }, [])\n\n  return value\n}\n\nexport default useBreakpointIndex\n","import {useToast} from '@sanity/ui'\nimport {useEffect} from 'react'\nimport useTypedSelector from '../../hooks/useTypedSelector'\n\nconst Notifications = () => {\n  const items = useTypedSelector(state => state.notifications.items)\n  const toast = useToast()\n\n  useEffect(() => {\n    if (items.length > 0) {\n      const lastItem = items[items.length - 1]\n      toast.push({\n        closable: true,\n        status: lastItem.status,\n        title: lastItem.title\n      })\n    }\n  }, [items.length])\n\n  return null\n}\n\nexport default Notifications\n","import {hues} from '@sanity/color'\nimport {Box, Button, Flex, Label} from '@sanity/ui'\nimport pluralize from 'pluralize'\nimport React from 'react'\nimport {useDispatch} from 'react-redux'\nimport {PANEL_HEIGHT} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {assetsActions, selectAssetsPicked} from '../../modules/assets'\nimport {dialogActions} from '../../modules/dialog'\n\nconst PickedBar = () => {\n  // Redux\n  const dispatch = useDispatch()\n  const assetsPicked = useTypedSelector(selectAssetsPicked)\n\n  // Callbacks\n  const handlePickClear = () => {\n    dispatch(assetsActions.pickClear())\n  }\n\n  const handleDeletePicked = () => {\n    dispatch(dialogActions.showConfirmDeleteAssets({assets: assetsPicked}))\n  }\n\n  if (assetsPicked.length === 0) {\n    return null\n  }\n\n  return (\n    <Flex\n      align=\"center\"\n      justify=\"flex-start\"\n      style={{\n        background: hues.gray?.[900].hex,\n        borderBottom: `1px solid ${hues.gray?.[900].hex}`,\n        height: `${PANEL_HEIGHT}px`,\n        position: 'relative',\n        width: '100%'\n      }}\n    >\n      <Flex align=\"center\" paddingX={3}>\n        <Box paddingRight={2}>\n          <Label size={0} style={{color: 'inherit'}}>\n            {assetsPicked.length} {pluralize('asset', assetsPicked.length)} selected\n          </Label>\n        </Box>\n\n        {/* Deselect button */}\n        <Button\n          mode=\"bleed\"\n          onClick={handlePickClear}\n          padding={2}\n          style={{background: 'none', boxShadow: 'none'}}\n          tone=\"default\"\n        >\n          <Label size={0}>Deselect</Label>\n        </Button>\n\n        {/* Delete button */}\n        <Button\n          mode=\"bleed\"\n          onClick={handleDeletePicked}\n          padding={2}\n          style={{background: 'none', boxShadow: 'none'}}\n          tone=\"critical\"\n        >\n          <Label size={0}>Delete</Label>\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default PickedBar\n","import {createSlice} from '@reduxjs/toolkit'\nimport type {SanityAssetDocument, SanityDocument, SanityImageAssetDocument} from '@sanity/client'\n\ntype SelectedReducerState = {\n  assets: (SanityAssetDocument | SanityImageAssetDocument)[]\n  document?: SanityDocument\n  documentAssetIds?: string[]\n}\n\nconst initialState = {\n  assets: [],\n  document: undefined,\n  documentAssetIds: []\n} as SelectedReducerState\n\nconst selectedSlice = createSlice({\n  name: 'selected',\n  initialState,\n  reducers: {}\n})\n\nexport default selectedSlice.reducer\n","import {PayloadAction, createSlice} from '@reduxjs/toolkit'\nimport type {ImageAsset, MyEpic} from '@types'\nimport pluralize from 'pluralize'\nimport {ofType} from 'redux-observable'\nimport {of} from 'rxjs'\nimport {bufferTime, filter, mergeMap} from 'rxjs/operators'\nimport {assetsActions} from '../assets'\nimport {ASSETS_ACTIONS} from '../assets/actions'\nimport {tagsActions} from '../tags'\nimport {uploadsActions} from '../uploads'\n\ntype Notification = {\n  asset?: ImageAsset\n  status?: 'error' | 'warning' | 'success' | 'info'\n  title?: string\n}\n\ntype NotificationsReducerState = {\n  items: Notification[]\n}\n\nconst initialState = {\n  items: []\n} as NotificationsReducerState\n\nconst notificationsSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    add(state, action: PayloadAction<Notification>) {\n      const {asset, status, title} = action.payload\n      state.items.push({\n        asset,\n        status,\n        title\n      })\n    }\n  }\n})\n\n// Epics\n\nexport const notificationsAssetsDeleteCompleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(assetsActions.deleteComplete.match),\n    mergeMap(action => {\n      const {assetIds} = action.payload\n      const deletedCount = assetIds.length\n      return of(\n        notificationsSlice.actions.add({\n          status: 'info',\n          title: `${deletedCount} ${pluralize('asset', deletedCount)} deleted`\n        })\n      )\n    })\n  )\n\nexport const notificationsAssetsDeleteErrorEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(assetsActions.deleteError.match),\n    mergeMap(action => {\n      const {assetIds} = action.payload\n      const count = assetIds.length\n      return of(\n        notificationsSlice.actions.add({\n          status: 'error',\n          title: `Unable to delete ${count} ${pluralize(\n            'asset',\n            count\n          )}. Please review any asset errors and try again.`\n        })\n      )\n    })\n  )\n\nexport const notificationsAssetsUploadCompleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(uploadsActions.checkComplete.match),\n    mergeMap(action => {\n      const {results} = action.payload\n\n      const count = Object.keys(results).length\n      return of(\n        notificationsSlice.actions.add({\n          status: 'info',\n          title: `Uploaded ${count} ${pluralize('asset', count)}`\n        })\n      )\n    })\n  )\n\nexport const notificationsAssetsTagsAddCompleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(ASSETS_ACTIONS.tagsAddComplete.match),\n    mergeMap(action => {\n      const count = action?.payload?.assets?.length\n      return of(\n        notificationsSlice.actions.add({\n          status: 'info',\n          title: `Tag added to ${count} ${pluralize('asset', count)}`\n        })\n      )\n    })\n  )\n\nexport const notificationsAssetsTagsRemoveCompleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(ASSETS_ACTIONS.tagsRemoveComplete.match),\n    mergeMap(action => {\n      const count = action?.payload?.assets?.length\n      return of(\n        notificationsSlice.actions.add({\n          status: 'info',\n          title: `Tag removed from ${count} ${pluralize('asset', count)}`\n        })\n      )\n    })\n  )\n\nexport const notificationsAssetsUpdateCompleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(assetsActions.updateComplete.match),\n    bufferTime(2000),\n    filter(actions => actions.length > 0),\n    mergeMap(actions => {\n      const updatedCount = actions.length\n      return of(\n        notificationsSlice.actions.add({\n          status: 'info',\n          title: `${updatedCount} ${pluralize('asset', updatedCount)} updated`\n        })\n      )\n    })\n  )\n\nexport const notificationsGenericErrorEpic: MyEpic = action$ =>\n  action$.pipe(\n    ofType(\n      assetsActions.fetchError.type,\n      assetsActions.updateError.type,\n      tagsActions.createError.type,\n      tagsActions.deleteError.type,\n      tagsActions.fetchError.type,\n      tagsActions.updateError.type,\n      uploadsActions.uploadError.type\n    ),\n    mergeMap(action => {\n      const error = action.payload?.error\n      return of(\n        notificationsSlice.actions.add({\n          status: 'error',\n          title: `An error occured: ${error.message}`\n        })\n      )\n    })\n  )\n\nexport const notificationsTagCreateCompleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(tagsActions.createComplete.match),\n    mergeMap(() => of(notificationsSlice.actions.add({status: 'info', title: `Tag created`})))\n  )\n\nexport const notificationsTagDeleteCompleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(tagsActions.deleteComplete.match),\n    mergeMap(() => of(notificationsSlice.actions.add({status: 'info', title: `Tag deleted`})))\n  )\n\nexport const notificationsTagUpdateCompleteEpic: MyEpic = action$ =>\n  action$.pipe(\n    filter(tagsActions.updateComplete.match),\n    mergeMap(() => of(notificationsSlice.actions.add({status: 'info', title: `Tag updated`})))\n  )\n\nexport const notificationsActions = notificationsSlice.actions\n\nexport default notificationsSlice.reducer\n","import {combineReducers} from '@reduxjs/toolkit'\nimport {combineEpics} from 'redux-observable'\n\nimport assetsReducer, {\n  assetsDeleteEpic,\n  assetsFetchAfterDeleteAllEpic,\n  assetsFetchEpic,\n  assetsFetchNextPageEpic,\n  assetsFetchPageIndexEpic,\n  assetsListenerCreateQueueEpic,\n  assetsListenerDeleteQueueEpic,\n  assetsListenerUpdateQueueEpic,\n  assetsOrderSetEpic,\n  assetsSearchEpic,\n  assetsSortEpic,\n  assetsTagsAddEpic,\n  assetsTagsRemoveEpic,\n  assetsUnpickEpic,\n  assetsUpdateEpic\n} from './assets'\nimport debugReducer from './debug'\nimport dialogReducer, {\n  dialogClearOnAssetUpdateEpic,\n  dialogTagCreateEpic,\n  dialogTagDeleteEpic\n} from './dialog'\nimport selectedReducer from './selected'\nimport notificationsReducer, {\n  notificationsAssetsDeleteErrorEpic,\n  notificationsAssetsDeleteCompleteEpic,\n  notificationsAssetsTagsAddCompleteEpic,\n  notificationsAssetsTagsRemoveCompleteEpic,\n  notificationsAssetsUpdateCompleteEpic,\n  notificationsGenericErrorEpic,\n  notificationsTagCreateCompleteEpic,\n  notificationsTagDeleteCompleteEpic,\n  notificationsTagUpdateCompleteEpic\n} from './notifications'\nimport searchReducer, {searchFacetTagUpdateEpic} from './search'\nimport tagsReducer, {\n  tagsCreateEpic,\n  tagsDeleteEpic,\n  tagsFetchEpic,\n  tagsListenerCreateQueueEpic,\n  tagsListenerDeleteQueueEpic,\n  tagsListenerUpdateQueueEpic,\n  tagsSortEpic,\n  tagsUpdateEpic\n} from './tags'\nimport uploadsReducer, {\n  uploadsAssetStartEpic,\n  uploadsAssetUploadEpic,\n  uploadsCheckRequestEpic,\n  uploadsCompleteQueueEpic\n} from './uploads'\n\nexport const rootEpic = combineEpics(\n  assetsDeleteEpic,\n  assetsFetchEpic,\n  assetsFetchAfterDeleteAllEpic,\n  assetsFetchNextPageEpic,\n  assetsFetchPageIndexEpic,\n  assetsListenerCreateQueueEpic,\n  assetsListenerDeleteQueueEpic,\n  assetsListenerUpdateQueueEpic,\n  assetsOrderSetEpic,\n  assetsSearchEpic,\n  assetsSortEpic,\n  assetsTagsAddEpic,\n  assetsTagsRemoveEpic,\n  assetsUnpickEpic,\n  assetsUpdateEpic,\n  dialogClearOnAssetUpdateEpic,\n  dialogTagCreateEpic,\n  dialogTagDeleteEpic,\n  notificationsAssetsDeleteErrorEpic,\n  notificationsAssetsDeleteCompleteEpic,\n  notificationsAssetsTagsAddCompleteEpic,\n  notificationsAssetsTagsRemoveCompleteEpic,\n  notificationsAssetsUpdateCompleteEpic,\n  notificationsGenericErrorEpic,\n  notificationsTagCreateCompleteEpic,\n  notificationsTagDeleteCompleteEpic,\n  notificationsTagUpdateCompleteEpic,\n  searchFacetTagUpdateEpic,\n  tagsCreateEpic,\n  tagsDeleteEpic,\n  tagsFetchEpic,\n  tagsListenerCreateQueueEpic,\n  tagsListenerDeleteQueueEpic,\n  tagsListenerUpdateQueueEpic,\n  tagsSortEpic,\n  tagsUpdateEpic,\n  uploadsAssetStartEpic,\n  uploadsAssetUploadEpic,\n  uploadsCheckRequestEpic,\n  uploadsCompleteQueueEpic\n)\n\nconst reducers = combineReducers({\n  assets: assetsReducer,\n  debug: debugReducer,\n  dialog: dialogReducer,\n  notifications: notificationsReducer,\n  search: searchReducer,\n  selected: selectedReducer,\n  tags: tagsReducer,\n  uploads: uploadsReducer\n})\nexport const rootReducer = reducers\n","import type {SanityDocument} from '@sanity/client'\n\nconst isPlainObject = (value: any) =>\n  value !== null && typeof value === 'object' && !Array.isArray(value)\n\n// Recursively search node for any linked asset ids (`asset._type === 'reference'`)\nconst getAssetIds = (node: Record<string, any>, acc: string[] = []) => {\n  if (Array.isArray(node)) {\n    node.forEach(v => {\n      getAssetIds(v, acc)\n    })\n  }\n\n  if (isPlainObject(node)) {\n    if (node?.asset?._type === 'reference' && node?.asset?._ref) {\n      acc.push(node.asset._ref)\n    }\n\n    Object.values(node).forEach(val => {\n      getAssetIds(val, acc)\n    })\n  }\n\n  return acc\n}\n\n// Retrieve all linked asset ids from a Sanity document\nconst getDocumentAssetIds = (document: SanityDocument): string[] => {\n  const assetIds = getAssetIds(document)\n\n  // Sort and dedupe\n  return [...new Set(assetIds.sort())]\n}\n\nexport default getDocumentAssetIds\n","import {AnyAction, configureStore, Store} from '@reduxjs/toolkit'\nimport type {SanityClient} from '@sanity/client'\nimport type {AssetSourceComponentProps, SanityDocument} from 'sanity'\nimport React, {Component, ReactNode} from 'react'\nimport {Provider} from 'react-redux'\nimport {createEpicMiddleware} from 'redux-observable'\nimport {rootEpic, rootReducer} from '../../modules'\nimport {initialState as assetsInitialState} from '../../modules/assets'\n// import {assetsActions} from '../../modules/assets'\n// import {searchActions} from '../../modules/search'\n// import {uploadsActions} from '../../modules/uploads'\nimport {RootReducerState} from '../../modules/types'\nimport getDocumentAssetIds from '../../utils/getDocumentAssetIds'\n\ntype Props = {\n  assetType?: AssetSourceComponentProps['assetType']\n  children?: ReactNode\n  client: SanityClient\n  document?: SanityDocument\n  selectedAssets?: AssetSourceComponentProps['selectedAssets']\n}\n\nclass ReduxProvider extends Component<Props> {\n  store: Store\n\n  constructor(props: Props) {\n    super(props)\n\n    // Initialize redux store + middleware\n    const epicMiddleware = createEpicMiddleware<AnyAction, AnyAction, RootReducerState>({\n      dependencies: {\n        client: props.client // inject sanity client as a dependency to all epics\n      }\n    })\n    this.store = configureStore({\n      reducer: rootReducer,\n      middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n          /*\n          serializableCheck: {\n            ignoredActions: [\n              assetsActions.deleteError.type,\n              uploadsActions.uploadRequest.type,\n              uploadsActions.uploadStart.type,\n            ]\n          },\n          */\n          // TODO: remove once we're no longer storing non-serializable data in the store\n          serializableCheck: false,\n          thunk: false\n        }).prepend(epicMiddleware),\n      devTools: true,\n      preloadedState: {\n        assets: {\n          ...assetsInitialState,\n          assetTypes: props?.assetType ? [props.assetType] : ['file', 'image']\n        },\n        selected: {\n          assets: props.selectedAssets || [],\n          document: props.document,\n          documentAssetIds: props.document ? getDocumentAssetIds(props.document) : []\n        }\n      }\n    })\n    epicMiddleware.run(rootEpic)\n  }\n\n  render() {\n    // @ts-ignore\n    return <Provider store={this.store}>{this.props.children}</Provider>\n  }\n}\n\nexport default ReduxProvider\n","import {hues} from '@sanity/color'\nimport {Box} from '@sanity/ui'\nimport React from 'react'\nimport {TAGS_PANEL_WIDTH} from '../../constants'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport TagView from '../TagView'\n\nconst TagsPanel = () => {\n  const tagsPanelVisible = useTypedSelector(state => state.tags.panelVisible)\n\n  if (!tagsPanelVisible) {\n    return null\n  }\n\n  return (\n    <Box\n      style={{\n        position: 'relative',\n        width: TAGS_PANEL_WIDTH\n      }}\n    >\n      <Box\n        className=\"media__custom-scrollbar\"\n        style={{\n          borderLeft: `1px solid ${hues.gray?.[900].hex}`,\n          height: '100%',\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          position: 'absolute',\n          right: 0,\n          top: 0,\n          width: '100%'\n        }}\n      >\n        <TagView />\n      </Box>\n    </Box>\n  )\n}\n\nexport default TagsPanel\n","import {white} from '@sanity/color'\nimport {Flex, Text} from '@sanity/ui'\nimport React, {ReactNode} from 'react'\nimport {DropEvent, useDropzone} from 'react-dropzone'\nimport {useDispatch} from 'react-redux'\nimport styled from 'styled-components'\nimport {useAssetSourceActions} from '../../contexts/AssetSourceDispatchContext'\nimport {DropzoneDispatchProvider} from '../../contexts/DropzoneDispatchContext'\nimport useTypedSelector from '../../hooks/useTypedSelector'\nimport {notificationsActions} from '../../modules/notifications'\nimport {uploadsActions} from '../../modules/uploads'\n\ntype Props = {\n  children: ReactNode\n}\n\nconst UploadContainer = styled.div`\n  color: white;\n  height: 100%;\n  min-height: 100%;\n  right: 0;\n  top: 0;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst DragActiveContainer = styled.div`\n  align-items: center;\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  z-index: 3;\n`\n\n// Iterate through all files and only return non-folders / packages.\n// We check for files by reading the first byte of the file\nasync function filterFiles(fileList: FileList) {\n  const files = Array.from(fileList)\n\n  const filteredFiles: File[] = []\n\n  for (const file of files) {\n    try {\n      await file.slice(0, 1).arrayBuffer()\n      filteredFiles.push(file)\n    } catch (err) {\n      // do nothing: file is a package or folder\n    }\n  }\n\n  return filteredFiles\n}\n\nconst UploadDropzone = (props: Props) => {\n  const {children} = props\n\n  const {onSelect} = useAssetSourceActions()\n\n  // Redux\n  const dispatch = useDispatch()\n  const assetTypes = useTypedSelector(state => state.assets.assetTypes)\n\n  const isImageAssetType = assetTypes.length === 1 && assetTypes[0] === 'image'\n\n  // Callbacks\n  const handleDrop = async (acceptedFiles: File[]) => {\n    acceptedFiles.forEach(file =>\n      dispatch(\n        uploadsActions.uploadRequest({\n          file,\n          forceAsAssetType: assetTypes.length === 1 ? assetTypes[0] : undefined\n        })\n      )\n    )\n  }\n\n  // Use custom file selector to obtain files on file drop + change events (excluding folders and packages)\n  const handleFileGetter = async (event: DropEvent) => {\n    let fileList: FileList | undefined\n    if (event.type === 'drop' && 'dataTransfer' in event) {\n      fileList = event?.dataTransfer?.files\n    }\n    if (event.type === 'change') {\n      const target = event?.target as HTMLInputElement\n      if (target?.files) {\n        fileList = target.files\n      }\n    }\n\n    if (!fileList) {\n      return []\n    }\n\n    // Filter out non-folders / packages\n    const files: File[] = await filterFiles(fileList)\n\n    // Dispatch error if some files have been filtered out\n    if (fileList?.length !== files.length) {\n      dispatch(\n        notificationsActions.add({\n          status: 'error',\n          title: `Unable to upload some items (folders and packages aren't supported)`\n        })\n      )\n    }\n\n    return files\n  }\n\n  // Limit file picking to only images if we're specifically within an image selection context (e.g. picking from image fields)\n  const {getRootProps, getInputProps, isDragActive, open} = useDropzone({\n    accept: isImageAssetType ? 'image/*' : '',\n    getFilesFromEvent: handleFileGetter,\n    noClick: true,\n    // HACK: Disable drag and drop functionality when in a selecting context\n    // (This is currently due to Sanity's native image input taking precedence with drag and drop)\n    noDrag: !!onSelect,\n    onDrop: handleDrop\n  })\n\n  return (\n    <DropzoneDispatchProvider open={open}>\n      <UploadContainer {...getRootProps()}>\n        <input {...getInputProps()} />\n\n        {isDragActive && (\n          <DragActiveContainer>\n            <Flex direction=\"column\" justify=\"center\" style={{color: white.hex}}>\n              <Text size={3} style={{color: 'inherit'}}>\n                Drop files to upload\n              </Text>\n            </Flex>\n          </DragActiveContainer>\n        )}\n\n        {children}\n      </UploadContainer>\n    </DropzoneDispatchProvider>\n  )\n}\n\nexport default UploadDropzone\n","import type {MutationEvent} from '@sanity/client'\nimport {Card, Flex, studioTheme, ThemeProvider, ToastProvider} from '@sanity/ui'\nimport {Asset, Tag} from '@types'\nimport groq from 'groq'\nimport React, {useEffect} from 'react'\nimport {useDispatch} from 'react-redux'\nimport type {AssetSourceComponentProps, SanityDocument} from 'sanity'\nimport {TAG_DOCUMENT_NAME} from '../../constants'\nimport {AssetBrowserDispatchProvider} from '../../contexts/AssetSourceDispatchContext'\nimport useVersionedClient from '../../hooks/useVersionedClient'\nimport {assetsActions} from '../../modules/assets'\nimport {tagsActions} from '../../modules/tags'\nimport GlobalStyle from '../../styled/GlobalStyles'\nimport Controls from '../Controls'\nimport DebugControls from '../DebugControls'\nimport Dialogs from '../Dialogs'\nimport Header from '../Header'\nimport Items from '../Items'\nimport Notifications from '../Notifications'\nimport PickedBar from '../PickedBar'\nimport ReduxProvider from '../ReduxProvider'\nimport TagsPanel from '../TagsPanel'\nimport UploadDropzone from '../UploadDropzone'\n\ntype Props = {\n  assetType?: AssetSourceComponentProps['assetType']\n  document?: SanityDocument\n  onClose?: AssetSourceComponentProps['onClose']\n  onSelect?: AssetSourceComponentProps['onSelect']\n  selectedAssets?: AssetSourceComponentProps['selectedAssets']\n}\n\nconst BrowserContent = ({onClose}: {onClose?: AssetSourceComponentProps['onClose']}) => {\n  const client = useVersionedClient()\n\n  // Redux\n  const dispatch = useDispatch()\n\n  // Callbacks\n  const handleAssetUpdate = (update: MutationEvent) => {\n    const {documentId, result, transition} = update\n\n    if (transition === 'appear') {\n      dispatch(assetsActions.listenerCreateQueue({asset: result as Asset}))\n    }\n\n    if (transition === 'disappear') {\n      dispatch(assetsActions.listenerDeleteQueue({assetId: documentId}))\n    }\n\n    if (transition === 'update') {\n      dispatch(assetsActions.listenerUpdateQueue({asset: result as Asset}))\n    }\n  }\n\n  const handleTagUpdate = (update: MutationEvent) => {\n    const {documentId, result, transition} = update\n\n    if (transition === 'appear') {\n      dispatch(tagsActions.listenerCreateQueue({tag: result as Tag}))\n    }\n\n    if (transition === 'disappear') {\n      dispatch(tagsActions.listenerDeleteQueue({tagId: documentId}))\n    }\n\n    if (transition === 'update') {\n      dispatch(tagsActions.listenerUpdateQueue({tag: result as Tag}))\n    }\n  }\n\n  // Effects\n  useEffect(() => {\n    // Fetch assets: first page\n    dispatch(assetsActions.loadPageIndex({pageIndex: 0}))\n\n    // Fetch all tags\n    dispatch(tagsActions.fetchRequest())\n\n    // Listen for asset and tag changes in published documents.\n    // Remember that Sanity listeners ignore joins, order clauses and projections!\n    // Also note that changes to the selected document (if present) will automatically re-load the media plugin\n    // due to the desk pane re-rendering.\n    const subscriptionAsset = client\n      .listen(\n        groq`*[_type in [\"sanity.fileAsset\", \"sanity.imageAsset\"] && !(_id in path(\"drafts.**\"))]`\n      )\n      .subscribe(handleAssetUpdate)\n\n    const subscriptionTag = client\n      .listen(groq`*[_type == \"${TAG_DOCUMENT_NAME}\" && !(_id in path(\"drafts.**\"))]`)\n      .subscribe(handleTagUpdate)\n\n    return () => {\n      subscriptionAsset?.unsubscribe()\n      subscriptionTag?.unsubscribe()\n    }\n  }, [])\n\n  return (\n    <UploadDropzone>\n      <Dialogs />\n      <Notifications />\n\n      <Card display=\"flex\" height=\"fill\">\n        <Flex direction=\"column\" flex={1}>\n          {/* Header */}\n          <Header onClose={onClose} />\n\n          {/* Browser Controls */}\n          <Controls />\n\n          <Flex flex={1}>\n            <Flex align=\"flex-end\" direction=\"column\" flex={1} style={{position: 'relative'}}>\n              <PickedBar />\n              <Items />\n            </Flex>\n            <TagsPanel />\n          </Flex>\n\n          {/* Debug */}\n          <DebugControls />\n        </Flex>\n      </Card>\n    </UploadDropzone>\n  )\n}\n\nconst Browser = (props: Props) => {\n  const client = useVersionedClient()\n\n  return (\n    <ReduxProvider\n      assetType={props?.assetType}\n      client={client}\n      document={props?.document}\n      selectedAssets={props?.selectedAssets}\n    >\n      <ThemeProvider scheme=\"dark\" theme={studioTheme}>\n        <ToastProvider>\n          <AssetBrowserDispatchProvider onSelect={props?.onSelect}>\n            <GlobalStyle />\n\n            <BrowserContent onClose={props?.onClose} />\n          </AssetBrowserDispatchProvider>\n        </ToastProvider>\n      </ThemeProvider>\n    </ReduxProvider>\n  )\n}\n\nexport default Browser\n","import {Box, Portal, PortalProvider, useLayer} from '@sanity/ui'\nimport React, {SyntheticEvent, useEffect, useState} from 'react'\nimport {AssetSourceComponentProps, SanityDocument, useFormValue} from 'sanity'\nimport useKeyPress from '../../hooks/useKeyPress'\nimport Browser from '../Browser'\n\nconst FormBuilderTool = (props: AssetSourceComponentProps) => {\n  const {onClose} = props\n\n  const portalElement = useRootPortalElement()\n\n  // Get current Sanity document\n  const currentDocument = useFormValue([]) as SanityDocument\n\n  // Close on escape key press\n  useKeyPress('escape', onClose)\n\n  // Stop propagation and prevent document mouse events from firing.\n  // This is a bit of a hack to make this work with `editModal = 'popover'` and prevent Sanity's <Popover /> component from\n  // prematurely closing, as it attaches events on `document` to detect outside clicks.\n  const handleStopPropagation = (event: SyntheticEvent) => {\n    event.nativeEvent.stopImmediatePropagation()\n    event.stopPropagation()\n  }\n\n  const {zIndex} = useLayer()\n\n  return (\n    <PortalProvider element={portalElement}>\n      <Portal>\n        <Box\n          onDragEnter={handleStopPropagation}\n          onDragLeave={handleStopPropagation}\n          onDragOver={handleStopPropagation}\n          onDrop={handleStopPropagation}\n          onMouseUp={handleStopPropagation}\n          style={{\n            bottom: 0,\n            height: 'auto',\n            left: 0,\n            position: 'fixed',\n            top: 0,\n            width: '100%',\n            zIndex\n          }}\n        >\n          <Browser document={currentDocument} {...props} />\n        </Box>\n      </Portal>\n    </PortalProvider>\n  )\n}\n\nexport default FormBuilderTool\n\nconst useRootPortalElement = () => {\n  const [container] = useState(() => document.createElement('div'))\n\n  useEffect(() => {\n    container.classList.add('media-portal')\n    document.body.appendChild(container)\n    return () => {\n      document.body.removeChild(container)\n    }\n  }, [])\n\n  return container\n}\n","import {TAG_DOCUMENT_NAME} from '../constants'\nimport TagIcon from '../components/TagIcon'\n\nexport default {\n  title: 'Media Tag',\n  icon: TagIcon,\n  name: TAG_DOCUMENT_NAME,\n  type: 'document',\n  fields: [\n    {\n      title: 'Name',\n      name: 'name',\n      type: 'slug'\n    }\n  ],\n  preview: {\n    select: {\n      name: 'name'\n    },\n    prepare(selection: any) {\n      const {name} = selection\n      return {\n        media: TagIcon,\n        title: name?.current\n      }\n    }\n  }\n}\n","import {definePlugin, Tool as SanityTool} from 'sanity'\nimport {ImageIcon} from '@sanity/icons'\nimport type {AssetSource} from 'sanity'\nimport FormBuilderTool from './components/FormBuilderTool'\nimport Tool from './components/Tool'\nimport mediaTag from './schemas/tag'\n\nconst plugin = {\n  icon: ImageIcon,\n  name: 'media',\n  title: 'Media'\n}\n\nexport const mediaAssetSource: AssetSource = {\n  ...plugin,\n  component: FormBuilderTool\n}\n\nconst tool = {\n  ...plugin,\n  component: Tool\n} as SanityTool\n\nexport const media = definePlugin({\n  name: 'media',\n  form: {\n    file: {\n      assetSources: prev => {\n        return [...prev, mediaAssetSource]\n      }\n    },\n    image: {\n      assetSources: prev => {\n        return [...prev, mediaAssetSource]\n      }\n    }\n  },\n  schema: {\n    types: [mediaTag]\n  },\n  tools: prev => {\n    return [...prev, tool]\n  }\n})\n","import {Flex} from '@sanity/ui'\nimport React from 'react'\nimport Browser from '../Browser'\n\nconst Tool = () => {\n  return (\n    <Flex direction=\"column\" height=\"fill\" flex={1}>\n      <Browser />\n    </Flex>\n  )\n}\n\nexport default Tool\n"],"names":["useKeyPress","hotkey","onPress","keyPressed","useRef","downHandler","e","isHotkey","current","upHandler","useEffect","window","addEventListener","removeEventListener","divider","type","inputs","altText","assetTypes","field","name","operatorType","operatorTypes","title","value","description","fileName","height","inCurrentDocument","options","groq","_templateObject","_taggedTemplateLiteral","_templateObject2","selectOnly","inUse","_templateObject3","_templateObject4","isOpaque","orientation","size","modifier","modifiers","fieldModifier","fieldName","tag","width","operators","doesNotInclude","fn","concat","label","doesNotReference","_field","empty","_value","hideInput","equalTo","greaterThan","greaterThanOrEqualTo","includes","is","isNot","lessThan","lessThanOrEqualTo","notEmpty","references","ORDER_OPTIONS","direction","FACETS","GRID_TEMPLATE_COLUMNS","AssetSourceDispatchContext","createContext","AssetBrowserDispatchProvider","props","children","onSelect","contextValue","jsx","Provider","useAssetSourceActions","context","useContext","Error","useVersionedClient","useClient","apiVersion","ORDER_DICTIONARY","_createdAt","asc","desc","_updatedAt","mimeType","originalFilename","getOrderTitle","debugThrottle","throttled","source","iif","pipe","delay","mergeMap","v","Math","random","throwError","message","statusCode","of","constructFilter","_ref","searchFacets","searchQuery","documentAssetTypes","map","baseFilter","JSON","stringify","searchFacetFragments","reduce","acc","facet","_a","operator","currentModifier","find","m","facetField","fragment","push","currentOptionValue","l","_templateObject6","trim","join","checkTagName","client","from","fetch","_templateObject7","existingTagCount","getTagSelectOptions","tags","val","_id","ASSETS_ACTIONS","tagsAddComplete","createAction","_ref2","assets","payload","tagsAddError","_ref3","error","tagsAddRequest","_ref4","tagsRemoveComplete","_ref5","tagsRemoveError","_ref6","tagsRemoveRequest","_ref7","DIALOG_ACTIONS","showTagCreate","showTagEdit","_ref8","tagId","tagsSlice","createSlice","initialState","allIds","byIds","creating","creatingError","fetchCount","fetching","fetchingError","panelVisible","extraReducers","builder","addCase","state","action","addMatcher","updating","reducers","createComplete","_type","picked","createError","createRequest","_action","deleteComplete","deleteIndex","indexOf","splice","deleteError","deleteRequest","_b","Object","keys","forEach","key","fetchComplete","length","fetchError","fetchRequest","reducer","prepare","query","_templateObject8","listenerCreateQueue","_state","listenerCreateQueueComplete","listenerDeleteQueue","listenerDeleteQueueComplete","tagIds","listenerUpdateQueue","listenerUpdateQueueComplete","panelVisibleSet","sort","a","b","tagA","tagB","updateComplete","updateError","updateRequest","selectTagsByIds","selectTags","createSelector","id","selectTagById","tagsActions","actions","tagsReducer","searchSlice","facets","facetsAdd","facetsClear","facetsRemove","filter","facetName","facetsUpdate","index","querySet","selectHasSearchFacetTag","search","selectIsSearchFacetTag","tagsByIds","_c","searchFacet","searchFacetTagId","searchActions","searchReducer","UPLOADS_ACTIONS","uploadComplete","_ref18","asset","defaultOrder","lastPicked","order","pageIndex","pageSize","view","assetsSlice","clear","assetIds","floor","_d","itemErrors","response","body","items","item","_ref19","params","queryFilter","selector","_templateObject10","_templateObject11","insertUploads","results","entries","_ref20","hash","assetId","loadNextPage","loadPageIndex","orderSet","pick","pickAll","pickClear","values","pickRange","startIndex","findIndex","startId","endIndex","endId","indices","slice","viewSet","selectAssetById","selectAssets","selectAssetsLength","selectAssetsPicked","selectAssetsPickedLength","assetsPicked","assetsActions","assetsReducer","customScrollbar","css","_templateObject15","hues","gray","hex","GlobalStyle","createGlobalStyle","useTypedSelector","useSelector","dialogSlice","inlineTagCreate","lastCreatedTag","inlineTagRemove","lastRemovedTagIds","remove","showConfirmAssetsTagAdd","closeDialogId","suffix","pluralize","confirmCallbackAction","confirmText","headerTitle","tone","showConfirmAssetsTagRemove","showConfirmDeleteAssets","assetItem","showConfirmDeleteTag","showAssetEdit","showSearchFacets","showTags","dialogActions","dialogReducer","ButtonViewGroup","dispatch","useDispatch","jsxs","Inline","space","style","whiteSpace","Button","fontSize","icon","ThLargeIcon","mode","onClick","borderBottomRightRadius","borderTopRightRadius","ThListIcon","borderBottomLeftRadius","borderTopLeftRadius","OrderSelect","MenuButton","button","SortIcon","iconRight","SelectIcon","padding","text","menu","Menu","MenuItem","disabled","MenuDivider","Progress","loading","animationDuration","isFinished","progress","useNProgress","isAnimating","Box","opacity","transition","background","position","left","top","Container","styled","_templateObject17","theme","sanity","radius","SearchFacet","Flex","align","paddingBottom","paddingLeft","paddingRight","paddingTop","Label","marginLeft","paddingX","Text","muted","CloseIcon","TextInputNumber","onValueChange","remainingProps","_excluded","TextInput","_objectSpread","onChange","target","test","parseInt","SearchFacetNumber","selectedModifier","selectedOperatorType","handleOperatorItemClick","marginX","maxWidth","handleModifierClick","SearchFacetSelect","selectedItem","marginRight","handleListItemClick","option","SearchFacetString","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","themeDarkPrimaryBlue","color","dark","primary","spot","blue","themeDarkDefaultBaseBg","default","base","bg","themeRadius","studioTheme","themeSpace","themeTextSizes","fonts","sizes","reactSelectStyles","control","styles","_ref35","isDisabled","isFocused","boxShadow","backgroundColor","white","border","borderRadius","minHeight","outline","input","hovered","fontFamily","family","menuList","noOptionsMessage","lineHeight","_ref36","black","placeholder","singleValue","valueContainer","margin","Option","components","paddingY","textOverflow","reactSelectComponents","ClearIndicator","transform","DropdownIndicator","IndicatorSeparator","Card","shadow","MenuList","Array","isArray","OPTION_HEIGHT","Virtuoso","className","itemContent","totalCount","NoOptionsMessage","SingleValue","SearchFacetTags","tagsFetching","allTagOptions","Select","instanceId","isClearable","isSearchable","handleChange","StackContainer","_templateObject18","SearchFacets","layout","Items","marginBottom","SearchFacetsControl","isTool","selected","document","filteredFacets","assetType","previousFacet","hasRemainingSearchFacets","renderMenuFacets","level","Fragment","MenuGroup","isPresent","AddCircleIcon","placement","portal","TagIcon","fill","stroke","strokeWidth","viewBox","d","strokeLinecap","strokeLinejoin","TextInputSearch","SearchIcon","currentTarget","justify","cursor","right","zIndex","Controls","tagsPanelVisible","mediaIndex","useMediaIndex","borderBottom","flex","alignItems","justifyContent","minWidth","display","debugSlice","badConnection","enabled","setBadConnection","toggleEnabled","debugActions","debugReducer","DebugControls","debug","debugEnabled","bottom","pointerEvents","PlugIcon","Tooltip","content","fallbackPlacements","Switch","checked","imageDprUrl","dpi","devicePixelRatio","round","imgH","max","imgW","urlParams","URLSearchParams","append","toString","url","sanitizeFormData","formData","constructor","isFileAsset","isImageAsset","getAssetResolution","metadata","dimensions","ButtonAssetCopy","refPopoverTimeout","popoverVisible","setPopoverVisible","useState","clearTimeout","Popover","open","ClipboardIcon","copy","setTimeout","Row","_ref37","textAlign","AssetMetadata","exif","marginTop","Stack","filesize","extension","toUpperCase","marginY","ISO","FNumber","FocalLength","ExposureTime","DateTimeOriginal","format","Date","DownloadIcon","location","href","Dialog","SanityDialog","DocumentList","documentStore","useDocumentStore","WithReferringDocuments","_ref38","isLoading","referringDocuments","ReferringDocuments","schema","useSchema","draftIds","doc","startsWith","filteredDocuments","ReferringDocument","schemaType","get","useIntentLink","intent","SanityPreview","_templateObject19","FileIcon","ReactFileIcon","defaultStyles","FileAssetPreview","controls","src","StyledErrorOutlineIcon","ErrorOutlineIcon","_ref39","red","FormFieldInputLabel","as","htmlFor","weight","FormFieldInputText","forwardRef","ref","flexGrow","autoComplete","autoFocus","defaultValue","themeDarkPrimaryGray","_ref40","indicatorsContainer","_ref41","multiValue","_ref42","multiValueRemove","_ref43","data","__isNew__","AddIcon","ChevronDownIcon","MultiValueLabel","MultiValueRemove","FormFieldInputTags","onCreateTag","Controller","render","_ref44","onBlur","controllerValue","CreatableSelect","isMulti","onCreateOption","FormFieldInputTextarea","rows","TextArea","FormSubmitButton","isValid","lastUpdated","Image","img","showCheckerboard","formSchema","yup","object","shape","string","required","getFilenameWithoutExtension","extensionIndex","toLowerCase","lastIndexOf","DialogAssetEdit","dialog","String","isMounted","assetSnapshot","setAssetSnapshot","tabSection","setTabSection","currentAsset","assetTagOptions","opt","media","tagItem","generateDefaultValues","currentTagLabels","formState","errors","isDirty","getValues","handleSubmit","register","reset","setValue","useForm","defaultValues","resolver","yupResolver","formUpdating","handleDelete","handleAssetUpdate","update","result","onSubmit","async","sanitizedFormData","_weak","subscriptionAsset","listen","_templateObject22","subscribe","unsubscribe","dirtyFields","updatedTags","shouldDirty","Footer","footer","header","onClose","TabList","Tab","tabIndex","TabPanel","hidden","tagName","FormFieldInputFilename","aspectRatio","draggable","DialogConfirm","handleClose","handleConfirm","Header","WarningOutlineIcon","DialogSearchFacets","useCallback","DialogTagCreate","setError","DialogTagEdit","tagSnapshot","setTagSnapshot","currentTag","handleTagUpdate","_templateObject23","TagContainer","_templateObject24","ButtonContainer","_templateObject25","TagButton","tooltip","Tag","hasSearchFacetTag","isSearchFacetTag","userSelect","flexShrink","EditIcon","ArrowUpIcon","ArrowDownIcon","TrashIcon","VirtualRow","memo","_ref45","isScrolling","TagsVirtualized","setIsScrolling","pickedTagIds","assetTagIds","pickedTagIdsUnique","Set","tagIdsSegmented","tagIsInEveryAsset","every","appliedToAll","appliedToSome","tagsAppliedToAll","tagsAppliedToSome","tagsUnused","computeItemKey","overflowX","TagViewHeader","allowCreate","light","tagsCreating","ComposeIcon","TagView","numPickedAssets","hasTags","hasPicked","DialogTags","Dialogs","currentDialogs","renderDialogs","dialogs","childDialogs","DropzoneDispatchContext","DropzoneDispatchProvider","useDropzoneActions","selectedDocument","Icon","symbol","textTransform","UploadIcon","selectCombinedItems","uploads","uploadIds","assetItems","CardWrapper","_templateObject26","CardContainer","_templateObject27","orange","_templateObject28","ContextActionContainer","_templateObject29","StyledWarningOutlineIcon","WarningFilledIcon","_ref46","shiftPressed","opacityContainer","opacityPreview","stopPropagation","kind","CheckmarkCircleIcon","Spinner","Checkbox","readOnly","generatePreviewBlobUrl","imageEl","file","Promise","resolve","blobUrlLarge","URL","createObjectURL","onload","revokeObjectURL","createImageEl","blob","imageAspect","canvas","createElement","ctx","getContext","drawImage","toBlob","err","console","warn","array","createThrottler","concurrency","currentSubscriptions","pendingObservables","ready$","Subject","request","observable","Observable","observer","scheduleAndWait$","subscription","next","shift","asObservable","first","obs","hexFromBuffer","buffer","prototype","call","Uint8Array","x","hashFile$","crypto","subtle","FileReader","subscriber","reader","complete","onerror","readAsArrayBuffer","abort","readFile$","digest","arrayBuffer","uploadAsset$","func","throttler","arguments","withMaxConcurrency","documentType","fetchExisting$","existingAsset","upload","extract","preserveFilename","event","uploadsSlice","sha1hash","status","checkRequest","checkComplete","blobUrl","objectUrl","previewReady","uploadCancel","uploadError","uploadRequest","uploadProgress","uploadHash","percent","uploadStart","uploadItem","selectUploadById","uploadId","uploadsActions","uploadsReducer","_templateObject31","CardUpload","fileSize","percentLoaded","isComplete","isUploading","isQueued","transformOrigin","VirtualCell","_ref51","CardAsset","ItemContainer","div","CARD_HEIGHT","ListContainer","CARD_WIDTH","AssetGridVirtualized","onLoadMore","selectedAssets","selectedIds","VirtuosoGrid","Item","List","endReached","overscan","TableHeaderItem","isActive","ChevronUpIcon","_templateObject34","TableHeader","itemsLength","allSelected","Grid","gridColumnGap","gridTemplateColumns","letterSpacing","visibility","ContainerGrid","_templateObject36","_templateObject37","StyledWarningIcon","_ref52","opacityCell","gridRowGap","gridTemplateRows","gridColumn","gridRowStart","gridRowEnd","gridRow","formatRelative","TableRowUpload","_ref53","TableRowAsset","AssetTableVirtualized","GroupedVirtuoso","groupCounts","groupContent","combinedItems","breakpointIndex","mediaQueryLists","container","matchMedia","getBreakpointIndex","mql","matches","handleBreakpoint","addListener","_err","removeListener","useBreakpointIndex","hasFetchedOnce","hasItems","handleLoadMoreItems","isEmpty","Notifications","notifications","toast","useToast","lastItem","closable","PickedBar","selectedReducer","documentAssetIds","notificationsSlice","add","notificationsActions","notificationsReducer","rootEpic","combineEpics","action$","_state$","match","delete","catchError","state$","withLatestFrom","switchMap","_ref23","_ref26","nextPageIndex","_ref25","_ref24","start","end","documentId","constructedFilter","_templateObject14","bufferTime","ofType","debounceTime","_ref29","_ref30","pickedAssets","pickedAssetsFiltered","t","filterAssetWithoutTag","transaction","tx","pickedAsset","patch","_ref27","setIfMissing","_key","nanoid","patchOperationTagAppend","commit","_ref31","_ref32","_ref28","ifRevisionId","_rev","unset","patchOperationTagUnset","_ref34","set","updatedAsset","dialogId","count","deletedCount","updatedCount","_ref17","currentSearchFacetTag","_ref10","create","_ref12","_templateObject9","ifRevisionID","_ref14","_ref16","updatedTag","merge","generatePreviewBlobUrl$","takeUntil","stage","_ref48","forceAsAssetType","_ref50","documentIds","_templateObject30","resultHashes","checkedResults","rootReducer","combineReducers","isPlainObject","getAssetIds","node","getDocumentAssetIds","ReduxProvider","Component","super","epicMiddleware","createEpicMiddleware","dependencies","this","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","thunk","prepend","devTools","preloadedState","assetsInitialState","run","TagsPanel","borderLeft","overflowY","UploadContainer","_templateObject38","DragActiveContainer","_templateObject39","UploadDropzone","isImageAssetType","getRootProps","getInputProps","isDragActive","useDropzone","accept","getFilesFromEvent","fileList","dataTransfer","files","filteredFiles","filterFiles","noClick","noDrag","onDrop","acceptedFiles","BrowserContent","_ref54","_templateObject40","subscriptionTag","Browser","ThemeProvider","scheme","ToastProvider","useRootPortalElement","classList","appendChild","removeChild","mediaTag","fields","preview","select","selection","plugin","ImageIcon","mediaAssetSource","component","portalElement","currentDocument","useFormValue","handleStopPropagation","nativeEvent","stopImmediatePropagation","useLayer","PortalProvider","element","Portal","onDragEnter","onDragLeave","onDragOver","onMouseUp","tool","definePlugin","form","assetSources","prev","image","types","tools"],"mappings":"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"}