{"version":3,"file":"sanity-logos.js","sources":["../src/groqLogo.tsx","../src/groqMonogram.tsx","../src/sanityLogo.tsx","../src/sanityMonogram.tsx"],"sourcesContent":["import {hues} from '@sanity/color'\nimport {forwardRef} from 'react'\n\n/**\n * @public\n */\nexport const GroqLogo = forwardRef(function GroqLogo(\n  props: React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>\n) {\n  return (\n    <svg\n      data-sanity-icon=\"groq-logo\"\n      height=\"1em\"\n      viewBox=\"0 0 304 64\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={ref}\n    >\n      <path d=\"M32 0L0 32H32V0Z\" fill={hues.magenta[400].hex} />\n      <path d=\"M32 32H0L32 64V32Z\" fill={hues.green[300].hex} />\n      <path d=\"M64 32H32V64L64 32Z\" fill={hues.purple[300].hex} />\n      <path d=\"M112 0L80 32H112V0Z\" fill={hues.green[300].hex} />\n      <path d=\"M112 0H80V32L112 0Z\" fill={hues.purple[300].hex} />\n      <path d=\"M112 32H80L112 64V32Z\" fill={hues.yellow[200].hex} />\n      <path d=\"M144 64L112 32V64H144Z\" fill={hues.blue[300].hex} />\n      <path d=\"M80 32V64H112L80 32Z\" fill={hues.orange[400].hex} />\n      <path d=\"M112 0V32H144L112 0Z\" fill={hues.magenta[400].hex} />\n      <path d=\"M192 0L160 32H192V0Z\" fill={hues.yellow[200].hex} />\n      <path d=\"M192 32H160L192 64V32Z\" fill={hues.orange[400].hex} />\n      <path d=\"M224 32H192V64L224 32Z\" fill={hues.green[300].hex} />\n      <path d=\"M192 0V32H224L192 0Z\" fill={hues.blue[300].hex} />\n      <path d=\"M272 0L240 32H272V0Z\" fill={hues.purple[300].hex} />\n      <path d=\"M304 32L272 64H304V32Z\" fill={hues.magenta[400].hex} />\n      <path d=\"M272 32H240L272 64V32Z\" fill={hues.blue[300].hex} />\n      <path d=\"M304 32H272V64L304 32Z\" fill={hues.yellow[200].hex} />\n      <path d=\"M272 0V32H304L272 0Z\" fill={hues.green[300].hex} />\n    </svg>\n  )\n})\n","import {hues} from '@sanity/color'\nimport {forwardRef} from 'react'\n\n/**\n * @public\n */\nexport const GroqMonogram = forwardRef(function GroqMonogram(\n  props: React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>\n) {\n  return (\n    <svg\n      data-sanity-icon=\"groq-monogram\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 128 128\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={ref}\n    >\n      <rect width=\"128\" height=\"128\" rx=\"8\" fill={hues.green[950].hex} />\n      <rect y=\"32\" width=\"64\" height=\"64\" fill={hues.green[800].hex} />\n      <path d=\"M64 32L32 64H64V32Z\" fill={hues.magenta[400].hex} />\n      <path d=\"M64 64H32L64 96V64Z\" fill={hues.green[300].hex} />\n      <path d=\"M96 64H64V96L96 64Z\" fill={hues.purple[300].hex} />\n    </svg>\n  )\n})\n","import {hues, white} from '@sanity/color'\nimport {forwardRef} from 'react'\n\n/**\n * @public\n */\nexport interface SanityLogoProps {\n  dark?: boolean\n}\n\nconst schemes = {\n  light: [hues.red[200].hex, hues.red[300].hex, hues.red[500].hex],\n  dark: [hues.gray[500].hex, hues.gray[300].hex, white.hex],\n}\n\n/**\n * @public\n */\nexport const SanityLogo = forwardRef(function SanityLogo(\n  props: SanityLogoProps & React.SVGProps<SVGSVGElement>,\n  ref: React.Ref<SVGSVGElement>\n) {\n  const {dark, ...svgProps} = props\n  const scheme = schemes[dark ? 'dark' : 'light']\n\n  return (\n    <svg\n      data-sanity-icon=\"sanity-logo\"\n      height=\"1em\"\n      viewBox=\"0 0 352 100\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...svgProps}\n      ref={ref}\n    >\n      <path d=\"M311.14 57.234V80.0016H298.499V57.234\" fill={scheme[1]} />\n      <path d=\"M298.499 57.2341L319.889 20.0017H333.316L311.14 57.2341H298.499Z\" fill={scheme[2]} />\n      <path\n        d=\"M298.499 57.2341L276.515 20.0017H290.345L305.239 45.5161L298.499 57.2341Z\"\n        fill={scheme[1]}\n      />\n      <path d=\"M253.839 40.9625V80.0017H241.007V47.6275L253.839 40.9625Z\" fill={scheme[1]} />\n      <path\n        d=\"M241.007 47.5944L273.538 30.9469L268.042 21.6519L241.007 34.8633V47.5944Z\"\n        fill={scheme[0]}\n      />\n      <path\n        d=\"M241.007 30.9469H221.404V20.0017H267.064L273.538 30.9469H253.839H241.007Z\"\n        fill={scheme[2]}\n      />\n      <path d=\"M214.047 20.0017H201.311V80.0121H214.047V20.0017Z\" fill={scheme[2]} />\n      <path d=\"M149.39 37.8712V80.0017H137.153V20.0017L149.39 37.8712Z\" fill={scheme[1]} />\n      <path\n        d=\"M151.282 20.0017L178.231 60.9939V80.0017L137.153 20.0017H151.282Z\"\n        fill={scheme[2]}\n      />\n      <path d=\"M178.231 57.9129V20.0017H190.467V80.0017H178.231V57.9129Z\" fill={scheme[1]} />\n      <path\n        d=\"M82.1168 80.9834L112.102 65.3053L108.405 55.7303L88.6644 64.9362L82.1168 80.9834Z\"\n        fill={scheme[0]}\n      />\n      <path\n        d=\"M100.657 35.5422L82.1167 80.9834L72.5807 72.7745L94.6719 20.0017L100.657 35.5422Z\"\n        fill={scheme[1]}\n      />\n      <path d=\"M94.672 20.0017H107.312L130.69 80.0017H117.752L94.672 20.0017Z\" fill={scheme[2]} />\n      <path\n        d=\"M25.1347 26.926C25.1347 35.2811 30.3864 40.2524 40.9004 42.8738L52.0417 45.4117C61.9923 47.6571 68.0519 53.2341 68.0519 62.3203C68.1293 66.2787 66.8194 70.1429 64.3417 73.2654C64.3417 64.2002 59.5684 59.302 48.0551 56.3568L37.1158 53.913C28.3559 51.9495 21.5946 47.3647 21.5946 37.4952C21.5485 33.6839 22.7939 29.9658 25.1347 26.926\"\n        fill={scheme[2]}\n      />\n      <path\n        d=\"M57.4954 60.0957C62.2475 63.0827 64.3311 67.2602 64.3311 73.255C60.3977 78.2054 53.4875 80.9834 45.3655 80.9834C31.6941 80.9834 22.1262 74.3725 20 62.8842H33.1292C34.8196 68.1584 39.2952 70.6022 45.2698 70.6022C52.5626 70.6022 57.4104 66.7798 57.506 60.0748\"\n        fill={scheme[1]}\n      />\n      <path\n        d=\"M31.9598 39.3124C29.7898 38.0455 28.0095 36.225 26.8079 34.0442C25.6062 31.8634 25.028 29.4036 25.1347 26.926C28.93 22.0174 35.5318 19.02 43.5794 19.02C57.506 19.02 65.5643 26.2472 67.5523 36.4195H54.9227C53.53 32.409 50.0431 29.2863 43.6858 29.2863C36.8926 29.2863 32.2575 33.1715 31.9917 39.3124\"\n        fill={scheme[1]}\n      />\n    </svg>\n  )\n})\n","import {hues, white} from '@sanity/color'\nimport {forwardRef} from 'react'\n\n/**\n * @public\n */\nexport interface SanityMonogramColor {\n  bg1: string\n  bg2: string\n  fg: string\n}\n\n/**\n * @public\n */\nexport interface SanityMonogramProps {\n  color?: SanityMonogramColor\n}\n\nconst SANITY_MONOGRAM_COLOR: SanityMonogramColor = {\n  bg1: hues.red[500].hex,\n  bg2: hues.red[200].hex,\n  fg: white.hex,\n}\n\n/**\n * @public\n */\nexport const SanityMonogram = forwardRef(function SanityMonogram(\n  props: SanityMonogramProps & Omit<React.SVGProps<SVGSVGElement>, 'color'>,\n  ref: React.Ref<SVGSVGElement>\n) {\n  const {color = SANITY_MONOGRAM_COLOR, ...restProps} = props\n\n  return (\n    <svg\n      data-sanity-icon=\"sanity-monogram\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 128 128\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...restProps}\n      ref={ref}\n    >\n      <rect width=\"128\" height=\"128\" rx=\"8\" fill={color.bg1} />\n      <path\n        d=\"M39.423 33.163C39.423 44.1615 46.3363 50.7056 60.1768 54.1564L74.843 57.4972C87.9418 60.453 95.9186 67.7945 95.9186 79.7554C96.0205 84.9662 94.2961 90.0531 91.0345 94.1635C91.0345 82.2301 84.751 75.7822 69.595 71.9052L55.1948 68.6882C43.6633 66.1035 34.7629 60.0681 34.7629 47.0761C34.7022 42.0589 36.3416 37.1644 39.423 33.163\"\n        fill={color.fg}\n      />\n      <path\n        d=\"M82.0221 76.827C88.2776 80.759 91.0206 86.2582 91.0206 94.1497C85.8426 100.666 76.7462 104.323 66.0545 104.323C48.0576 104.323 35.4626 95.6207 32.6637 80.4977H49.9468C52.172 87.4406 58.0636 90.6576 65.9285 90.6576C75.5287 90.6576 81.9102 85.6258 82.0361 76.7995\"\n        fill={color.bg2}\n      />\n      <path\n        d=\"M48.4075 49.4682C45.551 47.8004 43.2074 45.404 41.6256 42.5332C40.0437 39.6624 39.2826 36.4244 39.4231 33.1629C44.4191 26.7013 53.1096 22.7556 63.7034 22.7556C82.0362 22.7556 92.6439 32.2693 95.2609 45.66H78.6355C76.8022 40.3807 72.2121 36.27 63.8434 36.27C54.9009 36.27 48.7993 41.3843 48.4495 49.4682\"\n        fill={color.bg2}\n      />\n    </svg>\n  )\n})\n"],"names":["GroqLogo","forwardRef","props","ref","jsxs","height","viewBox","fill","xmlns","children","jsx","d","hues","magenta","hex","green","purple","yellow","blue","orange","GroqMonogram","width","rx","y","schemes","light","red","dark","gray","white","SanityLogo","svgProps","scheme","SANITY_MONOGRAM_COLOR","bg1","bg2","fg","SanityMonogram","color","restProps"],"mappings":"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"}